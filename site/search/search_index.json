{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u00a1Bienvenid@s! \u00b6 El presente espacio pretende ser una gu\u00eda introductoria para quienes est\u00e1n comenzando a dar los primeros pasos en el dise\u00f1o web, particularemente, en el \u00e1rea de Front-End. Prof. Ra\u00fal Jes\u00fas L\u00f3pez Telegram t.me/rauljesus Correo Electr\u00f3nico rjlopez itel.edu.ar profesor rauljesus.xyz \u00a1Happy coding!","title":"Inicio"},{"location":"#bienvenids","text":"El presente espacio pretende ser una gu\u00eda introductoria para quienes est\u00e1n comenzando a dar los primeros pasos en el dise\u00f1o web, particularemente, en el \u00e1rea de Front-End. Prof. Ra\u00fal Jes\u00fas L\u00f3pez Telegram t.me/rauljesus Correo Electr\u00f3nico rjlopez itel.edu.ar profesor rauljesus.xyz \u00a1Happy coding!","title":"\u00a1Bienvenid@s!"},{"location":"bootstrap/","text":"Bootstrap \u00b6 Existen m\u00faltiples herramientas \"prefabricadas\" que nos echan una mano a la hora de construir nuestros sitios web. Una de estas soluciones -ampliamente difundida- conocidas tambi\u00e9n como frameworks o marcos de trabajo es Bootstrap . Originalmente desarrollado por empleados de Twitter , Bootstrap combina CSS y Javascript para ofrecer una serie de plantillas o estilos predefinidos para diversos elementos del dise\u00f1o web como tipograf\u00eda, formularios, botones, cuadros, men\u00fas de navegaci\u00f3n, etc. Bootstrap fue creado seg\u00fan los preceptos de la corriente Mobile First es decir, con el desarrollo para m\u00f3viles como punto de partida. Por esta raz\u00f3n, desde sus inicios ha estado orientado al dise\u00f1o web adaptable (o responsivo ) brindando un sistema de rejilla (o grid) que facilita en gran medida la labor de maquetaci\u00f3n para m\u00faltiples pantallas y dispositivos. En s\u00edntesis, se trata de un conjunto de herramientas aplicables al dise\u00f1o web font-end que facilitan la tarea del dise\u00f1ador web. Frameworks Existe una cantidad ingente de frameworks (en n\u00famero y caracter\u00edsticas que ofrecen) tanto para el desarrollo front-end como back-end . He aqu\u00ed una lista -para nada exhastiva- de frameworks para CSS y Javascript: CSS Animate.css HTML Boilerplate Bulma CSShake Easing Functions Cheat Sheet Foundation Gridlex GroundworkCSS Materialize Metro MUI Pure.css Repaintless.css Semantic-UI Skeleton Spectre.css UIkit Javascript Dojo Toolkit Durandal jQuery Lodash multiScroll.js Prototype Scroll Magic Superscrollorama Umbrella JS Zepto.js Inclusive, existen frameworks como Modernizr que permiten aseguar la compatibilidad de los est\u00e1ndares web con los navegadores antiguos que por defecto no los soportan.","title":"Introducci\u00f3n"},{"location":"bootstrap/#bootstrap","text":"Existen m\u00faltiples herramientas \"prefabricadas\" que nos echan una mano a la hora de construir nuestros sitios web. Una de estas soluciones -ampliamente difundida- conocidas tambi\u00e9n como frameworks o marcos de trabajo es Bootstrap . Originalmente desarrollado por empleados de Twitter , Bootstrap combina CSS y Javascript para ofrecer una serie de plantillas o estilos predefinidos para diversos elementos del dise\u00f1o web como tipograf\u00eda, formularios, botones, cuadros, men\u00fas de navegaci\u00f3n, etc. Bootstrap fue creado seg\u00fan los preceptos de la corriente Mobile First es decir, con el desarrollo para m\u00f3viles como punto de partida. Por esta raz\u00f3n, desde sus inicios ha estado orientado al dise\u00f1o web adaptable (o responsivo ) brindando un sistema de rejilla (o grid) que facilita en gran medida la labor de maquetaci\u00f3n para m\u00faltiples pantallas y dispositivos. En s\u00edntesis, se trata de un conjunto de herramientas aplicables al dise\u00f1o web font-end que facilitan la tarea del dise\u00f1ador web. Frameworks Existe una cantidad ingente de frameworks (en n\u00famero y caracter\u00edsticas que ofrecen) tanto para el desarrollo front-end como back-end . He aqu\u00ed una lista -para nada exhastiva- de frameworks para CSS y Javascript: CSS Animate.css HTML Boilerplate Bulma CSShake Easing Functions Cheat Sheet Foundation Gridlex GroundworkCSS Materialize Metro MUI Pure.css Repaintless.css Semantic-UI Skeleton Spectre.css UIkit Javascript Dojo Toolkit Durandal jQuery Lodash multiScroll.js Prototype Scroll Magic Superscrollorama Umbrella JS Zepto.js Inclusive, existen frameworks como Modernizr que permiten aseguar la compatibilidad de los est\u00e1ndares web con los navegadores antiguos que por defecto no los soportan.","title":"Bootstrap"},{"location":"bootstrap/alignch/","text":"Alineaci\u00f3n de columnas en el eje horizontal \u00b6 Es posible alinear las cajas en el eje principal mediante sencillas clases provistas por Bootstrap. Uso de la clase d-flex No es necesario crear un contenedor con la clase d-flex para poder aplicar las siguientes propiedades de Flexbox en Bootstrap. Distribuir horizontalmente todas las columnas de una fila \u00b6 Para hacerlo, recuriremos a la propiedad justify-content de Flexbox, dentro de una fila ( row ). justify-content Los valores que puede tomar esta propiedad son: justify-content-start (por defecto) justify-content-center justify-content-end justify-content-between justify-content-around Veamoslo mejor con un ejemplo de aplicaci\u00f3n: <!DOCTYPE html> < html lang = \"es\" > <!-- Bootstrap 4.1 | JQuery 3.3.1 | Popper 1.14.3 --> < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < link rel = \"stylesheet\" href = \"css/estilos.css\" > < title > Plantilla </ title > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . row { background-color : grey ; margin : 30 px 0 0 0 ; } . columna { background-color : ghostwhite ; border : 1 px solid gray ; text-align : center ; padding : 10 px ;; } </ style > </ head > < body > <!-- Inicio del contenedor de Bootstrap--> < div class = \"container\" > < div class = \"row justify-content-start\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > < div class = \"row justify-content-center\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > < div class = \"row justify-content-end\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > < div class = \"row justify-content-between\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > < div class = \"row justify-content-around\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n] Offset \u00b6 Es posible terminar de manera \"manual\" el espaciado de las columnas, tambi\u00e9n llamado offset . Es importante tener en cuenta las caracter\u00edsticas de dicho espaciado, a fin de emplearlo de manera adecuada en nuestros dise\u00f1os: El espaciado se efect\u00faa a la izquiera de la columna El espaciado se mide en \"columnas\" de la grid Veamos un el siguiente ejemplo de aplicaci\u00f3n: <!DOCTYPE html> < html lang = \"es\" > <!-- Bootstrap 4.1 | JQuery 3.3.1 | Popper 1.14.3 --> < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < link rel = \"stylesheet\" href = \"css/estilos.css\" > < title > Plantilla </ title > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . row { background-color : grey ; margin : 30 px 0 0 0 ; } . col , . col-2 { background-color : ghostwhite ; border : 1 px solid gray ; text-align : center ; padding : 10 px ;; } </ style > </ head > < body > <!-- Inicio del contenedor de Bootstrap--> < div class = \"container\" > < div class = \"row\" > < div class = \"col-2 offset-1\" > Columna (offset-1) </ div > </ div > < div class = \"row\" > < div class = \"col-2 offset-5\" > Columna (offset-5) </ div > </ div > < div class = \"row\" > < div class = \"col offset-2\" > Columna (offset-2) </ div > </ div > < div class = \"row\" > < div class = \"col-2 offset-2\" > Columna 1 (offset-2) </ div > < div class = \"col-2 offset-1\" > Columna 2 (offset-1) </ div > < div class = \"col-2 offset-3\" > Columna 3 (offset-3) </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ]","title":"Eje principal"},{"location":"bootstrap/alignch/#alineacion-de-columnas-en-el-eje-horizontal","text":"Es posible alinear las cajas en el eje principal mediante sencillas clases provistas por Bootstrap. Uso de la clase d-flex No es necesario crear un contenedor con la clase d-flex para poder aplicar las siguientes propiedades de Flexbox en Bootstrap.","title":"Alineaci\u00f3n de columnas en el eje horizontal"},{"location":"bootstrap/alignch/#distribuir-horizontalmente-todas-las-columnas-de-una-fila","text":"Para hacerlo, recuriremos a la propiedad justify-content de Flexbox, dentro de una fila ( row ). justify-content Los valores que puede tomar esta propiedad son: justify-content-start (por defecto) justify-content-center justify-content-end justify-content-between justify-content-around Veamoslo mejor con un ejemplo de aplicaci\u00f3n: <!DOCTYPE html> < html lang = \"es\" > <!-- Bootstrap 4.1 | JQuery 3.3.1 | Popper 1.14.3 --> < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < link rel = \"stylesheet\" href = \"css/estilos.css\" > < title > Plantilla </ title > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . row { background-color : grey ; margin : 30 px 0 0 0 ; } . columna { background-color : ghostwhite ; border : 1 px solid gray ; text-align : center ; padding : 10 px ;; } </ style > </ head > < body > <!-- Inicio del contenedor de Bootstrap--> < div class = \"container\" > < div class = \"row justify-content-start\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > < div class = \"row justify-content-center\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > < div class = \"row justify-content-end\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > < div class = \"row justify-content-between\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > < div class = \"row justify-content-around\" > < div class = \"col-2 columna\" > Columna 1 </ div > < div class = \"col-2 columna\" > Columna 2 </ div > < div class = \"col-2 columna\" > Columna 3 </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n]","title":"Distribuir horizontalmente todas las columnas de una fila"},{"location":"bootstrap/alignch/#offset","text":"Es posible terminar de manera \"manual\" el espaciado de las columnas, tambi\u00e9n llamado offset . Es importante tener en cuenta las caracter\u00edsticas de dicho espaciado, a fin de emplearlo de manera adecuada en nuestros dise\u00f1os: El espaciado se efect\u00faa a la izquiera de la columna El espaciado se mide en \"columnas\" de la grid Veamos un el siguiente ejemplo de aplicaci\u00f3n: <!DOCTYPE html> < html lang = \"es\" > <!-- Bootstrap 4.1 | JQuery 3.3.1 | Popper 1.14.3 --> < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < link rel = \"stylesheet\" href = \"css/estilos.css\" > < title > Plantilla </ title > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . row { background-color : grey ; margin : 30 px 0 0 0 ; } . col , . col-2 { background-color : ghostwhite ; border : 1 px solid gray ; text-align : center ; padding : 10 px ;; } </ style > </ head > < body > <!-- Inicio del contenedor de Bootstrap--> < div class = \"container\" > < div class = \"row\" > < div class = \"col-2 offset-1\" > Columna (offset-1) </ div > </ div > < div class = \"row\" > < div class = \"col-2 offset-5\" > Columna (offset-5) </ div > </ div > < div class = \"row\" > < div class = \"col offset-2\" > Columna (offset-2) </ div > </ div > < div class = \"row\" > < div class = \"col-2 offset-2\" > Columna 1 (offset-2) </ div > < div class = \"col-2 offset-1\" > Columna 2 (offset-1) </ div > < div class = \"col-2 offset-3\" > Columna 3 (offset-3) </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ]","title":"Offset"},{"location":"bootstrap/alignci/","text":"Alineaci\u00f3n de columnas \u00b6 Gracias a la implementaci\u00f3n de Flexbox en CSS3 y que Bootstrap 4 incorpora, ahora es posible -entre otras cuestiones- alinear las columnas tanto verticalmente como horizontalmete de forma sencilla. Se lleva as\u00ed la maquetaci\u00f3n web a un nuevo nivel, empleando cajas flexibles (de all\u00ed su nombre), evitando el uso de propiedades como float . El modelo de Flexbox \u00b6 Se basa en dos elementos: El contenedor padre \u00f3 flex container El contenido hijo \u00f3 flex items Veamos un ejemplo gr\u00e1fico a continuaci\u00f3n para comprender mejor el concepto: Y ahora, en un ejemplo real: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . caja1 , . caja2 , . caja3 , . caja4 { margin : 20 px 0 0 0 ; padding : 15 px ; } . caja1 { background-color : yellow ; } . caja2 { background-color : aquamarine ; } . caja3 { background : pink ; } . caja4 { background : skyblue ; } </ style > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col\" > < div class = \"d-flex\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n] Adem\u00e1s, la alineaci\u00f3n de los hijos se realiza sobre unos ejes -principal y secundario-: La imagen de arriba ilustra el comportamiento de los ejes por defecto. Sin embargo, tanto el eje principal (main) como el secundario (cross) pueden invertirse mediante clases de Flexbox. Veamos un ejemplo: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . caja1 , . caja2 , . caja3 , . caja4 { margin : 20 px 0 0 0 ; padding : 15 px ; } . caja1 { background-color : yellow ; } . caja2 { background-color : aquamarine ; } . caja3 { background : pink ; } . caja4 { background : skyblue ; } </ style > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col\" > < div class = \"d-flex flex-row\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > < div class = \"d-flex flex-column\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > < div class = \"d-flex flex-row-reverse\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > < div class = \"d-flex flex-column-reverse\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n]","title":"Flexbox"},{"location":"bootstrap/alignci/#alineacion-de-columnas","text":"Gracias a la implementaci\u00f3n de Flexbox en CSS3 y que Bootstrap 4 incorpora, ahora es posible -entre otras cuestiones- alinear las columnas tanto verticalmente como horizontalmete de forma sencilla. Se lleva as\u00ed la maquetaci\u00f3n web a un nuevo nivel, empleando cajas flexibles (de all\u00ed su nombre), evitando el uso de propiedades como float .","title":"Alineaci\u00f3n de columnas"},{"location":"bootstrap/alignci/#el-modelo-de-flexbox","text":"Se basa en dos elementos: El contenedor padre \u00f3 flex container El contenido hijo \u00f3 flex items Veamos un ejemplo gr\u00e1fico a continuaci\u00f3n para comprender mejor el concepto: Y ahora, en un ejemplo real: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . caja1 , . caja2 , . caja3 , . caja4 { margin : 20 px 0 0 0 ; padding : 15 px ; } . caja1 { background-color : yellow ; } . caja2 { background-color : aquamarine ; } . caja3 { background : pink ; } . caja4 { background : skyblue ; } </ style > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col\" > < div class = \"d-flex\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n] Adem\u00e1s, la alineaci\u00f3n de los hijos se realiza sobre unos ejes -principal y secundario-: La imagen de arriba ilustra el comportamiento de los ejes por defecto. Sin embargo, tanto el eje principal (main) como el secundario (cross) pueden invertirse mediante clases de Flexbox. Veamos un ejemplo: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . caja1 , . caja2 , . caja3 , . caja4 { margin : 20 px 0 0 0 ; padding : 15 px ; } . caja1 { background-color : yellow ; } . caja2 { background-color : aquamarine ; } . caja3 { background : pink ; } . caja4 { background : skyblue ; } </ style > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col\" > < div class = \"d-flex flex-row\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > < div class = \"d-flex flex-column\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > < div class = \"d-flex flex-row-reverse\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > < div class = \"d-flex flex-column-reverse\" > < div class = \"caja1\" > Caja 1 </ div > < div class = \"caja2\" > Caja 2 </ div > < div class = \"caja3\" > Caja 3 </ div > </ div > </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n]","title":"El modelo de Flexbox"},{"location":"bootstrap/aligncv/","text":"Alineaci\u00f3n de columnas en el eje secundario \u00b6 Por Default las columnas ocupan todo el alto de su contenedor padre. Es posible modificar esto utilizando las reglas de alineaci\u00f3n que veremos en este apartado. Uso de la clase d-flex No es necesario crear un contenedor con la clase d-flex para poder aplicar las siguientes propiedades de Flexbox en Bootstrap. Alinear veticalmente todas las columnas de una fila \u00b6 Podemos alinear todas las columnas (a la vez) que est\u00e1n dentro de una fila, usando la propiedad align-items dentro de la fila ( row ). align-items Los valores que puede tomar esta propiedad son: align-items-start (por defecto) align-items-center align-items-end Veamos un ejemplo para comprenderlo mejor: <!DOCTYPE html> < html lang = \"es\" > <!-- Bootstrap 4.1 | JQuery 3.3.1 | Popper 1.14.3 --> < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < link rel = \"stylesheet\" href = \"css/estilos.css\" > < title > Plantilla </ title > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . row { height : 130 px ; background-color : grey ; margin : 30 px 0 0 0 ; } . col { background-color : ghostwhite ; border : 1 px solid gray ; text-align : center ; padding : 15 px ;; } </ style > </ head > < body > <!-- Inicio del contenedor de Bootstrap--> < div class = \"container\" > <!-- Fila 1 --> < div class = \"row align-items-start\" > < div class = \"col\" > Columna 1 </ div > < div class = \"col\" > Columna 2 </ div > < div class = \"col\" > Columna 3 </ div > </ div > <!-- Fila 2 --> < div class = \"row align-items-center\" > < div class = \"col\" > Columna 1 </ div > < div class = \"col\" > Columna 2 </ div > < div class = \"col\" > Columna 3 </ div > </ div > <!-- Fila 3 --> < div class = \"row align-items-end\" > < div class = \"col\" > Columna 1 </ div > < div class = \"col\" > Columna 2 </ div > < div class = \"col\" > Columna 3 </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n] Alinear veticalmente cada columna de una fila \u00b6 Tambi\u00e9n podemos alinear cada columna de manera individual, empleando la propiedad align-self dentro de cada columna ( col ). align-self Los valores que puede tomar esta propiedad son: align-self-start (por defecto) align-self-center align-self-end Nuevamente, conviene visualizar en un ejemplo: <!DOCTYPE html> < html lang = \"es\" > <!-- Bootstrap 4.1 | JQuery 3.3.1 | Popper 1.14.3 --> < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < link rel = \"stylesheet\" href = \"css/estilos.css\" > < title > Plantilla </ title > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . row { height : 165 px ; background-color : grey ; margin : 30 px 0 0 0 ; } . col { background-color : ghostwhite ; border : 1 px solid gray ; text-align : center ; padding : 15 px ;; } </ style > </ head > < body > <!-- Inicio del contenedor de Bootstrap--> < div class = \"container\" > < div class = \"row\" > < div class = \"col align-self-start\" > Columna 1 </ div > < div class = \"col align-self-center\" > Columna 2 </ div > < div class = \"col align-self-end\" > Columna 3 </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n]","title":"Eje secundario"},{"location":"bootstrap/aligncv/#alineacion-de-columnas-en-el-eje-secundario","text":"Por Default las columnas ocupan todo el alto de su contenedor padre. Es posible modificar esto utilizando las reglas de alineaci\u00f3n que veremos en este apartado. Uso de la clase d-flex No es necesario crear un contenedor con la clase d-flex para poder aplicar las siguientes propiedades de Flexbox en Bootstrap.","title":"Alineaci\u00f3n de columnas en el eje secundario"},{"location":"bootstrap/aligncv/#alinear-veticalmente-todas-las-columnas-de-una-fila","text":"Podemos alinear todas las columnas (a la vez) que est\u00e1n dentro de una fila, usando la propiedad align-items dentro de la fila ( row ). align-items Los valores que puede tomar esta propiedad son: align-items-start (por defecto) align-items-center align-items-end Veamos un ejemplo para comprenderlo mejor: <!DOCTYPE html> < html lang = \"es\" > <!-- Bootstrap 4.1 | JQuery 3.3.1 | Popper 1.14.3 --> < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < link rel = \"stylesheet\" href = \"css/estilos.css\" > < title > Plantilla </ title > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . row { height : 130 px ; background-color : grey ; margin : 30 px 0 0 0 ; } . col { background-color : ghostwhite ; border : 1 px solid gray ; text-align : center ; padding : 15 px ;; } </ style > </ head > < body > <!-- Inicio del contenedor de Bootstrap--> < div class = \"container\" > <!-- Fila 1 --> < div class = \"row align-items-start\" > < div class = \"col\" > Columna 1 </ div > < div class = \"col\" > Columna 2 </ div > < div class = \"col\" > Columna 3 </ div > </ div > <!-- Fila 2 --> < div class = \"row align-items-center\" > < div class = \"col\" > Columna 1 </ div > < div class = \"col\" > Columna 2 </ div > < div class = \"col\" > Columna 3 </ div > </ div > <!-- Fila 3 --> < div class = \"row align-items-end\" > < div class = \"col\" > Columna 1 </ div > < div class = \"col\" > Columna 2 </ div > < div class = \"col\" > Columna 3 </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n]","title":"Alinear veticalmente todas las columnas de una fila"},{"location":"bootstrap/aligncv/#alinear-veticalmente-cada-columna-de-una-fila","text":"Tambi\u00e9n podemos alinear cada columna de manera individual, empleando la propiedad align-self dentro de cada columna ( col ). align-self Los valores que puede tomar esta propiedad son: align-self-start (por defecto) align-self-center align-self-end Nuevamente, conviene visualizar en un ejemplo: <!DOCTYPE html> < html lang = \"es\" > <!-- Bootstrap 4.1 | JQuery 3.3.1 | Popper 1.14.3 --> < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < link rel = \"stylesheet\" href = \"css/estilos.css\" > < title > Plantilla </ title > < style > /* Estilos CSS para visualizar mejor el ejemplo */ . row { height : 165 px ; background-color : grey ; margin : 30 px 0 0 0 ; } . col { background-color : ghostwhite ; border : 1 px solid gray ; text-align : center ; padding : 15 px ;; } </ style > </ head > < body > <!-- Inicio del contenedor de Bootstrap--> < div class = \"container\" > < div class = \"row\" > < div class = \"col align-self-start\" > Columna 1 </ div > < div class = \"col align-self-center\" > Columna 2 </ div > < div class = \"col align-self-end\" > Columna 3 </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [\u00a1Intentalo!] [Soluci\u00f3n]","title":"Alinear veticalmente cada columna de una fila"},{"location":"bootstrap/ejercicios/","text":"Ejercicios de Boostrap 4 \u00b6 Se listan a continuaci\u00f3n una serie de ejercios que abarcan los fundamentos te\u00f3ricos expuestos en presente documentaci\u00f3n. La mayor\u00eda de los ejercicios comienza con un c\u00f3digo disponible para la descarga el cu\u00e1l deber\u00e1s modificar para obtener lo pedido en cada consigna. Dise\u00f1o adaptable \u00b6 [1] Dadas tres columnas de contenido, modific\u00e1 el c\u00f3digo HTML incluyendo las clases CSS necesarias para llegar a: Extra peque\u00f1o Mediano Largo Columna 1 12 12 12 Columna 2 12 6 4 Columna 3 12 6 4 [ Descarg\u00e1 el ejercicio ] [ Soluci\u00f3n ] [2] Dadas cuatro columnas de contenido, modific\u00e1 el c\u00f3digo HTML incluyendo las clases CSS necesarias para llegar a: Extra peque\u00f1o Peque\u00f1o Mediano Largo Extra largo Columna 1 12 12 12 12 3 Columna 2 12 12 6 4 3 Columna 3 12 6 6 4 3 Columna 4 12 6 12 4 3 [ Descarg\u00e1 el ejercicio ] [ Soluci\u00f3n ] [3] Realiz\u00e1 los ejemplos de dise\u00f1o responsivo que encontrar\u00e1s en las im\u00e1genes (tomado de https://ajgallego.gitbooks.io ). [ Descarg\u00e1 el ejercicio ] [4] Realiz\u00e1 los ejemplos de dise\u00f1o responsivo que encontrar\u00e1s en las im\u00e1genes. [ Descarg\u00e1 el ejercicio ] [4] Realiz\u00e1 los ejemplos de dise\u00f1o responsivo que encontrar\u00e1s en las im\u00e1genes. [ Descarg\u00e1 el ejercicio ] [5] Realiz\u00e1 el dise\u00f1o de la imagen, a fin de peacticar alineaci\u00f3n de columnas. [ Descarg\u00e1 el ejercicio ] Elementos \u00b6 {En construcci\u00f3n} Grid \u00b6 {En construcci\u00f3n}","title":"Ejercicios"},{"location":"bootstrap/ejercicios/#ejercicios-de-boostrap-4","text":"Se listan a continuaci\u00f3n una serie de ejercios que abarcan los fundamentos te\u00f3ricos expuestos en presente documentaci\u00f3n. La mayor\u00eda de los ejercicios comienza con un c\u00f3digo disponible para la descarga el cu\u00e1l deber\u00e1s modificar para obtener lo pedido en cada consigna.","title":"Ejercicios de Boostrap 4"},{"location":"bootstrap/ejercicios/#diseno-adaptable","text":"[1] Dadas tres columnas de contenido, modific\u00e1 el c\u00f3digo HTML incluyendo las clases CSS necesarias para llegar a: Extra peque\u00f1o Mediano Largo Columna 1 12 12 12 Columna 2 12 6 4 Columna 3 12 6 4 [ Descarg\u00e1 el ejercicio ] [ Soluci\u00f3n ] [2] Dadas cuatro columnas de contenido, modific\u00e1 el c\u00f3digo HTML incluyendo las clases CSS necesarias para llegar a: Extra peque\u00f1o Peque\u00f1o Mediano Largo Extra largo Columna 1 12 12 12 12 3 Columna 2 12 12 6 4 3 Columna 3 12 6 6 4 3 Columna 4 12 6 12 4 3 [ Descarg\u00e1 el ejercicio ] [ Soluci\u00f3n ] [3] Realiz\u00e1 los ejemplos de dise\u00f1o responsivo que encontrar\u00e1s en las im\u00e1genes (tomado de https://ajgallego.gitbooks.io ). [ Descarg\u00e1 el ejercicio ] [4] Realiz\u00e1 los ejemplos de dise\u00f1o responsivo que encontrar\u00e1s en las im\u00e1genes. [ Descarg\u00e1 el ejercicio ] [4] Realiz\u00e1 los ejemplos de dise\u00f1o responsivo que encontrar\u00e1s en las im\u00e1genes. [ Descarg\u00e1 el ejercicio ] [5] Realiz\u00e1 el dise\u00f1o de la imagen, a fin de peacticar alineaci\u00f3n de columnas. [ Descarg\u00e1 el ejercicio ]","title":"Dise\u00f1o adaptable"},{"location":"bootstrap/ejercicios/#elementos","text":"{En construcci\u00f3n}","title":"Elementos"},{"location":"bootstrap/ejercicios/#grid","text":"{En construcci\u00f3n}","title":"Grid"},{"location":"bootstrap/gridIntroduccion/","text":"El sistema de rejilla o Grid system de Bootstrap \u00b6 En los inicios de internet, los diversos elementos que conforman una p\u00e1gina web se organizaban empleando tablas HTML. M\u00e1s tarde, el uso de tablas se dej\u00f3 de lado por las cajas flotantes CSS. Al d\u00eda de hoy, con la llegada de CSS 3, los dise\u00f1adores web hacen uso del m\u00f3dulo Flexbox CSS. Botstrap toma lo mejor de este m\u00f3dulo y le suma un conjunto de \"buenas pr\u00e1cticas\" de dise\u00f1o que confluyen en el poderoso sistema de rejilla o grid . \u00bfEn qu\u00e9 consiste la grid de Bootstrap? \u00b6 B\u00e1sicamente consiste en 12 columnas que se emplean a modo de gu\u00edas \"invisibles\" para ubicar los distintos elementos de una p\u00e1gina web. Ventajas del sistema de rejilla a la hora de maquetar \u00b6 El sistema de rejilla o grid que proporciona el framework Bootstrap permite: distribuir los elementos del sitio web f\u00e1cilmente (maquetaci\u00f3n del sitio web) crear un \u00fanico sitio web que, empezando por la pantalla de un m\u00f3vil, se adapte de manera \"inteligente\" a las pantallas de los distintos dispositivos. Esta t\u00e9cnica se conoce tambi\u00e9n como dise\u00f1o web responsivo o responsive web design . Imagen: credofy.com","title":"Introducci\u00f3n"},{"location":"bootstrap/gridIntroduccion/#el-sistema-de-rejilla-o-grid-system-de-bootstrap","text":"En los inicios de internet, los diversos elementos que conforman una p\u00e1gina web se organizaban empleando tablas HTML. M\u00e1s tarde, el uso de tablas se dej\u00f3 de lado por las cajas flotantes CSS. Al d\u00eda de hoy, con la llegada de CSS 3, los dise\u00f1adores web hacen uso del m\u00f3dulo Flexbox CSS. Botstrap toma lo mejor de este m\u00f3dulo y le suma un conjunto de \"buenas pr\u00e1cticas\" de dise\u00f1o que confluyen en el poderoso sistema de rejilla o grid .","title":"El sistema de rejilla o Grid system de Bootstrap"},{"location":"bootstrap/gridIntroduccion/#en-que-consiste-la-grid-de-bootstrap","text":"B\u00e1sicamente consiste en 12 columnas que se emplean a modo de gu\u00edas \"invisibles\" para ubicar los distintos elementos de una p\u00e1gina web.","title":"\u00bfEn qu\u00e9 consiste la grid de Bootstrap?"},{"location":"bootstrap/gridIntroduccion/#ventajas-del-sistema-de-rejilla-a-la-hora-de-maquetar","text":"El sistema de rejilla o grid que proporciona el framework Bootstrap permite: distribuir los elementos del sitio web f\u00e1cilmente (maquetaci\u00f3n del sitio web) crear un \u00fanico sitio web que, empezando por la pantalla de un m\u00f3vil, se adapte de manera \"inteligente\" a las pantallas de los distintos dispositivos. Esta t\u00e9cnica se conoce tambi\u00e9n como dise\u00f1o web responsivo o responsive web design . Imagen: credofy.com","title":"Ventajas del sistema de rejilla a la hora de maquetar"},{"location":"bootstrap/gridReglas/","text":"Reglas \u00b6 Es preciso seguir una serie de reglas para emplear adecuadamente la grid y dem\u00e1s elementos ofrecidos por Bootstrap, las cuales podr\u00edan resumirse de modo general en: Bootstrap ofrece unas clases CCS predeterminadas para formar su grid Las clases deben emplearse en elementos en bloque (generalmente div ) El elemento padre, llamado contenedor, debe llevar la clase .container* Dentro de cada contenedor deben ubicarse las filas, mediante la clase .row* Dentro de una fila deben incluirse las columnas, mediante la clase .col* No es posible incluir contenido directamente dentro de un contenedor, ni dentro de las filas: s\u00f3lo las columnas pueden alojar contenido. No hay l\u00edmite -te\u00f3rico- para el n\u00famero de contenedores, filas y columnas A continuaci\u00f3n, profundicemos estas reglas mediante ejemplos visuales. Contenedor \u00b6 Bootstrap porporciona dos tipos de clase CSS para los contenedores: container : ocupa el centro del ancho de la pantalla con espacios iguales a cada lado .container-fluid : ocupa el 100% del ancho de la pantalla del dispositivo Las clases para contenedor deben a\u00f1adirse a un elemento en bloque, generalmente un div , para formar un contenedor. Contenedores y Contenido Como indicamos m\u00e1s arriba, los contenedores no pueden alojar Contenido directamente. Filas \u00b6 La clase CSS para una fila .row* debe a\u00f1adirse a un elemento en bloque, generalmente un div , para formar una fila. Las filas debe estar dentro de un elemento en bloque con la clase .container* Filas y Contenido Al igual que los contenedores, las filas tampoco pueden alojar Contenido directamente dentro suyo. Columnas \u00b6 La clase CSS para una columna .col* debe a\u00f1adirse a un elemento en bloque, generalmente un div , para formar una columna. Las columnas deben ubicarse siempre dentro de una fila. Tama\u00f1o de columna autom\u00e1tico \u00b6 En el ejemplo anterior, el ancho de cada columna se establece de manera autom\u00e1tica: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col\" > <!--Contenido--> </ div > < div class = \"col\" > <!--Contenido--> </ div > </ div > </ div > <!--Scripts--> < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Columas y Contenido Las columnas son los \u00fanicos elementos que pueden alojar directamente ontenido. Columnas autom\u00e1ticas En rigor, existe una clase en Bootstrap que permite que las columnas adopten un ancho autom\u00e1tico, es decir, que el ancho de la columna se ajuste autom\u00e1ticamente al contenido de la misma. Dicha clase es col-auto . Tama\u00f1o de columna fijo \u00b6 Adicionalmente puede determinarse el ancho de cada columna, indicando la cantidad de columnas de la grid para cada una de ellas, como puede visualizase en el siguiente ejemplo: Y el c\u00f3digo del ejemplo: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col-4\" > <!--Contenido--> </ div > < div class = \"col-8\" > <!--Contenido--> </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] M\u00e1s ejemplos del uso de la grid \u00b6 A continuaci\u00f3n se presentan algunos ejemplos de combinaci\u00f3n de contenedores, filas y columnas en la grid de Bootstrap. Rejilla con varias filas \u00b6 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col-4\" > <!--Contenido--> </ div > < div class = \"col-8\" > <!--Contenido--> </ div > </ div > < div class = \"row\" > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Rejilla con varios contenedores \u00b6 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > </ head > < body > < div class = \"container-fluid\" > < div class = \"row\" > < div class = \"col-12\" > <!--Contenido--> </ div > </ div > </ div > < div class = \"container\" > < div class = \"row\" > < div class = \"col-4\" > <!--Contenido--> </ div > < div class = \"col-8\" > <!--Contenido--> </ div > </ div > < div class = \"row\" > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ]","title":"Reglas"},{"location":"bootstrap/gridReglas/#reglas","text":"Es preciso seguir una serie de reglas para emplear adecuadamente la grid y dem\u00e1s elementos ofrecidos por Bootstrap, las cuales podr\u00edan resumirse de modo general en: Bootstrap ofrece unas clases CCS predeterminadas para formar su grid Las clases deben emplearse en elementos en bloque (generalmente div ) El elemento padre, llamado contenedor, debe llevar la clase .container* Dentro de cada contenedor deben ubicarse las filas, mediante la clase .row* Dentro de una fila deben incluirse las columnas, mediante la clase .col* No es posible incluir contenido directamente dentro de un contenedor, ni dentro de las filas: s\u00f3lo las columnas pueden alojar contenido. No hay l\u00edmite -te\u00f3rico- para el n\u00famero de contenedores, filas y columnas A continuaci\u00f3n, profundicemos estas reglas mediante ejemplos visuales.","title":"Reglas"},{"location":"bootstrap/gridReglas/#contenedor","text":"Bootstrap porporciona dos tipos de clase CSS para los contenedores: container : ocupa el centro del ancho de la pantalla con espacios iguales a cada lado .container-fluid : ocupa el 100% del ancho de la pantalla del dispositivo Las clases para contenedor deben a\u00f1adirse a un elemento en bloque, generalmente un div , para formar un contenedor. Contenedores y Contenido Como indicamos m\u00e1s arriba, los contenedores no pueden alojar Contenido directamente.","title":"Contenedor"},{"location":"bootstrap/gridReglas/#filas","text":"La clase CSS para una fila .row* debe a\u00f1adirse a un elemento en bloque, generalmente un div , para formar una fila. Las filas debe estar dentro de un elemento en bloque con la clase .container* Filas y Contenido Al igual que los contenedores, las filas tampoco pueden alojar Contenido directamente dentro suyo.","title":"Filas"},{"location":"bootstrap/gridReglas/#columnas","text":"La clase CSS para una columna .col* debe a\u00f1adirse a un elemento en bloque, generalmente un div , para formar una columna. Las columnas deben ubicarse siempre dentro de una fila.","title":"Columnas"},{"location":"bootstrap/gridReglas/#tamano-de-columna-automatico","text":"En el ejemplo anterior, el ancho de cada columna se establece de manera autom\u00e1tica: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col\" > <!--Contenido--> </ div > < div class = \"col\" > <!--Contenido--> </ div > </ div > </ div > <!--Scripts--> < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Columas y Contenido Las columnas son los \u00fanicos elementos que pueden alojar directamente ontenido. Columnas autom\u00e1ticas En rigor, existe una clase en Bootstrap que permite que las columnas adopten un ancho autom\u00e1tico, es decir, que el ancho de la columna se ajuste autom\u00e1ticamente al contenido de la misma. Dicha clase es col-auto .","title":"Tama\u00f1o de columna autom\u00e1tico"},{"location":"bootstrap/gridReglas/#tamano-de-columna-fijo","text":"Adicionalmente puede determinarse el ancho de cada columna, indicando la cantidad de columnas de la grid para cada una de ellas, como puede visualizase en el siguiente ejemplo: Y el c\u00f3digo del ejemplo: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col-4\" > <!--Contenido--> </ div > < div class = \"col-8\" > <!--Contenido--> </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ]","title":"Tama\u00f1o de columna fijo"},{"location":"bootstrap/gridReglas/#mas-ejemplos-del-uso-de-la-grid","text":"A continuaci\u00f3n se presentan algunos ejemplos de combinaci\u00f3n de contenedores, filas y columnas en la grid de Bootstrap.","title":"M\u00e1s ejemplos del uso de la grid"},{"location":"bootstrap/gridReglas/#rejilla-con-varias-filas","text":"<!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col-4\" > <!--Contenido--> </ div > < div class = \"col-8\" > <!--Contenido--> </ div > </ div > < div class = \"row\" > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ]","title":"Rejilla con varias filas"},{"location":"bootstrap/gridReglas/#rejilla-con-varios-contenedores","text":"<!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > </ head > < body > < div class = \"container-fluid\" > < div class = \"row\" > < div class = \"col-12\" > <!--Contenido--> </ div > </ div > </ div > < div class = \"container\" > < div class = \"row\" > < div class = \"col-4\" > <!--Contenido--> </ div > < div class = \"col-8\" > <!--Contenido--> </ div > </ div > < div class = \"row\" > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > < div class = \"col-3\" > <!--Contenido--> </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ]","title":"Rejilla con varios contenedores"},{"location":"bootstrap/gridResponsive/","text":"Dise\u00f1o web adaptable o Responsive web design \u00b6 La grid de Bootstrap emplea el poder las las media queries de CSS para establecer de qu\u00e9 manera el contenido se organizar\u00e1 en los distintos dispositivos. Sin embargo, no deja librada la tarea de organizar las media queries al dise\u00f1ador: ofrece unas clases CSS predefinidas que har\u00e1n el trabajo por \u00e9l. \u00bfC\u00f3mo funciona el dise\u00f1o adaptable? \u00b6 Imaginemos por un momento un sitio web cualquiera y como dise\u00f1adores necesitamos que el contenido del mismo se visualice bien en cualquier dispositivo. Utilizando la grid de Bootstrap podremos lograrlo. Prestemos atenci\u00f3n al siguiente ejemplo visual y particularmente a las cajas de colores que representan las distintas secciones de contenido del sitio web: Si observamos con atenci\u00f3n atenci\u00f3n a la imagen anterior habremos apreciado como el contenido del sitio web (representado por las cajas de colores) se \"reorganiz\u00f3\" para conseguir una mejor visualizaci\u00f3n dependiendo de la pantalla de cada dispositivo: Desktop (Pc de escritorio), Tablet y Mobile (Celular). Para cualquier caso, la grid ofrece 12 columnas para organizar el contenidos. Puntos de corte \u00b6 Para que el contenido de un sitio web sea adaptable, es decir, capaz de \"reorganizarse\" para mostrarse de la mejor manera en cada dispositivo, Bootstrap establece ciertos \"puntos de corte\" mediante el uso de clases CSS que establecen los l\u00edmites entre un tipo de pantalla y otra. Nombre L\u00edmites Dispositivo de ejemplo Nombre de la clase Extra small Menor que 576px Celular (vertical) .col Small Igual o mayor que 576px Celular (horizontal) .col-sm Medium Igual o mayor que 768px Tablet (vertical) .col-md Large Igual o mayor que 992px Tablet (horizontal) .col-lg Extra large Igual o mayor que 1200px Computadora, TV, etc .col-xl Columnas y espaciado La grid de Bootstrap ofrece 12 columnas como m\u00e1ximo (no es necesario usar todas) para cada tama\u00f1o de pantalla. Cada columna posee un espaciado (espacio en \"blanco\") de 15px a cada lado, es decir, 30px en total. Retomemos el ejemplo gr\u00e1fico del inicio -ahora para cada tipo de pantala- para comprender mejor el funcionamiento de las media queries : En todo los ejemplos se han utilizado etiqueteas sem\u00e1nticas HTML como header , main , aside , article y footer para organizar el contenido del hipot\u00e9tico sitio web. Dise\u00f1o adaptable y Grid Utilizar la grid de Bootstrap, como se mostr\u00f3 en una secci\u00f3n anterior , no es sin\u00f3nimo de crear un sitio web adaptable. Para crear un sitio responsivo es necesario incluir las clases que Bootstrap dispone para tal fin. \u00a1Manos a la obra! \u00b6 Seguimos profundiazando en el concepto de dise\u00f1o adaptable, ahora, mediante el estudio de algunos ejemplos donde se emplean las clases responsivas proporcionadas por Bootstrap. Veamos un ejemplo donde tenemos 4 columnas de contenido que se adaptar\u00e1n al tama\u00f1o de la pantalla: NOTA: En los ejemplos se han agregado estilos para visualizar mejor los elementos de la p\u00e1gina <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > <!-- Estilos extra (para visualizar mejor el ejemplo) --> < style > . row > div { background-color : #f9f9f9 ; border : 1 px solid #333 ; margin : 5 px 0 ;} </ style > </ head > < body > <!-- Estilos extra (para visualizar mejor el ejemplo) --> < div class = \"container\" > < div class = \"row\" > < h3 class = \"d-block d-sm-none\" > Extra small ( < 576px )</ h3 > < h3 class = \"d-none d-sm-block d-md-none\" > Small (\u2265576px) </ h3 > < h3 class = \"d-none d-md-block d-lg-none\" > Medium (\u2265768px) </ h3 > < h3 class = \"d-none d-lg-block d-xl-none\" > Large (\u2265992px) </ h3 > < h3 class = \"d-none d-xl-block\" > Extra large (\u22651200px) </ h3 > </ div > </ div > <!-- Clases de Bootstrap para dise\u00f1o web adaptable --> < div class = \"container\" > < div class = \"row\" > < div class = \"col-12 col-sm-6 col-md-6 col-lg-8 col-xl-3\" > < p > COL 1 </ p > </ div > < div class = \"col-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\" > < p > COL 2 </ p > </ div > < div class = \"col-12 col-sm-12 col-md-6 col-lg-8 col-xl-3\" > < p > COL 3 </ p > </ div > < div class = \"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-3\" > < p > COL 4 </ p > </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Donde podemos observar lo siguiente: El n\u00famero clave es 12 : si la suma de los anchos de las columnas no supera este n\u00famero, las mismas se ubicar\u00e1n en una misma l\u00ednea; en caso contrario, se dispondr\u00e1n un una nueva l\u00ednea. Tama\u00f1o extra peque\u00f1o ( .col ): las cuatro columnas de contenido abarcan un total de 12 columnas de la grid ( col-12 ) Tama\u00f1o peque\u00f1o ( .col-sm ): las dos primeras columnas de contenido abarcan 6 columnas de la grid ( col-sm-6 ) y las dos restantes, 12 columnas de la grid ( col-sm-12 ) Tama\u00f1o mediano ( .col-md ): las cuatro columnas de contenido abarcan 6 columnas de la grid ( col-md-6 ) Tama\u00f1o grande ( .col-lg ): la primera y tercer columna de contenido abarcan 8 columnas de la grid ( col-lg-8 ) y las columnas segunda y cuarta abarcan cuatro columnas de la grid ( col-lg-4 ) Tama\u00f1o extragrande ( .col-xl ): las cuatro columnas de contenido abarcan 3 columnas de la grid ( col-xl-3 ) Podemos, incluso, agregar algunos contenedores m\u00e1s y aplicar las clases responsivas en el contenido de cada uno de ellos: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > <!-- Estilos extra (para visualizar mejor el ejemplo) --> < style > . row > div { background-color : #f9f9f9 ; border : 1 px solid #333 ; margin : 5 px 0 ;} </ style > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col-12 col-sm-2\" > < p > LOGO </ p > </ div > < div class = \"col-12 col-sm-10\" > < p > NAVEGACION </ p > </ div > </ div > </ div > < div class = \"container\" > < div class = \"row\" > < div class = \"col-12 col-sm-6 col-md-6 col-lg-8 col-xl-3\" > < p > COL 1 </ p > </ div > < div class = \"col-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\" > < p > COL 2 </ p > </ div > < div class = \"col-12 col-sm-12 col-md-6 col-lg-8 col-xl-3\" > < p > COL 3 </ p > </ div > < div class = \"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-3\" > < p > COL 4 </ p > </ div > </ div > </ div > < div class = \"container\" > < div class = \"row\" > < div class = \"col-12 col-lg-6\" > < p > PIE 1 </ p > </ div > < div class = \"col-12 col-lg-6\" > < p > PIE 2 </ p > </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Finalmente, dejamos a disposici\u00f3n ejemplos reales de sitios webs responsivos listos para descargar y \"jugar\": [ Descarga de sitio web adaptable 1 ] [ Descarga de sitio web adaptable 2 ]","title":"Dise\u00f1o adaptable"},{"location":"bootstrap/gridResponsive/#diseno-web-adaptable-o-responsive-web-design","text":"La grid de Bootstrap emplea el poder las las media queries de CSS para establecer de qu\u00e9 manera el contenido se organizar\u00e1 en los distintos dispositivos. Sin embargo, no deja librada la tarea de organizar las media queries al dise\u00f1ador: ofrece unas clases CSS predefinidas que har\u00e1n el trabajo por \u00e9l.","title":"Dise\u00f1o web adaptable o Responsive web design"},{"location":"bootstrap/gridResponsive/#como-funciona-el-diseno-adaptable","text":"Imaginemos por un momento un sitio web cualquiera y como dise\u00f1adores necesitamos que el contenido del mismo se visualice bien en cualquier dispositivo. Utilizando la grid de Bootstrap podremos lograrlo. Prestemos atenci\u00f3n al siguiente ejemplo visual y particularmente a las cajas de colores que representan las distintas secciones de contenido del sitio web: Si observamos con atenci\u00f3n atenci\u00f3n a la imagen anterior habremos apreciado como el contenido del sitio web (representado por las cajas de colores) se \"reorganiz\u00f3\" para conseguir una mejor visualizaci\u00f3n dependiendo de la pantalla de cada dispositivo: Desktop (Pc de escritorio), Tablet y Mobile (Celular). Para cualquier caso, la grid ofrece 12 columnas para organizar el contenidos.","title":"\u00bfC\u00f3mo funciona el dise\u00f1o adaptable?"},{"location":"bootstrap/gridResponsive/#puntos-de-corte","text":"Para que el contenido de un sitio web sea adaptable, es decir, capaz de \"reorganizarse\" para mostrarse de la mejor manera en cada dispositivo, Bootstrap establece ciertos \"puntos de corte\" mediante el uso de clases CSS que establecen los l\u00edmites entre un tipo de pantalla y otra. Nombre L\u00edmites Dispositivo de ejemplo Nombre de la clase Extra small Menor que 576px Celular (vertical) .col Small Igual o mayor que 576px Celular (horizontal) .col-sm Medium Igual o mayor que 768px Tablet (vertical) .col-md Large Igual o mayor que 992px Tablet (horizontal) .col-lg Extra large Igual o mayor que 1200px Computadora, TV, etc .col-xl Columnas y espaciado La grid de Bootstrap ofrece 12 columnas como m\u00e1ximo (no es necesario usar todas) para cada tama\u00f1o de pantalla. Cada columna posee un espaciado (espacio en \"blanco\") de 15px a cada lado, es decir, 30px en total. Retomemos el ejemplo gr\u00e1fico del inicio -ahora para cada tipo de pantala- para comprender mejor el funcionamiento de las media queries : En todo los ejemplos se han utilizado etiqueteas sem\u00e1nticas HTML como header , main , aside , article y footer para organizar el contenido del hipot\u00e9tico sitio web. Dise\u00f1o adaptable y Grid Utilizar la grid de Bootstrap, como se mostr\u00f3 en una secci\u00f3n anterior , no es sin\u00f3nimo de crear un sitio web adaptable. Para crear un sitio responsivo es necesario incluir las clases que Bootstrap dispone para tal fin.","title":"Puntos de corte"},{"location":"bootstrap/gridResponsive/#manos-a-la-obra","text":"Seguimos profundiazando en el concepto de dise\u00f1o adaptable, ahora, mediante el estudio de algunos ejemplos donde se emplean las clases responsivas proporcionadas por Bootstrap. Veamos un ejemplo donde tenemos 4 columnas de contenido que se adaptar\u00e1n al tama\u00f1o de la pantalla: NOTA: En los ejemplos se han agregado estilos para visualizar mejor los elementos de la p\u00e1gina <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > <!-- Estilos extra (para visualizar mejor el ejemplo) --> < style > . row > div { background-color : #f9f9f9 ; border : 1 px solid #333 ; margin : 5 px 0 ;} </ style > </ head > < body > <!-- Estilos extra (para visualizar mejor el ejemplo) --> < div class = \"container\" > < div class = \"row\" > < h3 class = \"d-block d-sm-none\" > Extra small ( < 576px )</ h3 > < h3 class = \"d-none d-sm-block d-md-none\" > Small (\u2265576px) </ h3 > < h3 class = \"d-none d-md-block d-lg-none\" > Medium (\u2265768px) </ h3 > < h3 class = \"d-none d-lg-block d-xl-none\" > Large (\u2265992px) </ h3 > < h3 class = \"d-none d-xl-block\" > Extra large (\u22651200px) </ h3 > </ div > </ div > <!-- Clases de Bootstrap para dise\u00f1o web adaptable --> < div class = \"container\" > < div class = \"row\" > < div class = \"col-12 col-sm-6 col-md-6 col-lg-8 col-xl-3\" > < p > COL 1 </ p > </ div > < div class = \"col-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\" > < p > COL 2 </ p > </ div > < div class = \"col-12 col-sm-12 col-md-6 col-lg-8 col-xl-3\" > < p > COL 3 </ p > </ div > < div class = \"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-3\" > < p > COL 4 </ p > </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Donde podemos observar lo siguiente: El n\u00famero clave es 12 : si la suma de los anchos de las columnas no supera este n\u00famero, las mismas se ubicar\u00e1n en una misma l\u00ednea; en caso contrario, se dispondr\u00e1n un una nueva l\u00ednea. Tama\u00f1o extra peque\u00f1o ( .col ): las cuatro columnas de contenido abarcan un total de 12 columnas de la grid ( col-12 ) Tama\u00f1o peque\u00f1o ( .col-sm ): las dos primeras columnas de contenido abarcan 6 columnas de la grid ( col-sm-6 ) y las dos restantes, 12 columnas de la grid ( col-sm-12 ) Tama\u00f1o mediano ( .col-md ): las cuatro columnas de contenido abarcan 6 columnas de la grid ( col-md-6 ) Tama\u00f1o grande ( .col-lg ): la primera y tercer columna de contenido abarcan 8 columnas de la grid ( col-lg-8 ) y las columnas segunda y cuarta abarcan cuatro columnas de la grid ( col-lg-4 ) Tama\u00f1o extragrande ( .col-xl ): las cuatro columnas de contenido abarcan 3 columnas de la grid ( col-xl-3 ) Podemos, incluso, agregar algunos contenedores m\u00e1s y aplicar las clases responsivas en el contenido de cada uno de ellos: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > <!-- Estilos extra (para visualizar mejor el ejemplo) --> < style > . row > div { background-color : #f9f9f9 ; border : 1 px solid #333 ; margin : 5 px 0 ;} </ style > </ head > < body > < div class = \"container\" > < div class = \"row\" > < div class = \"col-12 col-sm-2\" > < p > LOGO </ p > </ div > < div class = \"col-12 col-sm-10\" > < p > NAVEGACION </ p > </ div > </ div > </ div > < div class = \"container\" > < div class = \"row\" > < div class = \"col-12 col-sm-6 col-md-6 col-lg-8 col-xl-3\" > < p > COL 1 </ p > </ div > < div class = \"col-12 col-sm-6 col-md-6 col-lg-4 col-xl-3\" > < p > COL 2 </ p > </ div > < div class = \"col-12 col-sm-12 col-md-6 col-lg-8 col-xl-3\" > < p > COL 3 </ p > </ div > < div class = \"col-12 col-sm-12 col-md-6 col-lg-4 col-xl-3\" > < p > COL 4 </ p > </ div > </ div > </ div > < div class = \"container\" > < div class = \"row\" > < div class = \"col-12 col-lg-6\" > < p > PIE 1 </ p > </ div > < div class = \"col-12 col-lg-6\" > < p > PIE 2 </ p > </ div > </ div > </ div > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Finalmente, dejamos a disposici\u00f3n ejemplos reales de sitios webs responsivos listos para descargar y \"jugar\": [ Descarga de sitio web adaptable 1 ] [ Descarga de sitio web adaptable 2 ]","title":"\u00a1Manos a la obra!"},{"location":"bootstrap/primerosPasos/","text":"Primeros pasos \u00b6 Comenzar a trabajar con Bootstrap es muy sencillo, simplemente debemos descargar los archivos del proyecto y configurar nuestra plantilla inicial para comenzar a trabajar. Versiones utilizadas Las versiones de Bootstrap se actualizan constantemete, al igual que los componentes que esta herramienta utiliza. Al momento de escribir esta gu\u00eda se emplean las siguientes versiones: Bootstrap : 4.1 jQuery : 3.3.1 Popper.js : 1.14.3 \u00bfQue haremos en esta secci\u00f3n? \u00b6 Descargaremos los archivos necesarios y los dispondremos en nuestra carpeta de proyecto. Finalmente, crearemos una p\u00e1gina de inicio dejando todo listo para comenzar a trabajar con Bootstrap. Descarga de la plantilla Bootstrap Si dese\u00e1s saltearte esta secci\u00f3n, pod\u00e9s descargar directamente la carpeta de proyecto Bootstrap (plantilla) Descargando Bootstrap \u00b6 Para descargar el framework sencillamente nos dirigimos a su p\u00e1gina principal getbootstrap.com y hacemos clic sobre el bot\u00f3n Donwload : Se nos redigir\u00e1 a una p\u00e1gina con m\u00faltiples opciones de descarga. Elegimos la opci\u00f3n Compiled CSS and JS : Obtendremos un archivo llamado bootstrap-4.1.0-dist.zip (dependiendo de la versi\u00f3n de Bootstrap) que al descomprimir tendremos: bootstrap-4.1.0-dist \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 bootstrap.css \u2502 \u251c\u2500\u2500 bootstrap.css.map \u2502 \u251c\u2500\u2500 bootstrap-grid.css \u2502 \u251c\u2500\u2500 bootstrap-grid.css.map \u2502 \u251c\u2500\u2500 bootstrap-grid.min.css \u2502 \u251c\u2500\u2500 bootstrap-grid.min.css.map \u2502 \u251c\u2500\u2500 bootstrap.min.css \u2502 \u251c\u2500\u2500 bootstrap.min.css.map \u2502 \u251c\u2500\u2500 bootstrap-reboot.css \u2502 \u251c\u2500\u2500 bootstrap-reboot.css.map \u2502 \u251c\u2500\u2500 bootstrap-reboot.min.css \u2502 \u2514\u2500\u2500 bootstrap-reboot.min.css.map \u2514\u2500\u2500 js \u251c\u2500\u2500 bootstrap.bundle.js \u251c\u2500\u2500 bootstrap.bundle.js.map \u251c\u2500\u2500 bootstrap.bundle.min.js \u251c\u2500\u2500 bootstrap.bundle.min.js.map \u251c\u2500\u2500 bootstrap.js \u251c\u2500\u2500 bootstrap.js.map \u251c\u2500\u2500 bootstrap.min.js \u2514\u2500\u2500 bootstrap.min.js.map A partir de ahora, nos referiremos a esta carpeta y sus componentes como carpeta de proyecto . Descargando librer\u00edas \u00b6 Como mencionamos al comienzo, Bootstrap trabaja en conjunto con otras librer\u00edas o componentes para agregar funcionalidad a la p\u00e1gina web. Dichas librer\u00edas est\u00e1n basadas en Javascript y son jQuery y Popper.js . \u00bfC\u00f3mo descargar? \u00b6 Antes de comenzar la descargar de las librer\u00edas conviene aclarar que ambas son de tipo Javascript. Es decir, son archivos de texto plano -con extensi\u00f3n .js -: al hacer clic para intentar descargarlos, los mismos se abrir\u00e1n en nuestro navegador web. Para descargarlas, podemos elegir entre: Ejecutar la combinaci\u00f3n de teclas Ctrl + s de nuestro teclado, o bien Hacer clic derecho sobre el cuerpo de la p\u00e1gina y seleccionar la opci\u00f3n \"Guardar como...\" (Google Chrome) \u00f3 \"Guardar p\u00e1gina c\u00f3mo...\" (Mozilla Firefox) del men\u00fa contextual. jQuery \u00b6 Para descargar esta librer\u00eda, simplemente nos dirigimos al sitio web de jQuery y hacemos clic sobre el bot\u00f3n Download jQuery : Dicha acci\u00f3n nos redirigir\u00e1 a una p\u00e1gina conteniendo varios enlaces de descarga. Elegiremos Download the compressed, production jQuery 3.3.1 (el n\u00famero de versi\u00f3n puede variar). IMPORTANTE: Deberemos guardar el archivo descargado jquery-3.3.1.min.js dentro de la carpeta js de nuestro proyecto. Popper.js \u00b6 Al igual que con jQuery, nos dirigimos a la p\u00e1gina oficial de la librer\u00eda popper.js.org y hacemos clic sobre el bot\u00f3n INSTALL V1 (el n\u00famero de versi\u00f3n puede variar): Seremos redirigidos a una p\u00e1gina con m\u00faltiples opciones de descarga. Buscamos en la columna Source de la tabla, la opci\u00f3n unpkg, minified y hacemos clic sobre el enlace en cuesti\u00f3n: https://unpkg.com/popper.js/dist/umd/popper.min.js . IMPORTANTE: Deberemos guardar el archivo descargado popper.min.js dentro de la carpeta js de nuestro proyecto . Creando nuestra primera p\u00e1gina \u00b6 Crearemos una archivo HTML llamdo index.html y lo guardaremos dentro de la carpeta de nuestro proyecto . Si seguimos los pasos anteriores de manera correcta, el contenido de la carpeta de nuestro proyecto deber\u00eda verse de manera similar a la que sigue (agregamos una carpeta llamada img para alojar las im\u00e1genes del proyecto en un futuro): bootstrap-4.1.0-dist/ \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 bootstrap.css \u2502 \u251c\u2500\u2500 bootstrap.css.map \u2502 \u251c\u2500\u2500 bootstrap-grid.css \u2502 \u251c\u2500\u2500 bootstrap-grid.css.map \u2502 \u251c\u2500\u2500 bootstrap-grid.min.css \u2502 \u251c\u2500\u2500 bootstrap-grid.min.css.map \u2502 \u251c\u2500\u2500 bootstrap.min.css \u2502 \u251c\u2500\u2500 bootstrap.min.css.map \u2502 \u251c\u2500\u2500 bootstrap-reboot.css \u2502 \u251c\u2500\u2500 bootstrap-reboot.css.map \u2502 \u251c\u2500\u2500 bootstrap-reboot.min.css \u2502 \u2514\u2500\u2500 bootstrap-reboot.min.css.map \u251c\u2500\u2500 img \u251c\u2500\u2500 index.html \u2514\u2500\u2500 js \u251c\u2500\u2500 bootstrap.bundle.js \u251c\u2500\u2500 bootstrap.bundle.js.map \u251c\u2500\u2500 bootstrap.bundle.min.js \u251c\u2500\u2500 bootstrap.bundle.min.js.map \u251c\u2500\u2500 bootstrap.js \u251c\u2500\u2500 bootstrap.js.map \u251c\u2500\u2500 bootstrap.min.js \u251c\u2500\u2500 bootstrap.min.js.map \u251c\u2500\u2500 jquery-3.3.1.min.js \u2514\u2500\u2500 popper.min.js Luego, abrimos el archivo index.html con nuestro editor favorito y escribimos: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < title > Plantilla Bootstrap 4.1 </ title > </ head > < body > < h1 > Bootstrap 4.1 </ h1 > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Tendremos todo lo necesario para comenzar nuestro proyecto web bas\u00e1ndonos en el framework Bootrap.","title":"Primeros pasos"},{"location":"bootstrap/primerosPasos/#primeros-pasos","text":"Comenzar a trabajar con Bootstrap es muy sencillo, simplemente debemos descargar los archivos del proyecto y configurar nuestra plantilla inicial para comenzar a trabajar. Versiones utilizadas Las versiones de Bootstrap se actualizan constantemete, al igual que los componentes que esta herramienta utiliza. Al momento de escribir esta gu\u00eda se emplean las siguientes versiones: Bootstrap : 4.1 jQuery : 3.3.1 Popper.js : 1.14.3","title":"Primeros pasos"},{"location":"bootstrap/primerosPasos/#que-haremos-en-esta-seccion","text":"Descargaremos los archivos necesarios y los dispondremos en nuestra carpeta de proyecto. Finalmente, crearemos una p\u00e1gina de inicio dejando todo listo para comenzar a trabajar con Bootstrap. Descarga de la plantilla Bootstrap Si dese\u00e1s saltearte esta secci\u00f3n, pod\u00e9s descargar directamente la carpeta de proyecto Bootstrap (plantilla)","title":"\u00bfQue haremos en esta secci\u00f3n?"},{"location":"bootstrap/primerosPasos/#descargando-bootstrap","text":"Para descargar el framework sencillamente nos dirigimos a su p\u00e1gina principal getbootstrap.com y hacemos clic sobre el bot\u00f3n Donwload : Se nos redigir\u00e1 a una p\u00e1gina con m\u00faltiples opciones de descarga. Elegimos la opci\u00f3n Compiled CSS and JS : Obtendremos un archivo llamado bootstrap-4.1.0-dist.zip (dependiendo de la versi\u00f3n de Bootstrap) que al descomprimir tendremos: bootstrap-4.1.0-dist \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 bootstrap.css \u2502 \u251c\u2500\u2500 bootstrap.css.map \u2502 \u251c\u2500\u2500 bootstrap-grid.css \u2502 \u251c\u2500\u2500 bootstrap-grid.css.map \u2502 \u251c\u2500\u2500 bootstrap-grid.min.css \u2502 \u251c\u2500\u2500 bootstrap-grid.min.css.map \u2502 \u251c\u2500\u2500 bootstrap.min.css \u2502 \u251c\u2500\u2500 bootstrap.min.css.map \u2502 \u251c\u2500\u2500 bootstrap-reboot.css \u2502 \u251c\u2500\u2500 bootstrap-reboot.css.map \u2502 \u251c\u2500\u2500 bootstrap-reboot.min.css \u2502 \u2514\u2500\u2500 bootstrap-reboot.min.css.map \u2514\u2500\u2500 js \u251c\u2500\u2500 bootstrap.bundle.js \u251c\u2500\u2500 bootstrap.bundle.js.map \u251c\u2500\u2500 bootstrap.bundle.min.js \u251c\u2500\u2500 bootstrap.bundle.min.js.map \u251c\u2500\u2500 bootstrap.js \u251c\u2500\u2500 bootstrap.js.map \u251c\u2500\u2500 bootstrap.min.js \u2514\u2500\u2500 bootstrap.min.js.map A partir de ahora, nos referiremos a esta carpeta y sus componentes como carpeta de proyecto .","title":"Descargando Bootstrap"},{"location":"bootstrap/primerosPasos/#descargando-librerias","text":"Como mencionamos al comienzo, Bootstrap trabaja en conjunto con otras librer\u00edas o componentes para agregar funcionalidad a la p\u00e1gina web. Dichas librer\u00edas est\u00e1n basadas en Javascript y son jQuery y Popper.js .","title":"Descargando librer\u00edas"},{"location":"bootstrap/primerosPasos/#como-descargar","text":"Antes de comenzar la descargar de las librer\u00edas conviene aclarar que ambas son de tipo Javascript. Es decir, son archivos de texto plano -con extensi\u00f3n .js -: al hacer clic para intentar descargarlos, los mismos se abrir\u00e1n en nuestro navegador web. Para descargarlas, podemos elegir entre: Ejecutar la combinaci\u00f3n de teclas Ctrl + s de nuestro teclado, o bien Hacer clic derecho sobre el cuerpo de la p\u00e1gina y seleccionar la opci\u00f3n \"Guardar como...\" (Google Chrome) \u00f3 \"Guardar p\u00e1gina c\u00f3mo...\" (Mozilla Firefox) del men\u00fa contextual.","title":"\u00bfC\u00f3mo descargar?"},{"location":"bootstrap/primerosPasos/#jquery","text":"Para descargar esta librer\u00eda, simplemente nos dirigimos al sitio web de jQuery y hacemos clic sobre el bot\u00f3n Download jQuery : Dicha acci\u00f3n nos redirigir\u00e1 a una p\u00e1gina conteniendo varios enlaces de descarga. Elegiremos Download the compressed, production jQuery 3.3.1 (el n\u00famero de versi\u00f3n puede variar). IMPORTANTE: Deberemos guardar el archivo descargado jquery-3.3.1.min.js dentro de la carpeta js de nuestro proyecto.","title":"jQuery"},{"location":"bootstrap/primerosPasos/#popperjs","text":"Al igual que con jQuery, nos dirigimos a la p\u00e1gina oficial de la librer\u00eda popper.js.org y hacemos clic sobre el bot\u00f3n INSTALL V1 (el n\u00famero de versi\u00f3n puede variar): Seremos redirigidos a una p\u00e1gina con m\u00faltiples opciones de descarga. Buscamos en la columna Source de la tabla, la opci\u00f3n unpkg, minified y hacemos clic sobre el enlace en cuesti\u00f3n: https://unpkg.com/popper.js/dist/umd/popper.min.js . IMPORTANTE: Deberemos guardar el archivo descargado popper.min.js dentro de la carpeta js de nuestro proyecto .","title":"Popper.js"},{"location":"bootstrap/primerosPasos/#creando-nuestra-primera-pagina","text":"Crearemos una archivo HTML llamdo index.html y lo guardaremos dentro de la carpeta de nuestro proyecto . Si seguimos los pasos anteriores de manera correcta, el contenido de la carpeta de nuestro proyecto deber\u00eda verse de manera similar a la que sigue (agregamos una carpeta llamada img para alojar las im\u00e1genes del proyecto en un futuro): bootstrap-4.1.0-dist/ \u251c\u2500\u2500 css \u2502 \u251c\u2500\u2500 bootstrap.css \u2502 \u251c\u2500\u2500 bootstrap.css.map \u2502 \u251c\u2500\u2500 bootstrap-grid.css \u2502 \u251c\u2500\u2500 bootstrap-grid.css.map \u2502 \u251c\u2500\u2500 bootstrap-grid.min.css \u2502 \u251c\u2500\u2500 bootstrap-grid.min.css.map \u2502 \u251c\u2500\u2500 bootstrap.min.css \u2502 \u251c\u2500\u2500 bootstrap.min.css.map \u2502 \u251c\u2500\u2500 bootstrap-reboot.css \u2502 \u251c\u2500\u2500 bootstrap-reboot.css.map \u2502 \u251c\u2500\u2500 bootstrap-reboot.min.css \u2502 \u2514\u2500\u2500 bootstrap-reboot.min.css.map \u251c\u2500\u2500 img \u251c\u2500\u2500 index.html \u2514\u2500\u2500 js \u251c\u2500\u2500 bootstrap.bundle.js \u251c\u2500\u2500 bootstrap.bundle.js.map \u251c\u2500\u2500 bootstrap.bundle.min.js \u251c\u2500\u2500 bootstrap.bundle.min.js.map \u251c\u2500\u2500 bootstrap.js \u251c\u2500\u2500 bootstrap.js.map \u251c\u2500\u2500 bootstrap.min.js \u251c\u2500\u2500 bootstrap.min.js.map \u251c\u2500\u2500 jquery-3.3.1.min.js \u2514\u2500\u2500 popper.min.js Luego, abrimos el archivo index.html con nuestro editor favorito y escribimos: <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < link rel = \"stylesheet\" href = \"css/bootstrap.min.css\" > < title > Plantilla Bootstrap 4.1 </ title > </ head > < body > < h1 > Bootstrap 4.1 </ h1 > < script src = \"js/bootstrap.min.js\" ></ script > < script src = \"js/jquery-3.3.1.min.js\" ></ script > < script src = \"js/popper.min.js\" ></ script > </ body > </ html > [ Descarg\u00e1 el ejemplo ] Tendremos todo lo necesario para comenzar nuestro proyecto web bas\u00e1ndonos en el framework Bootrap.","title":"Creando nuestra primera p\u00e1gina"},{"location":"cssFuentes/","text":"\u00a1Bienvenid@s! \u00b6 El presente espacio pretende ser una gu\u00eda introductoria para quienes est\u00e1n comenzando a dar los primeros pasos en el dise\u00f1o web, particularemente, en el \u00e1rea de Front-End.","title":"\u00a1Bienvenid@s!"},{"location":"cssFuentes/#bienvenids","text":"El presente espacio pretende ser una gu\u00eda introductoria para quienes est\u00e1n comenzando a dar los primeros pasos en el dise\u00f1o web, particularemente, en el \u00e1rea de Front-End.","title":"\u00a1Bienvenid@s!"},{"location":"cssFuentes/fuentesEjercicios/","text":"","title":"Ejercicios"},{"location":"cssFuentes/fuentesFormato/","text":"Formato de texto \u00b6","title":"Formato de texto"},{"location":"cssFuentes/fuentesFormato/#formato-de-texto","text":"","title":"Formato de texto"},{"location":"cssFuentes/fuentesIndex/","text":"Las tipograf\u00edas en el dise\u00f1o web \u00b6 En casi todas las p\u00e1ginas webs se incluye texto, en mayor o menor medida. Y es tarea del dise\u00f1ador web estilizar las tipograf\u00edas con que se mostrar\u00e1 dicho texto. El uso de tipograf\u00edas en el dise\u00f1o web siempre fue un problema. En los comienzos de internet, los navegadores s\u00f3lo mostraban el texto de una p\u00e1gina web con las tipograf\u00edas que el usuario ten\u00eda instaladas en su sistema operativo (Windows, Mac, Linux, etc). Aunque esto sigue siendo as\u00ed, con el tiempo se fueron encontrando soluciones a este problema, que permitieron dar mayor versatilidad a los dise\u00f1os tipogr\u00e1ficos en la web. As\u00ed, el uso de tipograf\u00edas en el dise\u00f1o web ha ido virando del caos inicial, pasando por las safe web fonts hasta llegar a la actual definici\u00f3n @font-face de CSS. Safe web fonts \u00b6 Se trata de tipos de letra o fuentes que est\u00e1n presentes en la mayor\u00eda de los sistemas operativos . Incluyendo estas fuentes en el dise\u00f1o web se asegura la m\u00e1xima compatibilidad entre sistemas operativos y navegadores. En el a\u00f1o 1996, Microsoft inici\u00f3 el proyecto TrueType core fonts for the Web (archivo) mediante el cual ofrec\u00eda la distribuci\u00f3n de un grupo de fuentes (con algunos derechos reservados) para internet. El proyecto finaliz\u00f3 en el a\u00f1o 2002. Dichas fuentes son: Andale Mono Arial Arial Black Comic Sans MS Courier New Georgia Impact Times New Roman Trebuchet MS Verdana Webdings Aunque el proyecto termin\u00f3 hace unos a\u00f1os, el cat\u00e1logo de fuentes seguras qued\u00f3 establecido, con algunas fuentes m\u00e1s que se sumaron luego. Y al d\u00eda de hoy, muchos dise\u00f1adores las siguen usando. Para definir el uso de una fuente segura es necesario el siguiente fragmento de c\u00f3digo CSS: /* Utilizamos la fuente */ body { font-family : SafeWebFont ; } Limitaciones de las fuentes seguras Sin negar que las fuentes seguras constituyen un intento de soluci\u00f3n (en t\u00e9rminos de estandarizaci\u00f3n) al problema de la tipograf\u00eda en el dise\u00f1o web, se trata de una soluci\u00f3n limitada, puesto que obliga a todos los sitios webs a emplear las mismas fuentes. Las fuentes para la web o webfonts \u00b6 Las aparici\u00f3n de las hojas de estilo en cascada o CSS permitieron el uso de cualquier tipo de fuente tipogr\u00e1fica para el dise\u00f1o web, gracias a la regla CSS @font-face . Dicha regla constituy\u00f3 desde su lanzamiento, una propuesta superadora a las safe web fonts . La sintaxis de la misma es la siguiente: /* Definimos la fuente */ @ font-face { font-family : nombreDeMiFuente ; src : url ( fuente . woff ); } /* Utilizamos la fuente */ body { font-family : nombreDeMiFuente ; } Sin embargo, la regla @font-face no es igualmente soportada por las distintas versiones de los navegadores. A continuaci\u00f3n, una tabla comparativa de la compatibilidad de esta regla seg\u00fan los navegadores m\u00e1s populares: Tomado de: caniuse.com Formatos de archivos para webfonts \u00b6 Si bien la regla @font-face puede utilizarse con cualquier tipo de fuente, su uso se extendi\u00f3 al incluirse las llamadas webfonts o fuentes dise\u00f1adas exclusivamente para la web. Existen diferentes tipos de webfonts , cada una con soporte variable en cada tipo de navegador, siendo la de tipo WOFF , la que al momento de escribir este documento es considerada como el formato est\u00e1ndar de webfont . Otros tipos de archivo para webfonts son: TTF (True Type Format) OTF (Open Type Font) SVG Font EOT (Embedded Open Type) WOFF (Web Open Format) WOFF2 (Web Open Format, versi\u00f3n 2) En el siguiente cuadro pueden verse los distintos formatos de archivo de webfonts y la compatibilidad que presentan con los navegadores m\u00e1s populares. Los n\u00fameros indican a partir de cu\u00e1l versi\u00f3n del navegador el formato de fuente es soportado: Tomado de: w3schools.com","title":"Rese\u00f1a hist\u00f3rica"},{"location":"cssFuentes/fuentesIndex/#las-tipografias-en-el-diseno-web","text":"En casi todas las p\u00e1ginas webs se incluye texto, en mayor o menor medida. Y es tarea del dise\u00f1ador web estilizar las tipograf\u00edas con que se mostrar\u00e1 dicho texto. El uso de tipograf\u00edas en el dise\u00f1o web siempre fue un problema. En los comienzos de internet, los navegadores s\u00f3lo mostraban el texto de una p\u00e1gina web con las tipograf\u00edas que el usuario ten\u00eda instaladas en su sistema operativo (Windows, Mac, Linux, etc). Aunque esto sigue siendo as\u00ed, con el tiempo se fueron encontrando soluciones a este problema, que permitieron dar mayor versatilidad a los dise\u00f1os tipogr\u00e1ficos en la web. As\u00ed, el uso de tipograf\u00edas en el dise\u00f1o web ha ido virando del caos inicial, pasando por las safe web fonts hasta llegar a la actual definici\u00f3n @font-face de CSS.","title":"Las tipograf\u00edas en el dise\u00f1o web"},{"location":"cssFuentes/fuentesIndex/#safe-web-fonts","text":"Se trata de tipos de letra o fuentes que est\u00e1n presentes en la mayor\u00eda de los sistemas operativos . Incluyendo estas fuentes en el dise\u00f1o web se asegura la m\u00e1xima compatibilidad entre sistemas operativos y navegadores. En el a\u00f1o 1996, Microsoft inici\u00f3 el proyecto TrueType core fonts for the Web (archivo) mediante el cual ofrec\u00eda la distribuci\u00f3n de un grupo de fuentes (con algunos derechos reservados) para internet. El proyecto finaliz\u00f3 en el a\u00f1o 2002. Dichas fuentes son: Andale Mono Arial Arial Black Comic Sans MS Courier New Georgia Impact Times New Roman Trebuchet MS Verdana Webdings Aunque el proyecto termin\u00f3 hace unos a\u00f1os, el cat\u00e1logo de fuentes seguras qued\u00f3 establecido, con algunas fuentes m\u00e1s que se sumaron luego. Y al d\u00eda de hoy, muchos dise\u00f1adores las siguen usando. Para definir el uso de una fuente segura es necesario el siguiente fragmento de c\u00f3digo CSS: /* Utilizamos la fuente */ body { font-family : SafeWebFont ; } Limitaciones de las fuentes seguras Sin negar que las fuentes seguras constituyen un intento de soluci\u00f3n (en t\u00e9rminos de estandarizaci\u00f3n) al problema de la tipograf\u00eda en el dise\u00f1o web, se trata de una soluci\u00f3n limitada, puesto que obliga a todos los sitios webs a emplear las mismas fuentes.","title":"Safe web fonts"},{"location":"cssFuentes/fuentesIndex/#las-fuentes-para-la-web-o-webfonts","text":"Las aparici\u00f3n de las hojas de estilo en cascada o CSS permitieron el uso de cualquier tipo de fuente tipogr\u00e1fica para el dise\u00f1o web, gracias a la regla CSS @font-face . Dicha regla constituy\u00f3 desde su lanzamiento, una propuesta superadora a las safe web fonts . La sintaxis de la misma es la siguiente: /* Definimos la fuente */ @ font-face { font-family : nombreDeMiFuente ; src : url ( fuente . woff ); } /* Utilizamos la fuente */ body { font-family : nombreDeMiFuente ; } Sin embargo, la regla @font-face no es igualmente soportada por las distintas versiones de los navegadores. A continuaci\u00f3n, una tabla comparativa de la compatibilidad de esta regla seg\u00fan los navegadores m\u00e1s populares: Tomado de: caniuse.com","title":"Las fuentes para la web o webfonts"},{"location":"cssFuentes/fuentesIndex/#formatos-de-archivos-para-webfonts","text":"Si bien la regla @font-face puede utilizarse con cualquier tipo de fuente, su uso se extendi\u00f3 al incluirse las llamadas webfonts o fuentes dise\u00f1adas exclusivamente para la web. Existen diferentes tipos de webfonts , cada una con soporte variable en cada tipo de navegador, siendo la de tipo WOFF , la que al momento de escribir este documento es considerada como el formato est\u00e1ndar de webfont . Otros tipos de archivo para webfonts son: TTF (True Type Format) OTF (Open Type Font) SVG Font EOT (Embedded Open Type) WOFF (Web Open Format) WOFF2 (Web Open Format, versi\u00f3n 2) En el siguiente cuadro pueden verse los distintos formatos de archivo de webfonts y la compatibilidad que presentan con los navegadores m\u00e1s populares. Los n\u00fameros indican a partir de cu\u00e1l versi\u00f3n del navegador el formato de fuente es soportado: Tomado de: w3schools.com","title":"Formatos de archivos para webfonts"},{"location":"cssFuentes/fuentesPropiedades/","text":"Propiedades de fuente \u00b6 Existe un conjunto de propiedades que determinan ciertos aspectos estil\u00edsticos con el que se visualizar\u00e1n las fuentes. Estas propiedades son: font-style font-variant font-weight font-stretch font-size line-height font-family font Tomado de developer.mozilla.org font-style \u00b6 La propiedad font-style permite definir el aspecto de una familia tipogr\u00e1fica entre los valores: normal, italic (cursiva) y oblique. Sintaxis \u00b6 font-style: [normal | italic | oblique]; Valores \u00b6 normal Escoge un tipo de letra clasificado como normal dentro de una familia de fuente. italic Escoge un tipo de letra etiquetado como italic, o, si una versi\u00f3n cursiva del tipo de letra no est\u00e9 disponible, escoge un tipo de letra etiquetado como oblique en lugar de eso. oblique : Escoge un tipo de letra etiquetado como oblique, o, si una versi\u00f3n oblique del tipo de letra no est\u00e9 disponible, escoge un tipo de letra etiquetado como italic en lugar de eso. font-variant \u00b6 La propiedad font-variant selecciona entre los aspectos normal y small-caps para una familia de fuente determinada. Sintaxis \u00b6 font-variant: [normal | small-caps]; Valores \u00b6 font-weight \u00b6 Sintaxis \u00b6 Valores \u00b6 font-stretch \u00b6 Sintaxis \u00b6 Valores \u00b6 font-size \u00b6 Sintaxis \u00b6 Valores \u00b6 line-height \u00b6 Sintaxis \u00b6 Valores \u00b6 font-family \u00b6 Sintaxis \u00b6 Valores \u00b6 font \u00b6 Sintaxis \u00b6 Valores \u00b6","title":"Propiedades de fuente"},{"location":"cssFuentes/fuentesPropiedades/#propiedades-de-fuente","text":"Existe un conjunto de propiedades que determinan ciertos aspectos estil\u00edsticos con el que se visualizar\u00e1n las fuentes. Estas propiedades son: font-style font-variant font-weight font-stretch font-size line-height font-family font Tomado de developer.mozilla.org","title":"Propiedades de fuente"},{"location":"cssFuentes/fuentesPropiedades/#font-style","text":"La propiedad font-style permite definir el aspecto de una familia tipogr\u00e1fica entre los valores: normal, italic (cursiva) y oblique.","title":"font-style"},{"location":"cssFuentes/fuentesPropiedades/#sintaxis","text":"font-style: [normal | italic | oblique];","title":"Sintaxis"},{"location":"cssFuentes/fuentesPropiedades/#valores","text":"normal Escoge un tipo de letra clasificado como normal dentro de una familia de fuente. italic Escoge un tipo de letra etiquetado como italic, o, si una versi\u00f3n cursiva del tipo de letra no est\u00e9 disponible, escoge un tipo de letra etiquetado como oblique en lugar de eso. oblique : Escoge un tipo de letra etiquetado como oblique, o, si una versi\u00f3n oblique del tipo de letra no est\u00e9 disponible, escoge un tipo de letra etiquetado como italic en lugar de eso.","title":"Valores"},{"location":"cssFuentes/fuentesPropiedades/#font-variant","text":"La propiedad font-variant selecciona entre los aspectos normal y small-caps para una familia de fuente determinada.","title":"font-variant"},{"location":"cssFuentes/fuentesPropiedades/#sintaxis_1","text":"font-variant: [normal | small-caps];","title":"Sintaxis"},{"location":"cssFuentes/fuentesPropiedades/#valores_1","text":"","title":"Valores"},{"location":"cssFuentes/fuentesPropiedades/#font-weight","text":"","title":"font-weight"},{"location":"cssFuentes/fuentesPropiedades/#sintaxis_2","text":"","title":"Sintaxis"},{"location":"cssFuentes/fuentesPropiedades/#valores_2","text":"","title":"Valores"},{"location":"cssFuentes/fuentesPropiedades/#font-stretch","text":"","title":"font-stretch"},{"location":"cssFuentes/fuentesPropiedades/#sintaxis_3","text":"","title":"Sintaxis"},{"location":"cssFuentes/fuentesPropiedades/#valores_3","text":"","title":"Valores"},{"location":"cssFuentes/fuentesPropiedades/#font-size","text":"","title":"font-size"},{"location":"cssFuentes/fuentesPropiedades/#sintaxis_4","text":"","title":"Sintaxis"},{"location":"cssFuentes/fuentesPropiedades/#valores_4","text":"","title":"Valores"},{"location":"cssFuentes/fuentesPropiedades/#line-height","text":"","title":"line-height"},{"location":"cssFuentes/fuentesPropiedades/#sintaxis_5","text":"","title":"Sintaxis"},{"location":"cssFuentes/fuentesPropiedades/#valores_5","text":"","title":"Valores"},{"location":"cssFuentes/fuentesPropiedades/#font-family","text":"","title":"font-family"},{"location":"cssFuentes/fuentesPropiedades/#sintaxis_6","text":"","title":"Sintaxis"},{"location":"cssFuentes/fuentesPropiedades/#valores_6","text":"","title":"Valores"},{"location":"cssFuentes/fuentesPropiedades/#font","text":"","title":"font"},{"location":"cssFuentes/fuentesPropiedades/#sintaxis_7","text":"","title":"Sintaxis"},{"location":"cssFuentes/fuentesPropiedades/#valores_7","text":"","title":"Valores"},{"location":"cssFuentes/fuentesTipografia/","text":"Elegir una tipograf\u00eda \u00b6 Hay varias cuestiones a tener en cuenta a la hora de elegir un estilo tipogr\u00e1fico para nuestros dise\u00f1os. Entre los m\u00e1s importantes est\u00e1n: Fuentes especialmente dise\u00f1adas para visualizaci\u00f3n en pantalla Proporci\u00f3n entre la altura de los caracteres o altura de las x Caracteres abiertos antes que cerrados","title":"Elegir tipograf\u00eda"},{"location":"cssFuentes/fuentesTipografia/#elegir-una-tipografia","text":"Hay varias cuestiones a tener en cuenta a la hora de elegir un estilo tipogr\u00e1fico para nuestros dise\u00f1os. Entre los m\u00e1s importantes est\u00e1n: Fuentes especialmente dise\u00f1adas para visualizaci\u00f3n en pantalla Proporci\u00f3n entre la altura de los caracteres o altura de las x Caracteres abiertos antes que cerrados","title":"Elegir una tipograf\u00eda"},{"location":"cssFuentes/fuentesWebFonts/","text":"Usando webfonts \u00b6 A grandes rasgos podemos decir que existen dos maneras de emplear webfonts en el dise\u00f1o tipogr\u00e1fico de una p\u00e1gina web: Vincul\u00e1ndolas desde un sitio web que proporcione las fuentes de manera externa Incluy\u00e9ndolas en nuestro propio sitio web Vinculando fuentes desde un sitio web externo \u00b6 Usando \u00b6 Con el fin de preservar nuestras opciones tipogr\u00e1ficas de manera que se vean siempre igual, sin importar el navegador del usuario, la regla @font-face debe escribirse de la siguiente manera: @ font-face { font-family : 'miFuente' ; font-style : normal ; font-weight : 400 ; src : local ( 'Mi Fuente' ), url ( '/fonts/miFuente-l.woff2' ) format ( 'woff2' ), url ( '/fonts/miFuente-l.woff' ) format ( 'woff' ), url ( '/fonts/miFuente-l.ttf' ) format ( 'truetype' ), url ( '/fonts/miFuente-l.eot' ) format ( 'embedded-opentype' ); unicode-range : U + 000-5FF ; /* Glifos latinos */ } @ font-face { font-family : 'miFuente' ; font-style : italic ; font-weight : 700 ; src : local ( 'Mi Fuente' ), url ( '/fonts/miFuente-l-700.woff2' ) format ( 'woff2' ), url ( '/fonts/miFuente-l-700.woff' ) format ( 'woff' ), url ( '/fonts/miFuente-l-700.ttf' ) format ( 'truetype' ), url ( '/fonts/miFuente-l-700.eot' ) format ( 'embedded-opentype' ); unicode-range : U + 3000-9FFF , U + ff ??; /* Glifos Japoneses */ } Tomado de: developers.google.com Los ejemplos anteriores definen una familia llamada Mi Fuente individual con dos estilos (normal e italic), y cada uno apunta a un conjunto diferente de recursos de fuente. Esto \u00faltimo se realiza para que la tipograf\u00eda se visualice de igual modo independientemente del navegador, ya que cada uno de ellos priorizar\u00e1 un tipo de fuente determinado. La directiva local() permite hacer referencia a fuentes instaladas localmente (en el equipo del usuario), cargarlas y usarlas. La directiva url() permite cargar fuentes externas y pueden contener una sugerencia de format() opcional que indique el formato de la fuente a la que se hace referencia en la URL proporcionada. Nota El orden en el que se especifican las variantes de las fuentes es importante. El navegador selecciona el primer formato compatible. Por lo tanto, si deseamos que los navegadores m\u00e1s nuevos usen WOFF2, tenemos que poner la declaraci\u00f3n de WOFF2 por encima de la de WOFF, etc. La regla @font-face nos permite, adem\u00e1s, definir un intervalo de valores Unicode admitidos para cada definici\u00f3n de estilo. Esto nos permite dividir una fuente Unicode grande en subconjuntos m\u00e1s peque\u00f1os (por ejemplo, los subconjuntos latino, cir\u00edlico y griego) y solo descargar los glifos requeridos para representar el texto en una p\u00e1gina determinada. Nota El uso de subconjuntos del intervalo Unicode y archivos independientes para cada variante de tipograf\u00eda nos permite definir una familia de fuentes combinada cuya descarga es m\u00e1s r\u00e1pida y m\u00e1s eficiente. El visitante solo descargar\u00e1 las variantes y los subconjuntos que necesita, y no est\u00e1 obligado a descargar subconjuntos que quiz\u00e1 nunca vea ni use en la p\u00e1gina. Por ejemplo, la familia de fuentes Noto de Google apunta a admitir todos los idiomas del mundo. No obstante, el tama\u00f1o total del archivo ZIP de Noto, con todos los idiomas incluidos, supera los 130 MB.","title":"Usando webfonts"},{"location":"cssFuentes/fuentesWebFonts/#usando-webfonts","text":"A grandes rasgos podemos decir que existen dos maneras de emplear webfonts en el dise\u00f1o tipogr\u00e1fico de una p\u00e1gina web: Vincul\u00e1ndolas desde un sitio web que proporcione las fuentes de manera externa Incluy\u00e9ndolas en nuestro propio sitio web","title":"Usando webfonts"},{"location":"cssFuentes/fuentesWebFonts/#vinculando-fuentes-desde-un-sitio-web-externo","text":"","title":"Vinculando fuentes desde un sitio web externo"},{"location":"cssFuentes/fuentesWebFonts/#usando","text":"Con el fin de preservar nuestras opciones tipogr\u00e1ficas de manera que se vean siempre igual, sin importar el navegador del usuario, la regla @font-face debe escribirse de la siguiente manera: @ font-face { font-family : 'miFuente' ; font-style : normal ; font-weight : 400 ; src : local ( 'Mi Fuente' ), url ( '/fonts/miFuente-l.woff2' ) format ( 'woff2' ), url ( '/fonts/miFuente-l.woff' ) format ( 'woff' ), url ( '/fonts/miFuente-l.ttf' ) format ( 'truetype' ), url ( '/fonts/miFuente-l.eot' ) format ( 'embedded-opentype' ); unicode-range : U + 000-5FF ; /* Glifos latinos */ } @ font-face { font-family : 'miFuente' ; font-style : italic ; font-weight : 700 ; src : local ( 'Mi Fuente' ), url ( '/fonts/miFuente-l-700.woff2' ) format ( 'woff2' ), url ( '/fonts/miFuente-l-700.woff' ) format ( 'woff' ), url ( '/fonts/miFuente-l-700.ttf' ) format ( 'truetype' ), url ( '/fonts/miFuente-l-700.eot' ) format ( 'embedded-opentype' ); unicode-range : U + 3000-9FFF , U + ff ??; /* Glifos Japoneses */ } Tomado de: developers.google.com Los ejemplos anteriores definen una familia llamada Mi Fuente individual con dos estilos (normal e italic), y cada uno apunta a un conjunto diferente de recursos de fuente. Esto \u00faltimo se realiza para que la tipograf\u00eda se visualice de igual modo independientemente del navegador, ya que cada uno de ellos priorizar\u00e1 un tipo de fuente determinado. La directiva local() permite hacer referencia a fuentes instaladas localmente (en el equipo del usuario), cargarlas y usarlas. La directiva url() permite cargar fuentes externas y pueden contener una sugerencia de format() opcional que indique el formato de la fuente a la que se hace referencia en la URL proporcionada. Nota El orden en el que se especifican las variantes de las fuentes es importante. El navegador selecciona el primer formato compatible. Por lo tanto, si deseamos que los navegadores m\u00e1s nuevos usen WOFF2, tenemos que poner la declaraci\u00f3n de WOFF2 por encima de la de WOFF, etc. La regla @font-face nos permite, adem\u00e1s, definir un intervalo de valores Unicode admitidos para cada definici\u00f3n de estilo. Esto nos permite dividir una fuente Unicode grande en subconjuntos m\u00e1s peque\u00f1os (por ejemplo, los subconjuntos latino, cir\u00edlico y griego) y solo descargar los glifos requeridos para representar el texto en una p\u00e1gina determinada. Nota El uso de subconjuntos del intervalo Unicode y archivos independientes para cada variante de tipograf\u00eda nos permite definir una familia de fuentes combinada cuya descarga es m\u00e1s r\u00e1pida y m\u00e1s eficiente. El visitante solo descargar\u00e1 las variantes y los subconjuntos que necesita, y no est\u00e1 obligado a descargar subconjuntos que quiz\u00e1 nunca vea ni use en la p\u00e1gina. Por ejemplo, la familia de fuentes Noto de Google apunta a admitir todos los idiomas del mundo. No obstante, el tama\u00f1o total del archivo ZIP de Noto, con todos los idiomas incluidos, supera los 130 MB.","title":"Usando"},{"location":"cssFundamentos/boxModel/","text":"El modelo de caja \u00b6 Para comprender qu\u00e9 es una caja en CSS simplemente deb\u00e9s imaginarte un cuadrado o rect\u00e1ngulo. Dicha figura poseer\u00e1 un determinano ancho y alto, un borde, m\u00e1rgenes, colores, posici\u00f3n, etc. El lenguaje CSS trata a todos los elementos como si estuvieran contenidos en cuadrados o rect\u00e1ngulos. Si normalmente al ver una p\u00e1gina web no vemos una caja en cada p\u00e1rrafo o en cada imagen, es porque la mayor\u00eda de las veces estas cajas no poseen bordes o bien, son transparentes (valores por defecto). El modelo de caja en CSS, yendo desde el contenido hacia afuera, est\u00e1 definido por: El tama\u00f1o de la caja puede establecerse mediante las propiedades width (ancho) y height (alto). Contenido : es el texto, la imagen, o lo que sea qu\u00e9 est\u00e1 dentro de la caja. Padding : es un margen interno , que rodea al contenido que forma parte de la propia caja. Border : es el borde de la caja y por tanto, la delimita. Margin : es el margen exterior a la caja , que aunque no forma parte de la caja, deja un espacio entre \u00e9sta y los otros elementos que la rodean. Los m\u00e1rgenes como el borde pueden definirse para los cuatro lados de la caja mediante las palabras top (arriba), bottom (abajo), left (izquierda), y right (derecha). La posici\u00f3n de la caja (su ubicaci\u00f3n respecto a la p\u00e1gina o elementos de la misma) tambi\u00e9n puede determinarse tambi\u00e9n mediante las palabras top (arriba), bottom (abajo), left (izquierda), y right (derecha). Sin embargo, el posicionamiento de una caja es un tema relativamente complejo que ser\u00e1 abordado en otra secci\u00f3n . Los m\u00e1rgenes, tanto interno (padding) como externo (margin), son transparentes. En la figura se le aplica color con fines did\u00e1cticos . Fuente de conocimiento: aprende-web.net librosweb.es developer.mozilla.org","title":"Definici\u00f3n"},{"location":"cssFundamentos/boxModel/#el-modelo-de-caja","text":"Para comprender qu\u00e9 es una caja en CSS simplemente deb\u00e9s imaginarte un cuadrado o rect\u00e1ngulo. Dicha figura poseer\u00e1 un determinano ancho y alto, un borde, m\u00e1rgenes, colores, posici\u00f3n, etc. El lenguaje CSS trata a todos los elementos como si estuvieran contenidos en cuadrados o rect\u00e1ngulos. Si normalmente al ver una p\u00e1gina web no vemos una caja en cada p\u00e1rrafo o en cada imagen, es porque la mayor\u00eda de las veces estas cajas no poseen bordes o bien, son transparentes (valores por defecto). El modelo de caja en CSS, yendo desde el contenido hacia afuera, est\u00e1 definido por: El tama\u00f1o de la caja puede establecerse mediante las propiedades width (ancho) y height (alto). Contenido : es el texto, la imagen, o lo que sea qu\u00e9 est\u00e1 dentro de la caja. Padding : es un margen interno , que rodea al contenido que forma parte de la propia caja. Border : es el borde de la caja y por tanto, la delimita. Margin : es el margen exterior a la caja , que aunque no forma parte de la caja, deja un espacio entre \u00e9sta y los otros elementos que la rodean. Los m\u00e1rgenes como el borde pueden definirse para los cuatro lados de la caja mediante las palabras top (arriba), bottom (abajo), left (izquierda), y right (derecha). La posici\u00f3n de la caja (su ubicaci\u00f3n respecto a la p\u00e1gina o elementos de la misma) tambi\u00e9n puede determinarse tambi\u00e9n mediante las palabras top (arriba), bottom (abajo), left (izquierda), y right (derecha). Sin embargo, el posicionamiento de una caja es un tema relativamente complejo que ser\u00e1 abordado en otra secci\u00f3n . Los m\u00e1rgenes, tanto interno (padding) como externo (margin), son transparentes. En la figura se le aplica color con fines did\u00e1cticos . Fuente de conocimiento: aprende-web.net librosweb.es developer.mozilla.org","title":"El modelo de caja"},{"location":"cssFundamentos/boxModelBorder/","text":"El modelo de caja de CSS permite asignar diversos estilos para los bordes: border-width para definir el ancho del borde, border-color para establecer el color del borde, border-style para indicar tipo de borde de la caja y finalmente border-radius para determinar la redondez de las esquinas de la caja. border-style \u00b6 Hace referencia al tipo de l\u00ednea que llevar\u00e1 la caja. Puede tomar valores como: none , hidden , dotted , dashed , solid , double , groove , ridge , inset \u00f3 outset . C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Modelo de caja CSS </ title > < link rel = \"stylesheet\" href = \"caja.css\" > </ head > < body > < div > Hola! Soy una caja </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 div { border-style : dotted ; } Definiendo la propiedad border-style Si queremos definir el estilo de todo el borde la caja empleamos border-style . Si, en cambio, deseamos definir el estilo de cada borde de la caja por separado usamos border-bottom-style , border-left-style , border-right-style y border-top-style . La mejor opci\u00f3n es escribir cualquier definici\u00f3n empleando la forma abreviada general : obtendremos los mismos resultados pero escribiendo menor cantidad de c\u00f3digo. border-width \u00b6 Los valores de la anchura de los bordes se pueden indicar mediante una medida o mediante las palabras clave thin (borde delgado), medium (borde normal) y thick (borde ancho). C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Modelo de caja CSS </ title > < link rel = \"stylesheet\" href = \"caja.css\" > </ head > < body > < div > Hola! Soy una caja </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 4 div { border-style : dotted ; border-width : 5 px ; } Definiendo la propiedad border-width Si queremos definir el mismo ancho para todos los bordes de la caja usamos border-width . Para definir cada borde por separado empleamos border-bottom-width , border-left-width , border-right-width y border-top-width . Pero si utilizamos la forma abreviada general , podremos realizar lo mismo, con menos c\u00f3digo. border-color \u00b6 Porpiedad para determinar el color del borde de la caja. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Modelo de caja CSS </ title > < link rel = \"stylesheet\" href = \"caja.css\" > </ head > < body > < div > Hola! Soy una caja </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 div { border-style : dotted ; border-width : 5 px ; border-color : red ; } Definiendo la propiedad border-color Si queremos que los brodes de la caja tengan el mismo color usamos border-color . Si queremos dotar a cada borde de un color diferente usamos border-bottom-color , border-left-color , border-right-color y border-top-color . Por \u00faltimo, la mejor opci\u00f3n es usar la forma abreviada general para obtener los mismos resultados y escribir menos c\u00f3digo. border-radius \u00b6 Propiedad que establece la \"redondez\" de las esquinas de una caja. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Modelo de caja CSS </ title > < link rel = \"stylesheet\" href = \"caja.css\" > </ head > < body > < div > Hola! Soy una caja </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 div { border-style : dotted ; border-width : 5 px ; border-color : red ; border-radius : 5 px ; } Definiendo la propiedad border-radius Podemos definir la propiedad para cada esquina de la caja empleando border-top-left-radius , border-top-right-radius , border-bottom-right-radius y border-bottom-left-radius , o bien, empleando la forma abreviada para el radio de las esquinas","title":"Bordes"},{"location":"cssFundamentos/boxModelBorder/#border-style","text":"Hace referencia al tipo de l\u00ednea que llevar\u00e1 la caja. Puede tomar valores como: none , hidden , dotted , dashed , solid , double , groove , ridge , inset \u00f3 outset . C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Modelo de caja CSS </ title > < link rel = \"stylesheet\" href = \"caja.css\" > </ head > < body > < div > Hola! Soy una caja </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 div { border-style : dotted ; } Definiendo la propiedad border-style Si queremos definir el estilo de todo el borde la caja empleamos border-style . Si, en cambio, deseamos definir el estilo de cada borde de la caja por separado usamos border-bottom-style , border-left-style , border-right-style y border-top-style . La mejor opci\u00f3n es escribir cualquier definici\u00f3n empleando la forma abreviada general : obtendremos los mismos resultados pero escribiendo menor cantidad de c\u00f3digo.","title":"border-style"},{"location":"cssFundamentos/boxModelBorder/#border-width","text":"Los valores de la anchura de los bordes se pueden indicar mediante una medida o mediante las palabras clave thin (borde delgado), medium (borde normal) y thick (borde ancho). C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Modelo de caja CSS </ title > < link rel = \"stylesheet\" href = \"caja.css\" > </ head > < body > < div > Hola! Soy una caja </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 4 div { border-style : dotted ; border-width : 5 px ; } Definiendo la propiedad border-width Si queremos definir el mismo ancho para todos los bordes de la caja usamos border-width . Para definir cada borde por separado empleamos border-bottom-width , border-left-width , border-right-width y border-top-width . Pero si utilizamos la forma abreviada general , podremos realizar lo mismo, con menos c\u00f3digo.","title":"border-width"},{"location":"cssFundamentos/boxModelBorder/#border-color","text":"Porpiedad para determinar el color del borde de la caja. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Modelo de caja CSS </ title > < link rel = \"stylesheet\" href = \"caja.css\" > </ head > < body > < div > Hola! Soy una caja </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 div { border-style : dotted ; border-width : 5 px ; border-color : red ; } Definiendo la propiedad border-color Si queremos que los brodes de la caja tengan el mismo color usamos border-color . Si queremos dotar a cada borde de un color diferente usamos border-bottom-color , border-left-color , border-right-color y border-top-color . Por \u00faltimo, la mejor opci\u00f3n es usar la forma abreviada general para obtener los mismos resultados y escribir menos c\u00f3digo.","title":"border-color"},{"location":"cssFundamentos/boxModelBorder/#border-radius","text":"Propiedad que establece la \"redondez\" de las esquinas de una caja. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Modelo de caja CSS </ title > < link rel = \"stylesheet\" href = \"caja.css\" > </ head > < body > < div > Hola! Soy una caja </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 div { border-style : dotted ; border-width : 5 px ; border-color : red ; border-radius : 5 px ; } Definiendo la propiedad border-radius Podemos definir la propiedad para cada esquina de la caja empleando border-top-left-radius , border-top-right-radius , border-bottom-right-radius y border-bottom-left-radius , o bien, empleando la forma abreviada para el radio de las esquinas","title":"border-radius"},{"location":"cssFundamentos/boxModelExercises/","text":"Modelo de caja \u00b6 Descarg\u00e1 el ejercicio y realiz\u00e1 una caja en CSS con las siguientes caracter\u00edsitcas solicitadas dentro del archivo CSS. Descarg\u00e1 el ejercicio y realiz\u00e1 una caja en CSS con las siguientes caracter\u00edsitcas solicitadas dentro del archivo CSS. Descarg\u00e1 el ejercicio y prob\u00e1 las distintas opciones de posicionamiento seg\u00fan indicaci\u00f3n del profesor. Descarg\u00e1 el ejercicio y escrib\u00ed el c\u00f3digo CSS necesario seg\u00fan: Primera caja: Posicionamiento absoluto Arriba: 25px Izquierda: 60px Segunda caja: Posicionamiento relativo Arriba: 40px Tercer caja: Posicionamiento fijo Arriba: 560px Cuarta caja: Posicionamiento \"pegajoso\" Arriba: 100px","title":"Ejercicios"},{"location":"cssFundamentos/boxModelExercises/#modelo-de-caja","text":"Descarg\u00e1 el ejercicio y realiz\u00e1 una caja en CSS con las siguientes caracter\u00edsitcas solicitadas dentro del archivo CSS. Descarg\u00e1 el ejercicio y realiz\u00e1 una caja en CSS con las siguientes caracter\u00edsitcas solicitadas dentro del archivo CSS. Descarg\u00e1 el ejercicio y prob\u00e1 las distintas opciones de posicionamiento seg\u00fan indicaci\u00f3n del profesor. Descarg\u00e1 el ejercicio y escrib\u00ed el c\u00f3digo CSS necesario seg\u00fan: Primera caja: Posicionamiento absoluto Arriba: 25px Izquierda: 60px Segunda caja: Posicionamiento relativo Arriba: 40px Tercer caja: Posicionamiento fijo Arriba: 560px Cuarta caja: Posicionamiento \"pegajoso\" Arriba: 100px","title":"Modelo de caja"},{"location":"cssFundamentos/boxModelMargins/","text":"Es posible definir m\u00e1rgenes tanto internos (padding) como externos (margin) para una caja CSS: padding (margen interno) \u00b6 Hace referencia al espaciado del contenido respecto de los bordes de la caja. margin (margen externo) \u00b6 Hace referencia al espaciado externo de la caja","title":"M\u00e1rgenes"},{"location":"cssFundamentos/boxModelMargins/#padding-margen-interno","text":"Hace referencia al espaciado del contenido respecto de los bordes de la caja.","title":"padding (margen interno)"},{"location":"cssFundamentos/boxModelMargins/#margin-margen-externo","text":"Hace referencia al espaciado externo de la caja","title":"margin (margen externo)"},{"location":"cssFundamentos/boxModelPosition/","text":"La propiedad position de CSS especifica como se posicionara este en el documento. las propiedades top , right , bottom , y left determinan la localizacion final de los elementos posicionados. Un elemento posicionado es un elemento cuyo valor de position es relative , absolute , fixed , o sticky . (En otras palabras, cualquiera excepto static .) static \u00b6 Es el valor que toma un elemento por defecto para posicionarse. Con este valor, el elemento respetar\u00e1 el flujo normal de la p\u00e1gina, es decir, se posicionar\u00e1 en el lugar que le corresponde y no tendr\u00e1 en cuenta los valores para las propiedades top , left , right y bottom . relative \u00b6 Mediante este valor podemos posicionar un elemento respecto al flujo normal de la p\u00e1gina . Se podr\u00eda decir que estamos posicionando un elemento tomando como referencia el flujo normal (la posici\u00f3n por defecto) de dicho elemento. Podremos usar top , left , right y bottom para posicionar nuestro elemento tomando como referencia la posici\u00f3n por defecto del elemento. absolute \u00b6 Este valor tambi\u00e9n aceptar\u00e1 los valores top , left , right y bottom . El elemento con position: absolute no estar\u00e1 dentro del flujo normal de la p\u00e1gina y tomar\u00e1 como referencia la ventana del navegador o el elemento posicionado m\u00e1s cercano si es padre del elemento que queremos posicionar (dicho elemento \"m\u00e1s cercano\" deber\u00e1 tener cualquier valor de position excepto static ). fixed \u00b6 Los elementos a los cuales se les posiciona con position: fixed tambi\u00e9n est\u00e1n fuera del flujo normal de la p\u00e1gina . Sin embargo, no se debe de confundir con los elementos que est\u00e1n posicionados con position: absolute . A diferencia de estos \u00faltimos, los elementos con position: fixed toman como referencia la ventana del navegador y no respetan el tener un contenedor padre que est\u00e9 posicionado . Adem\u00e1s, al hacer scroll en la p\u00e1gina, el elemento que est\u00e9 posicionado como position: fixed seguir\u00e1 en la misma posici\u00f3n respecto a la ventana del navegador aunque el scroll haya desplazado la p\u00e1gina hacia abajo. sticky \u00b6 Este es un valor que es nuevo relativamente para esta propiedad. Usando este valor, el elemento act\u00faa como si estuviera posicionado con el valor relative hasta que se alcanza un umbral de desplazamiento (en el propio elemento o en el elemento padre), con el cual el elemento pasa a posicionarse como si estuviera posicionado con el valor fixed . Fuente: StackOverflow Mozilla Developer Network","title":"Posicionamiento"},{"location":"cssFundamentos/boxModelPosition/#static","text":"Es el valor que toma un elemento por defecto para posicionarse. Con este valor, el elemento respetar\u00e1 el flujo normal de la p\u00e1gina, es decir, se posicionar\u00e1 en el lugar que le corresponde y no tendr\u00e1 en cuenta los valores para las propiedades top , left , right y bottom .","title":"static"},{"location":"cssFundamentos/boxModelPosition/#relative","text":"Mediante este valor podemos posicionar un elemento respecto al flujo normal de la p\u00e1gina . Se podr\u00eda decir que estamos posicionando un elemento tomando como referencia el flujo normal (la posici\u00f3n por defecto) de dicho elemento. Podremos usar top , left , right y bottom para posicionar nuestro elemento tomando como referencia la posici\u00f3n por defecto del elemento.","title":"relative"},{"location":"cssFundamentos/boxModelPosition/#absolute","text":"Este valor tambi\u00e9n aceptar\u00e1 los valores top , left , right y bottom . El elemento con position: absolute no estar\u00e1 dentro del flujo normal de la p\u00e1gina y tomar\u00e1 como referencia la ventana del navegador o el elemento posicionado m\u00e1s cercano si es padre del elemento que queremos posicionar (dicho elemento \"m\u00e1s cercano\" deber\u00e1 tener cualquier valor de position excepto static ).","title":"absolute"},{"location":"cssFundamentos/boxModelPosition/#fixed","text":"Los elementos a los cuales se les posiciona con position: fixed tambi\u00e9n est\u00e1n fuera del flujo normal de la p\u00e1gina . Sin embargo, no se debe de confundir con los elementos que est\u00e1n posicionados con position: absolute . A diferencia de estos \u00faltimos, los elementos con position: fixed toman como referencia la ventana del navegador y no respetan el tener un contenedor padre que est\u00e9 posicionado . Adem\u00e1s, al hacer scroll en la p\u00e1gina, el elemento que est\u00e9 posicionado como position: fixed seguir\u00e1 en la misma posici\u00f3n respecto a la ventana del navegador aunque el scroll haya desplazado la p\u00e1gina hacia abajo.","title":"fixed"},{"location":"cssFundamentos/boxModelPosition/#sticky","text":"Este es un valor que es nuevo relativamente para esta propiedad. Usando este valor, el elemento act\u00faa como si estuviera posicionado con el valor relative hasta que se alcanza un umbral de desplazamiento (en el propio elemento o en el elemento padre), con el cual el elemento pasa a posicionarse como si estuviera posicionado con el valor fixed . Fuente: StackOverflow Mozilla Developer Network","title":"sticky"},{"location":"cssFundamentos/boxModelShorthand/","text":"Forma abreviada ( shorthand properties ) \u00b6 Es posible ahorrar c\u00f3digo a la hora de escribir CSS siguiendo la \"regla del reloj\" que consiste en referenciar las ubicaciones top , rigth , bottom y left , como las 12, 3, 6 y 9 horas, respectivamente y siguiendo el sentido de giro de las agujas del reloj , comenzando siempre por la posici\u00f3n top . Ejemplos \u00b6 Tomando la \"regla del reloj\", es posible escribir menos cantidad de c\u00f3digo CSS. A continuaci\u00f3n, algunos ejemplos de aplicaci\u00f3n: Forma abreviada general \u00b6 A continuaci\u00f3n se exhibe el modo de emplear la notaci\u00f3n abreviada shortland para la propiedad border-width del modelo de caja. No obstante es igualmente v\u00e1lida para otras propiedades del borde de una caja, como border-style y border-color , as\u00ed como para otras propiedades CSS como background , font , padding y margin . Esquema Ejemplo 1 valor border-width: 1em El \u00fanico valor aplica a todos los bordes. 2 valores border-width: 1em 2em El primer valor aplica a los bordes superior e inferior. El segundo valor aplica a los bordes izquierdo y derecho. 3 valores border-width: 1em 2em 3em El primer valor aplica al borde superior. El segundo valor, a los bordes izquierdo y el derecho. Finalmente, el tercer valor aplica al borde inferior. 4 valores border-width: 1em 2em 3em 4em Los cuatro valores aplican a los bordes superior, derecho, inferior e izquierdo respectivamente, siempre en ese orden, es decir, en sentido horario comenzando por el borde superior. Forma abreviada para border-radius \u00b6 El siguiente ejemplo es un caso particular de forma abreviada, que contempla las esquinas del modelo de caja. Esquema Ejemplo 1 valor border-radius: 1em El \u00fanico valor aplica a todos las esquinas. 2 valores border-radius: 1em 2em El primer valor aplica a las esquinas superior izquierda e inferior derecha, el segundo valor, a las esquinas superior derecha e inferior izquierda. 3 valores border-radius: 1em 2em 3em El primer valor aplica a la esquina superior izquierda, el segundo, a las esquinas superior derecha e inferior izquierda, y el tercer valor a la esquina inferior derecha. 4 valores border-radius: 1em 2em 3em 4em Los cuatro valores aplican a las esquinas superior izquierda, superior derecha, inferior derecha e inferior izquierda, respectivamente, siempre en ese orden, es decir, en el sentido de las agujas del reloj comenzando por la esquina superior izquierda. Fuente: Shortland properties Border radius","title":"Forma abreviada"},{"location":"cssFundamentos/boxModelShorthand/#forma-abreviada-shorthand-properties","text":"Es posible ahorrar c\u00f3digo a la hora de escribir CSS siguiendo la \"regla del reloj\" que consiste en referenciar las ubicaciones top , rigth , bottom y left , como las 12, 3, 6 y 9 horas, respectivamente y siguiendo el sentido de giro de las agujas del reloj , comenzando siempre por la posici\u00f3n top .","title":"Forma abreviada (shorthand properties)"},{"location":"cssFundamentos/boxModelShorthand/#ejemplos","text":"Tomando la \"regla del reloj\", es posible escribir menos cantidad de c\u00f3digo CSS. A continuaci\u00f3n, algunos ejemplos de aplicaci\u00f3n:","title":"Ejemplos"},{"location":"cssFundamentos/boxModelShorthand/#forma-abreviada-general","text":"A continuaci\u00f3n se exhibe el modo de emplear la notaci\u00f3n abreviada shortland para la propiedad border-width del modelo de caja. No obstante es igualmente v\u00e1lida para otras propiedades del borde de una caja, como border-style y border-color , as\u00ed como para otras propiedades CSS como background , font , padding y margin . Esquema Ejemplo 1 valor border-width: 1em El \u00fanico valor aplica a todos los bordes. 2 valores border-width: 1em 2em El primer valor aplica a los bordes superior e inferior. El segundo valor aplica a los bordes izquierdo y derecho. 3 valores border-width: 1em 2em 3em El primer valor aplica al borde superior. El segundo valor, a los bordes izquierdo y el derecho. Finalmente, el tercer valor aplica al borde inferior. 4 valores border-width: 1em 2em 3em 4em Los cuatro valores aplican a los bordes superior, derecho, inferior e izquierdo respectivamente, siempre en ese orden, es decir, en sentido horario comenzando por el borde superior.","title":"Forma abreviada general"},{"location":"cssFundamentos/boxModelShorthand/#forma-abreviada-para-border-radius","text":"El siguiente ejemplo es un caso particular de forma abreviada, que contempla las esquinas del modelo de caja. Esquema Ejemplo 1 valor border-radius: 1em El \u00fanico valor aplica a todos las esquinas. 2 valores border-radius: 1em 2em El primer valor aplica a las esquinas superior izquierda e inferior derecha, el segundo valor, a las esquinas superior derecha e inferior izquierda. 3 valores border-radius: 1em 2em 3em El primer valor aplica a la esquina superior izquierda, el segundo, a las esquinas superior derecha e inferior izquierda, y el tercer valor a la esquina inferior derecha. 4 valores border-radius: 1em 2em 3em 4em Los cuatro valores aplican a las esquinas superior izquierda, superior derecha, inferior derecha e inferior izquierda, respectivamente, siempre en ese orden, es decir, en el sentido de las agujas del reloj comenzando por la esquina superior izquierda. Fuente: Shortland properties Border radius","title":"Forma abreviada para border-radius"},{"location":"cssFundamentos/introCSS/","text":"Cascading Style Sheets (CSS) , traducido literalmente al espa\u00f1ol, como Hojas de estilo en cascada , es un lenguaje para la especificar c\u00f3mo los documentos se presentan a los usuarios. \u00bfQu\u00e9 es un documento? Un documento (document) es una colecci\u00f3n de informaci\u00f3n que est\u00e1 estructurado utilizando un lenguaje de formato (markup language). Es muy usado para establecer el dise\u00f1o visual de los documentos web, e interfaces de usuario escritas en HTML o XHTML; el lenguaje puede ser aplicado a cualquier documento XML, incluyendo XHTML, SVG, XUL, RSS, etc\u00e9tera. Tambi\u00e9n permite aplicar estilos no visuales, como las hojas de estilo auditivas. Tipo de documento Uso HTML para p\u00e1ginas web XML para documentos estrucurados, en general SVG para gr\u00e1ficos CSS est\u00e1 dise\u00f1ado principalmente para marcar la separaci\u00f3n del contenido del documento y la forma de presentaci\u00f3n de este . Separar la definici\u00f3n de los contenidos y la definici\u00f3n de su aspecto presenta numerosas ventajas: obliga a crear documentos bien definidos y con significado completo, tambi\u00e9n llamados documentos sem\u00e1nticos mejora la accesibilidad del documento reduce la complejidad del mantenimiento del documento permite visualizar el mismo documento en infinidad de dispositivos diferentes","title":"\u00bfQu\u00e9 es CSS?"},{"location":"cssFundamentos/introGettingStarted/","text":"Comenzar a trabajar con CSS es sencillo. S\u00f3lo tendremos que disponer de un editor de texto adecuado que facilite nuestra tarea y muchas ganas de aprender. Agregando CSS al documento \u00b6 Existen tres maneras de agregar estilos CSS a nuestro documento (que en esta gu\u00eda, siempre ser\u00e1 un documento de tipo HTML), las cu\u00e1les, se explican a continuaci\u00f3n. En l\u00ednea \u00b6 Se agrega estilos CSS directamente dentro de una etiqueta HTML . Por ejemplo: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Documento </ title > </ head > < body > < h1 style = \"background-color: peach;\" > Un t\u00edtulo </ h1 > < p style = \"font-size: 14px;\" > Un texto muy importante </ p > </ body > </ html > Hoja de estilos CSS interna \u00b6 Se agrega un bloque de estilos CSS dentro la cabecera ( head ) del documento HTML . Por ejemplo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Documento </ title > < style > h1 { background-color : peach ;} p { font-size : 14 px ;} </ style > </ head > < body > < h1 > Un t\u00edtulo </ h1 > < p > Un texto muy importante </ p > </ body > </ html > Hoja de estilos CSS externa \u00b6 Los estilos CSS se definen en un documento aparte (que lleva la extensi\u00f3n .css ) el cual debe ser especificado dentro del documento HTML mediante la etiqueta link . Disponemos as\u00ed de dos documentos: el HTML por un lado, y el CSS por otro. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"estilos.css\" > < title > Documento </ title > </ head > < body > < h1 > Un t\u00edtulo </ h1 > < p > Un texto muy importante </ p > </ body > </ html > C\u00f3digo CSS 1 2 h1 { background-color : peach ;} p { font-size : 14 px ;} Comentarios en CSS \u00b6 CSS permite incluir comentarios entre sus reglas y estilos. Los comentarios son contenidos de texto que el dise\u00f1ador incluye en el archivo CSS para su propia informaci\u00f3n y utilidad. Los navegadores ignoran por completo cualquier comentario de los archivos CSS, por lo que es com\u00fan utilizarlos para estructurar de forma clara los archivos CSS complejos. El comienzo de un comentario se indica mediante los caracteres /* y el final del comentario se indica mediante */ , tal y como se muestra en el siguiente ejemplo: /* Este es un comentario en CSS */ Los comentarios pueden ocupar tantas l\u00edneas como sea necesario, pero no se puede incluir un comentario dentro de otro comentario: /* Este es un comentario CSS de varias lineas */ Aunque los navegadores ignoran los comentarios, su contenido se env\u00eda junto con el resto de estilos, por lo que no se debe incluir en ellos ninguna informaci\u00f3n sensible o confidencial. La sintaxis de los comentarios CSS es muy diferente a la de los comentarios HTML, por lo que no deben confundirse: <!-- Este es un comentario en HTML --> <!-- Este es un comentario HTML de varias lineas -->","title":"Primeros pasos"},{"location":"cssFundamentos/introGettingStarted/#agregando-css-al-documento","text":"Existen tres maneras de agregar estilos CSS a nuestro documento (que en esta gu\u00eda, siempre ser\u00e1 un documento de tipo HTML), las cu\u00e1les, se explican a continuaci\u00f3n.","title":"Agregando CSS al documento"},{"location":"cssFundamentos/introGettingStarted/#en-linea","text":"Se agrega estilos CSS directamente dentro de una etiqueta HTML . Por ejemplo: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Documento </ title > </ head > < body > < h1 style = \"background-color: peach;\" > Un t\u00edtulo </ h1 > < p style = \"font-size: 14px;\" > Un texto muy importante </ p > </ body > </ html >","title":"En l\u00ednea"},{"location":"cssFundamentos/introGettingStarted/#hoja-de-estilos-css-interna","text":"Se agrega un bloque de estilos CSS dentro la cabecera ( head ) del documento HTML . Por ejemplo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Documento </ title > < style > h1 { background-color : peach ;} p { font-size : 14 px ;} </ style > </ head > < body > < h1 > Un t\u00edtulo </ h1 > < p > Un texto muy importante </ p > </ body > </ html >","title":"Hoja de estilos CSS interna"},{"location":"cssFundamentos/introGettingStarted/#hoja-de-estilos-css-externa","text":"Los estilos CSS se definen en un documento aparte (que lleva la extensi\u00f3n .css ) el cual debe ser especificado dentro del documento HTML mediante la etiqueta link . Disponemos as\u00ed de dos documentos: el HTML por un lado, y el CSS por otro. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"estilos.css\" > < title > Documento </ title > </ head > < body > < h1 > Un t\u00edtulo </ h1 > < p > Un texto muy importante </ p > </ body > </ html > C\u00f3digo CSS 1 2 h1 { background-color : peach ;} p { font-size : 14 px ;}","title":"Hoja de estilos CSS externa"},{"location":"cssFundamentos/introGettingStarted/#comentarios-en-css","text":"CSS permite incluir comentarios entre sus reglas y estilos. Los comentarios son contenidos de texto que el dise\u00f1ador incluye en el archivo CSS para su propia informaci\u00f3n y utilidad. Los navegadores ignoran por completo cualquier comentario de los archivos CSS, por lo que es com\u00fan utilizarlos para estructurar de forma clara los archivos CSS complejos. El comienzo de un comentario se indica mediante los caracteres /* y el final del comentario se indica mediante */ , tal y como se muestra en el siguiente ejemplo: /* Este es un comentario en CSS */ Los comentarios pueden ocupar tantas l\u00edneas como sea necesario, pero no se puede incluir un comentario dentro de otro comentario: /* Este es un comentario CSS de varias lineas */ Aunque los navegadores ignoran los comentarios, su contenido se env\u00eda junto con el resto de estilos, por lo que no se debe incluir en ellos ninguna informaci\u00f3n sensible o confidencial. La sintaxis de los comentarios CSS es muy diferente a la de los comentarios HTML, por lo que no deben confundirse: <!-- Este es un comentario en HTML --> <!-- Este es un comentario HTML de varias lineas -->","title":"Comentarios en CSS"},{"location":"cssFundamentos/introSintax/","text":"Un documento CSS contiene definiciones para cada estilo que se desee aplicar. Los mismos, presentan la forma general: selector { propiedad : valor ;} Donde: selector : es el objeto de la p\u00e1gina web a la cual se le aplicar\u00e1 un estilo determinado. Existen varios tipos, como veremos a continuaci\u00f3n. [\u00cdndice de selectores] propiedad : es el tipo de estilo que se le aplicar\u00e1 a un objeto de la p\u00e1gina web. Puede tratarse de una o varias, como el ancho, el alto, color de fondo, bordes, etc. [\u00cdndice de propiedades] valor : es la \"medida\" del estilo que se aplicar\u00e1 al objeto. Por ejemplo: 1 p { background-color : yellow ;} Agrupando selectores Es posible asignar estilos a un conjunto de selectores, agrup\u00e1ndolos de la siguiente manera: selector1 , selector2 , selector3 { propiedad : valor ;} Selectores de elementos \u00b6 Los selectores de elementos (o selectores de tipos) apuntan a etiquetas HTML. Para ello, en el documento CSS se escribe el nombre de la etiqueta. Sintaxis CSS elemento { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectoresElementos.css\" > < title > Selectores de elementos </ title > </ head > < body > < h1 > Sapiente incidunt </ h1 > < p > Lorem ipsum dolor sit amet, consectetur adipisicing. </ p > < p > At libero et, voluptas deserunt. </ p > < div > Sint maxime iure officiis atque. </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 h1 { color : teal ;} p { font-size : 12 px ;} div { background-color : peach ;} Selectores id y class \u00b6 Los selectores id y class apuntan a los valores de los atributos hom\u00f3nimos. Para apuntar a un identificador ( id ) de HTML, en el documento CSS se escribe el signo de numeral ( # ), seguido de su valor. Para apuntar a una clase ( class ) de HTML, en el documento CSS se escribe el signo de punto ( . ), seguido de su valor. Sobre el uso de id y class Un mismo selector de tipo id puede usarse por \u00fanica vez en el documento HTML. En cambio un selector de tipo class puede usarse sin l\u00edmite en la misma p\u00e1gina. Sintaxis CSS . clase { propiedad : valor ;} # identificador { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectoresIDClass.css\" > < title > Selectores ID y Class </ title > </ head > < body > < div id = \"noticias\" > < h1 class = \"rojo\" > Sapiente incidunt </ h1 > < p class = \"rojo destacado\" > Lorem ipsum dolor. </ p > < p class = \"cursiva\" > At libero et, voluptas deserunt debitis. </ p > < p > Fuga voluptatem, laboriosam voluptate. </ p > < div class = \"resaltado\" > Sint maxime iure officiis atque modi. </ div > </ div > < div id = \"pie\" > < h2 class = \"rojo\" > Laboriosam voluptate </ h2 > < p > At libero et, voluptas deserunt debitis facilis unde. </ p > </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 # noticias { magin : 5 px ; padding : 8 px 0 ;} div # pie { font-size : 9 px ; margin : 10 px 0 ;} . rojo { color : red ;} p . cursiva { font-style : italic ;} . destacado { font-size : 16 px ;} . restaltado { background-color : yelow ;} Selectores de atributos \u00b6 Apuntan a los atributos de los elementos HTML Sintaxis CSS [ atributo ] { propiedad : valor ;} [ atributo = \"valor\" ] { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectoresAtributos.css\" > < title > Selectores de atributos </ title > </ head > < body > < ul > < li >< a href = \"page2.html\" title = \"Siguiente\" > Siguiente </ a ></ li > < li >< a href = \"#interno\" > Enlace interno </ a ></ li > < li >< a href = \"http://itel.edu.ar\" title = \"ITEL\" > itel.edu.ar </ a ></ li > < li >< a href = \"#OtroEnlace\" > Otro enlace interno </ a ></ li > < li >< a href = \"https://coarg.org.ar/\" > Un enlace externo </ a ></ li > </ ul > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /* Elementos <a> con un atributo de t\u00edtulo */ a [ title ] { color : orange ; } /* Enlaces internos, comenzando con \"#\" */ a [ href ^= \"#\" ] { color : gold ; } /* Enlaces que contienen la palabra \"interno\" en cualquier parte de la URL */ a [ href *= \"interno\" ] { background-color : black ; } /* Enlaces que contienen la palabra \"ITEL\" en el valor del atributo */ a [ title ~= \"ITEL\" ] { background-color : blue ; color : yellow ; } /* Enlaces que contienen la palabra \"otroenlace\" en cualquier parte de la URL, independientemente de las may\u00fasculas */ a [ href *= \"otroenlace\" i ] { color : cyan ; background-color : fuchsia ; } /* Enlaces que terminan en \".org.ar\" */ a [ href $= \".org.ar\" ] { color : red ; } Sintetizando y m\u00e1s Selectores de presencia y valor Estos selectores de atributos afectar\u00e1n a los elementos cuyo valor coincida exactamente con el valor del atributo especificado: [attr] : Este selector 'seleccionar\u00e1' todos los elementos que contengan el atributo attr , sin importar el valor que tenga. [attr=val] : Este, seleccionar\u00e1 los elementos con el atributo attr , pero solo aquello cuyo valor coincida con val . [attr~=val] : Este selector afectar\u00e1 a los elementos con el atributo attr , pero solo si el valor val est\u00e1 contenido en la lista de valores (separados por espacios) incluidos en el valor de attr , por ejemplo una de las clases contenida en una lista de clases (separadas por espacios). Selector de atributos por valor textual Tambi\u00e9n conocidos como \"RegExp-like selectors\", pues proporcionan una forma de selecci\u00f3n similar a las expresiones normales regular expression (aunque siendo estrictos, estos selectores no son verdaderas expresiones normales): [attr|=val] : Este selector elegir\u00e1 todos los elementos con el atributo attr cuyo valor sea exactamente val o empieza por val- (nota: el guion no es un error, se usa para manejar c\u00f3digos de lenguaje de programaci\u00f3n). [attr^=val] : Seleccionar\u00e1 todos los elementos cuyo atributo attr comienza por el valor val . [attr$=val] : Este selector elegir\u00e1 todos los elementos cuyo atributo attr termina por el valor val . [attr*=val] : Este seleccionar\u00e1 todos los elementos cuyo atributo attr contiene la cadena val (al contrario que [attr~=val] , este selector no considera los espacios como separador de valores sino como parte del valor del atributo). Fuente: https://developer.mozilla.org/es/docs/Web/CSS/Selectores_atributo Selectores jer\u00e1rquicos o combinados \u00b6 En CSS, podemos combinar varios selectores juntos y con ello seleccionar elementos HTML contenidos en otros elementos, o elementos adyacentes a otros. Disponemos de cuatro tipos: Selector descendiente (espacio) Selector hijo > Selector hermano + Selector hermano en general ~ Caracter Ejemplo CSS Descripci\u00f3n [espacio] div a {color: red;} El estilo aplica a todos los elemenos <a> que est\u00e9n contenidos dentro de un elemento <div> , sin importar si el primero es hijo, nieto, bisnieto, etc., del segundo. > div > p {font-size: 110%;} El estilo aplica a el elemento <p> que est\u00e9 contenido dentro de un elemento div siendo el primero, hijo directo del segundo. + h1 + p {color: blue;} El estilo aplica a el elemento <p> que est\u00e9 en el mismo nivel que <h1> e inmediatamente despu\u00e9s de \u00e9ste. ~ h1 ~ h2 {background: peach;} El estilo aplica a el elemento <h2> que est\u00e9 en el mismo nivel que <h1> aunque no inmediatamente despu\u00e9s de \u00e9ste. Selector descendiente \u00b6 Empleado para seleccionar a todos los elementos descendientes de un elemento espec\u00edfico. Nno tiene por qu\u00e9 ser un hijo; puede ser un nieto, por ejemplo. Sintaxis CSS selectorPadre selectorHijo { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectorDescendiente.css\" > < title > Selectores de atributos </ title > </ head > < body > < div > < p > Lorem ipsum dolor sit amet. Placeat nostrum, < a href = \"#\" > sunt odit quas </ a > , velit temporibus. </ p > < p >< a href = \"#\" > Totam neque consequatur sequi! </ a > . Consectetur asperiores ipsum accusamus. </ p > </ div > < p > Repellendus excepturi < a href = \"#\" > eligendi aperiam rem, eos quam itaque </ a > voluptate alias vero unde </ a > . </ p > < p >< a href = \"#\" > Facilis natus dicta nostrum aut </ a > , quae ea officiis rem quisquam dolore facere </ a > . </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 div a { color : green ; } Selector hijo \u00b6 Permite seleccionar un elemento HTML que es hijo directo de otro elemento HTML . Sintaxis CSS elementoPadre > ElementoHijo { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectorHijo.css\" > < title > Selectores de atributos </ title > </ head > < body > < div > < p > Lorem ipsum dolor sit amet. Placeat nostrum, < a href = \"#\" > sunt odit quas </ a > , velit temporibus. </ p > < p >< a href = \"#\" > Totam neque consequatur sequi! </ a > . Consectetur asperiores ipsum accusamus. </ p > </ div > < p > Repellendus excepturi < a href = \"#\" > eligendi aperiam rem, eos quam itaque </ a > voluptate alias vero unde </ a > . </ p > < p >< a href = \"#\" > Facilis natus dicta nostrum aut </ a > , quae ea officiis rem quisquam dolore facere </ a > . </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 body > p { background-color : yellow ; } El selector hermano adyacente \u00b6 Permite seleccionar un elemento HTML que es hermano directo de otro elemento HTML (a la derecha por ejemplo, en el mismo nivel jer\u00e1rquico). Sintaxis CSS elementoHermano1 + elementoHermano2 { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectorHermano.css\" > < title > Selectores de elementos </ title > </ head > < body > < h1 > Sapiente incidunt </ h1 > < p > Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur dolores ducimus ratione voluptatibus. </ p > < p > At libero et, voluptas deserunt debitis facilis unde, commodi adipisci illum amet esse repellat soluta quidem voluptates. Fuga voluptatem, < a href = \"#\" > laboriosam voluptate mollitia </ a > dolores assumenda blanditiis excepturi, sint, quisquam fugiat id tenetur. </ p > < div > Sint maxime iure officiis atque modi, a repellat incidunt quis itaque. </ div > </ body > </ html > C\u00f3digo CSS 1 2 h1 + p { background-color : yellow ;} p + div { color : red ;} El selector hermano en general \u00b6 Permite seleccionar cualquier elemento HTML hermano de otro elemento HTML (por ejemplo en el mismo nivel jer\u00e1rquico, pero no necesariamente adyacente a \u00e9l). Sintaxis CSS elementoHermano1 ~ elementoHermano2 { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectorHermanoGeneral.css\" > < title > Selectores de elementos </ title > </ head > < body > < h1 > Sapiente incidunt </ h1 > < p > Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur dolores ducimus ratione voluptatibus. </ p > < p > At libero et, voluptas deserunt debitis facilis unde, commodi adipisci illum amet esse repellat soluta quidem voluptates. Fuga voluptatem, < a href = \"#\" > laboriosam voluptate mollitia </ a > dolores assumenda blanditiis excepturi, sint, quisquam fugiat id tenetur. </ p > < div > Sint maxime iure officiis atque modi, a repellat incidunt quis itaque. </ div > </ body > </ html > C\u00f3digo CSS 1 h1 ~ div { background-color : orange ;} Fuente: https://developer.mozilla.org/es/docs/Learn/CSS/Introduction_to_CSS/Selectores_simples#Combinaciones Pseudo-selectores \u00b6 Los pseudo-selectores deben su nombre a que no seleccionan elementos HTML \"completos\", sino ciertas partes de estos o solo bajo determinadas circunstancias. Hay de dos tipos: pseudo-clases pseudo-elementos Pseudo-clases \u00b6 Una pseudo-clase CSS consta de una clave precedida de dos puntos (:) que a\u00f1adiremos al final del selector para indicar que daremos estilo a los elementos seleccionados solo cuando estos se encuentren en un estado determinado. Ellas son: :active :any :checked :default :dir() :disabled :empty :enabled :first :first-child :first-of-type :fullscreen :focus :hover :indeterminate :in-range :invalid :lang() :last-child :last-of-type :left :link :not() :nth-child() :nth-last-child() :nth-last-of-type() :nth-of-type() :only-child :only-of-type :optional :out-of-range :read-only :read-write :required :right :root :scope :target :valid :visited :active \u00b6 La pseudo-clase :active de CSS representa un elemento (como un bot\u00f3n) que el usuario est\u00e1 activando. Cuando se usa un mouse, la \"activaci\u00f3n\" generalmente comienza cuando el usuario presiona el bot\u00f3n primario del mouse y termina cuando se suelta. La pseudo-clase :active se usa com\u00fanmente en los elementos <a> y <button> , pero tambi\u00e9n se puede usar en otros elementos. 1 2 3 4 /* Selecciona cualquier <a> que est\u00e9 siendo activado */ a : active { color : red ; } :focus \u00b6 La pseudo-clase :focus CSS representa un elemento (como una entrada de formulario) que ha recibido el foco. Generalmente se activa cuando el usuario hace clic, toca un elemento o lo selecciona con la tecla Tab del teclado. 1 2 3 4 /* Selecciona cualquier <input> cuando se enfoca */ input : focus { color : red ; } :hover \u00b6 La pseudo-clase :hover de CSS coincide cuando el usuario interact\u00faa con un elemento con un dispositivo se\u00f1alador, pero no necesariamente lo activa. Generalmente se activa cuando el usuario se desplaza sobre un elemento con el cursor (puntero del mouse). 1 2 3 4 /* Selecciona cualquier elemento <a> cuando est\u00e1 \"mantenido (hovered)\" */ a : hover { color : orange ; } :nth-child \u00b6 La pseudo-clase :nth-child() de CSS coincide con uno o m\u00e1s elementos en funci\u00f3n de su posici\u00f3n entre un grupo de hermanos. 1 2 3 4 5 /* Selecciona cada cuarto elemento entre cualquier grupo de hermanos */ : nth-child ( 4n ) { color : lime ; } Opciones para :nth-child odd Representa elementos cuya posici\u00f3n num\u00e9rica en una serie de hermanos es impar: 1, 3, 5, etc. even Representa elementos cuya posici\u00f3n num\u00e9rica en una serie de hermanos es par: 2, 4, 6, etc. <An+B> Representa elementos cuya posici\u00f3n num\u00e9rica en una serie de hermanos coincide con el patr\u00f3n An+B , para cada entero positivo o valor cero de n . El \u00edndice del primer elemento es 1. Los valores A y B deben ser ambos n\u00fameros enteros. Ejemplos de aplicaci\u00f3n tr:nth-child(odd) o tr:nth-child(2n+1) Representa las filas impares de una tabla HTML: 1, 3, 5, etc. tr:nth-child(even) o tr:nth-child(2n) Representa las filas pares de una tabla HTML: 2, 4, 6, etc. :nth-child(7) Representa el s\u00e9ptimo elemento. :nth-child(5n) Representa los elementos 5, 10, 15, etc. :nth-child(3n+4) Representa los elementos 4, 7, 10, 13, etc. :nth-child(-n+3) Representa los primeros tres elementos entre un grupo de hermanos. p:nth-child(n) Representa cada elemento <p> entre un grupo de hermanos. Esto es lo mismo que un simple selector <p> . p:nth-child(1) o p:nth-child(0n+1) Representa cada <p> que es el primer elemento entre un grupo de hermanos. Esto es lo mismo que el selector :first-child . :visited \u00b6 La pseudo-clase :visited de CSS representa enlaces que el usuario ya ha visitado. Por motivos de privacidad, los estilos que se pueden modificar con este selector son muy limitados. 1 2 3 4 /* Selecciona cualquier <a> que ha sido visitado */ a : visited { color : green ; } Pseudo-elementos \u00b6 Los pseudo-elementos son parecidos a las pseudo-clases, con alguna diferencia. Estos son claves, ahora precedidas por :: , que se a\u00f1aden al final del selector para elegir cierta parte de un elemento. ::after ::before ::first-letter ::first-line ::selection ::backdrop ::after \u00b6 El pseudo-elemento CSS ::after coincide con el \u00faltimo hijo virtual del elemento seleccionado. Se usa generalmente para a\u00f1adir contenido est\u00e9tico a un elemento, usando la propiedad CSS content. Este elemento se muestra en l\u00ednea con el texto de forma predeterminada. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"pseudoElementosAfter.css\" > < title > Selectores de elementos </ title > </ head > < body > < p class = \"boring-text\" > Here is some good old boring text. </ p > < p > Here is some moderate text that is neither boring nor exciting. </ p > < p class = \"exciting-text\" > Contributing to MDN is easy and fun. Just hit the edit button to add new live samples, or improve existing samples. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 . exciting-text :: after { content : \"<- now this *is* exciting!\" ; color : green ; } . boring-text :: after { content : \"<- BORING!\" ; color : red ; } ::before \u00b6 ::before crea un pseudo-elemento que es el primer hijo del elemento seleccionado. Es usado normalmente para a\u00f1adir contenido est\u00e9tico a un elemento, usando la propiedad content. Este elemento se muestra en l\u00ednea con el texto de forma predeterminada. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"pseudoElementosBefore.css\" > < title > Selectores de elementos </ title > </ head > < body > < q > Some quotes </ q > , he said, < q > are better than none </ q > . </ body > </ html > C\u00f3digo CSS 1 2 3 4 q :: before { content : \"\u2665 \" ; color : red ; } ::first-letter \u00b6 El pseudo-elemento CSS ::first-letter aplica estilos a la primera letra de la primera l\u00ednea de un elemento de nivel de bloque, pero solo cuando no est\u00e1 precedido por otro contenido (como im\u00e1genes o tablas en l\u00ednea). C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"pseudoElementosFirstLetter.css\" > < title > Selectores de elementos </ title > </ head > < body > < p > Lorem ipsum dolor sit amet, consetetur sadipscing elitr. </ p > < p > Duis autem vel eum iriure dolor in molestie consequat. </ p > < p > Ut wisi enim ad minim veniam. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 /* Selecciona la primer letra del elemento <p> */ p :: first-letter { font-size : 130 % ; } ::first-line \u00b6 El pseudo-elemento CSS ::first-line aplica estilos a la primera l\u00ednea de un elemento de nivel de bloque. Tenga en cuenta que la longitud de la primera l\u00ednea depende de muchos factores, incluido el ancho del elemento, el ancho del documento y el tama\u00f1o de la fuente del texto. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"pseudoElementosFirstLine.css\" > < title > Selectores de elementos </ title > </ head > < body > < p > Los estilos se aplican a la primer l\u00ednea de este p\u00e1rrafo. En la l\u00ednea siguiente, el texto se mostrar\u00e1 de forma normal. </ p > < span > A la primer l\u00ednea de este texto no se le aplica estilo alguno porque no est\u00e1 contenido dentro de un elemento en bloque. </ span > </ body > </ html > C\u00f3digo CSS 1 2 3 4 :: first-line { color : blue ; text-transform : uppercase ; } Fuente: https://developer.mozilla.org/es/docs/Learn/CSS/Introduction_to_CSS/Pseudo-clases_y_pseudo-elementos","title":"Sintaxis"},{"location":"cssFundamentos/introSintax/#selectores-de-elementos","text":"Los selectores de elementos (o selectores de tipos) apuntan a etiquetas HTML. Para ello, en el documento CSS se escribe el nombre de la etiqueta. Sintaxis CSS elemento { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectoresElementos.css\" > < title > Selectores de elementos </ title > </ head > < body > < h1 > Sapiente incidunt </ h1 > < p > Lorem ipsum dolor sit amet, consectetur adipisicing. </ p > < p > At libero et, voluptas deserunt. </ p > < div > Sint maxime iure officiis atque. </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 h1 { color : teal ;} p { font-size : 12 px ;} div { background-color : peach ;}","title":"Selectores de elementos"},{"location":"cssFundamentos/introSintax/#selectores-id-y-class","text":"Los selectores id y class apuntan a los valores de los atributos hom\u00f3nimos. Para apuntar a un identificador ( id ) de HTML, en el documento CSS se escribe el signo de numeral ( # ), seguido de su valor. Para apuntar a una clase ( class ) de HTML, en el documento CSS se escribe el signo de punto ( . ), seguido de su valor. Sobre el uso de id y class Un mismo selector de tipo id puede usarse por \u00fanica vez en el documento HTML. En cambio un selector de tipo class puede usarse sin l\u00edmite en la misma p\u00e1gina. Sintaxis CSS . clase { propiedad : valor ;} # identificador { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectoresIDClass.css\" > < title > Selectores ID y Class </ title > </ head > < body > < div id = \"noticias\" > < h1 class = \"rojo\" > Sapiente incidunt </ h1 > < p class = \"rojo destacado\" > Lorem ipsum dolor. </ p > < p class = \"cursiva\" > At libero et, voluptas deserunt debitis. </ p > < p > Fuga voluptatem, laboriosam voluptate. </ p > < div class = \"resaltado\" > Sint maxime iure officiis atque modi. </ div > </ div > < div id = \"pie\" > < h2 class = \"rojo\" > Laboriosam voluptate </ h2 > < p > At libero et, voluptas deserunt debitis facilis unde. </ p > </ div > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 # noticias { magin : 5 px ; padding : 8 px 0 ;} div # pie { font-size : 9 px ; margin : 10 px 0 ;} . rojo { color : red ;} p . cursiva { font-style : italic ;} . destacado { font-size : 16 px ;} . restaltado { background-color : yelow ;}","title":"Selectores id y class"},{"location":"cssFundamentos/introSintax/#selectores-de-atributos","text":"Apuntan a los atributos de los elementos HTML Sintaxis CSS [ atributo ] { propiedad : valor ;} [ atributo = \"valor\" ] { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectoresAtributos.css\" > < title > Selectores de atributos </ title > </ head > < body > < ul > < li >< a href = \"page2.html\" title = \"Siguiente\" > Siguiente </ a ></ li > < li >< a href = \"#interno\" > Enlace interno </ a ></ li > < li >< a href = \"http://itel.edu.ar\" title = \"ITEL\" > itel.edu.ar </ a ></ li > < li >< a href = \"#OtroEnlace\" > Otro enlace interno </ a ></ li > < li >< a href = \"https://coarg.org.ar/\" > Un enlace externo </ a ></ li > </ ul > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /* Elementos <a> con un atributo de t\u00edtulo */ a [ title ] { color : orange ; } /* Enlaces internos, comenzando con \"#\" */ a [ href ^= \"#\" ] { color : gold ; } /* Enlaces que contienen la palabra \"interno\" en cualquier parte de la URL */ a [ href *= \"interno\" ] { background-color : black ; } /* Enlaces que contienen la palabra \"ITEL\" en el valor del atributo */ a [ title ~= \"ITEL\" ] { background-color : blue ; color : yellow ; } /* Enlaces que contienen la palabra \"otroenlace\" en cualquier parte de la URL, independientemente de las may\u00fasculas */ a [ href *= \"otroenlace\" i ] { color : cyan ; background-color : fuchsia ; } /* Enlaces que terminan en \".org.ar\" */ a [ href $= \".org.ar\" ] { color : red ; } Sintetizando y m\u00e1s Selectores de presencia y valor Estos selectores de atributos afectar\u00e1n a los elementos cuyo valor coincida exactamente con el valor del atributo especificado: [attr] : Este selector 'seleccionar\u00e1' todos los elementos que contengan el atributo attr , sin importar el valor que tenga. [attr=val] : Este, seleccionar\u00e1 los elementos con el atributo attr , pero solo aquello cuyo valor coincida con val . [attr~=val] : Este selector afectar\u00e1 a los elementos con el atributo attr , pero solo si el valor val est\u00e1 contenido en la lista de valores (separados por espacios) incluidos en el valor de attr , por ejemplo una de las clases contenida en una lista de clases (separadas por espacios). Selector de atributos por valor textual Tambi\u00e9n conocidos como \"RegExp-like selectors\", pues proporcionan una forma de selecci\u00f3n similar a las expresiones normales regular expression (aunque siendo estrictos, estos selectores no son verdaderas expresiones normales): [attr|=val] : Este selector elegir\u00e1 todos los elementos con el atributo attr cuyo valor sea exactamente val o empieza por val- (nota: el guion no es un error, se usa para manejar c\u00f3digos de lenguaje de programaci\u00f3n). [attr^=val] : Seleccionar\u00e1 todos los elementos cuyo atributo attr comienza por el valor val . [attr$=val] : Este selector elegir\u00e1 todos los elementos cuyo atributo attr termina por el valor val . [attr*=val] : Este seleccionar\u00e1 todos los elementos cuyo atributo attr contiene la cadena val (al contrario que [attr~=val] , este selector no considera los espacios como separador de valores sino como parte del valor del atributo). Fuente: https://developer.mozilla.org/es/docs/Web/CSS/Selectores_atributo","title":"Selectores de atributos"},{"location":"cssFundamentos/introSintax/#selectores-jerarquicos-o-combinados","text":"En CSS, podemos combinar varios selectores juntos y con ello seleccionar elementos HTML contenidos en otros elementos, o elementos adyacentes a otros. Disponemos de cuatro tipos: Selector descendiente (espacio) Selector hijo > Selector hermano + Selector hermano en general ~ Caracter Ejemplo CSS Descripci\u00f3n [espacio] div a {color: red;} El estilo aplica a todos los elemenos <a> que est\u00e9n contenidos dentro de un elemento <div> , sin importar si el primero es hijo, nieto, bisnieto, etc., del segundo. > div > p {font-size: 110%;} El estilo aplica a el elemento <p> que est\u00e9 contenido dentro de un elemento div siendo el primero, hijo directo del segundo. + h1 + p {color: blue;} El estilo aplica a el elemento <p> que est\u00e9 en el mismo nivel que <h1> e inmediatamente despu\u00e9s de \u00e9ste. ~ h1 ~ h2 {background: peach;} El estilo aplica a el elemento <h2> que est\u00e9 en el mismo nivel que <h1> aunque no inmediatamente despu\u00e9s de \u00e9ste.","title":"Selectores jer\u00e1rquicos o combinados"},{"location":"cssFundamentos/introSintax/#selector-descendiente","text":"Empleado para seleccionar a todos los elementos descendientes de un elemento espec\u00edfico. Nno tiene por qu\u00e9 ser un hijo; puede ser un nieto, por ejemplo. Sintaxis CSS selectorPadre selectorHijo { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectorDescendiente.css\" > < title > Selectores de atributos </ title > </ head > < body > < div > < p > Lorem ipsum dolor sit amet. Placeat nostrum, < a href = \"#\" > sunt odit quas </ a > , velit temporibus. </ p > < p >< a href = \"#\" > Totam neque consequatur sequi! </ a > . Consectetur asperiores ipsum accusamus. </ p > </ div > < p > Repellendus excepturi < a href = \"#\" > eligendi aperiam rem, eos quam itaque </ a > voluptate alias vero unde </ a > . </ p > < p >< a href = \"#\" > Facilis natus dicta nostrum aut </ a > , quae ea officiis rem quisquam dolore facere </ a > . </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 div a { color : green ; }","title":"Selector descendiente"},{"location":"cssFundamentos/introSintax/#selector-hijo","text":"Permite seleccionar un elemento HTML que es hijo directo de otro elemento HTML . Sintaxis CSS elementoPadre > ElementoHijo { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectorHijo.css\" > < title > Selectores de atributos </ title > </ head > < body > < div > < p > Lorem ipsum dolor sit amet. Placeat nostrum, < a href = \"#\" > sunt odit quas </ a > , velit temporibus. </ p > < p >< a href = \"#\" > Totam neque consequatur sequi! </ a > . Consectetur asperiores ipsum accusamus. </ p > </ div > < p > Repellendus excepturi < a href = \"#\" > eligendi aperiam rem, eos quam itaque </ a > voluptate alias vero unde </ a > . </ p > < p >< a href = \"#\" > Facilis natus dicta nostrum aut </ a > , quae ea officiis rem quisquam dolore facere </ a > . </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 body > p { background-color : yellow ; }","title":"Selector hijo"},{"location":"cssFundamentos/introSintax/#el-selector-hermano-adyacente","text":"Permite seleccionar un elemento HTML que es hermano directo de otro elemento HTML (a la derecha por ejemplo, en el mismo nivel jer\u00e1rquico). Sintaxis CSS elementoHermano1 + elementoHermano2 { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectorHermano.css\" > < title > Selectores de elementos </ title > </ head > < body > < h1 > Sapiente incidunt </ h1 > < p > Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur dolores ducimus ratione voluptatibus. </ p > < p > At libero et, voluptas deserunt debitis facilis unde, commodi adipisci illum amet esse repellat soluta quidem voluptates. Fuga voluptatem, < a href = \"#\" > laboriosam voluptate mollitia </ a > dolores assumenda blanditiis excepturi, sint, quisquam fugiat id tenetur. </ p > < div > Sint maxime iure officiis atque modi, a repellat incidunt quis itaque. </ div > </ body > </ html > C\u00f3digo CSS 1 2 h1 + p { background-color : yellow ;} p + div { color : red ;}","title":"El selector hermano adyacente"},{"location":"cssFundamentos/introSintax/#el-selector-hermano-en-general","text":"Permite seleccionar cualquier elemento HTML hermano de otro elemento HTML (por ejemplo en el mismo nivel jer\u00e1rquico, pero no necesariamente adyacente a \u00e9l). Sintaxis CSS elementoHermano1 ~ elementoHermano2 { propiedad : valor ;} C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"selectorHermanoGeneral.css\" > < title > Selectores de elementos </ title > </ head > < body > < h1 > Sapiente incidunt </ h1 > < p > Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequuntur dolores ducimus ratione voluptatibus. </ p > < p > At libero et, voluptas deserunt debitis facilis unde, commodi adipisci illum amet esse repellat soluta quidem voluptates. Fuga voluptatem, < a href = \"#\" > laboriosam voluptate mollitia </ a > dolores assumenda blanditiis excepturi, sint, quisquam fugiat id tenetur. </ p > < div > Sint maxime iure officiis atque modi, a repellat incidunt quis itaque. </ div > </ body > </ html > C\u00f3digo CSS 1 h1 ~ div { background-color : orange ;} Fuente: https://developer.mozilla.org/es/docs/Learn/CSS/Introduction_to_CSS/Selectores_simples#Combinaciones","title":"El selector hermano en general"},{"location":"cssFundamentos/introSintax/#pseudo-selectores","text":"Los pseudo-selectores deben su nombre a que no seleccionan elementos HTML \"completos\", sino ciertas partes de estos o solo bajo determinadas circunstancias. Hay de dos tipos: pseudo-clases pseudo-elementos","title":"Pseudo-selectores"},{"location":"cssFundamentos/introSintax/#pseudo-clases","text":"Una pseudo-clase CSS consta de una clave precedida de dos puntos (:) que a\u00f1adiremos al final del selector para indicar que daremos estilo a los elementos seleccionados solo cuando estos se encuentren en un estado determinado. Ellas son: :active :any :checked :default :dir() :disabled :empty :enabled :first :first-child :first-of-type :fullscreen :focus :hover :indeterminate :in-range :invalid :lang() :last-child :last-of-type :left :link :not() :nth-child() :nth-last-child() :nth-last-of-type() :nth-of-type() :only-child :only-of-type :optional :out-of-range :read-only :read-write :required :right :root :scope :target :valid :visited","title":"Pseudo-clases"},{"location":"cssFundamentos/introSintax/#active","text":"La pseudo-clase :active de CSS representa un elemento (como un bot\u00f3n) que el usuario est\u00e1 activando. Cuando se usa un mouse, la \"activaci\u00f3n\" generalmente comienza cuando el usuario presiona el bot\u00f3n primario del mouse y termina cuando se suelta. La pseudo-clase :active se usa com\u00fanmente en los elementos <a> y <button> , pero tambi\u00e9n se puede usar en otros elementos. 1 2 3 4 /* Selecciona cualquier <a> que est\u00e9 siendo activado */ a : active { color : red ; }","title":":active"},{"location":"cssFundamentos/introSintax/#focus","text":"La pseudo-clase :focus CSS representa un elemento (como una entrada de formulario) que ha recibido el foco. Generalmente se activa cuando el usuario hace clic, toca un elemento o lo selecciona con la tecla Tab del teclado. 1 2 3 4 /* Selecciona cualquier <input> cuando se enfoca */ input : focus { color : red ; }","title":":focus"},{"location":"cssFundamentos/introSintax/#hover","text":"La pseudo-clase :hover de CSS coincide cuando el usuario interact\u00faa con un elemento con un dispositivo se\u00f1alador, pero no necesariamente lo activa. Generalmente se activa cuando el usuario se desplaza sobre un elemento con el cursor (puntero del mouse). 1 2 3 4 /* Selecciona cualquier elemento <a> cuando est\u00e1 \"mantenido (hovered)\" */ a : hover { color : orange ; }","title":":hover"},{"location":"cssFundamentos/introSintax/#nth-child","text":"La pseudo-clase :nth-child() de CSS coincide con uno o m\u00e1s elementos en funci\u00f3n de su posici\u00f3n entre un grupo de hermanos. 1 2 3 4 5 /* Selecciona cada cuarto elemento entre cualquier grupo de hermanos */ : nth-child ( 4n ) { color : lime ; } Opciones para :nth-child odd Representa elementos cuya posici\u00f3n num\u00e9rica en una serie de hermanos es impar: 1, 3, 5, etc. even Representa elementos cuya posici\u00f3n num\u00e9rica en una serie de hermanos es par: 2, 4, 6, etc. <An+B> Representa elementos cuya posici\u00f3n num\u00e9rica en una serie de hermanos coincide con el patr\u00f3n An+B , para cada entero positivo o valor cero de n . El \u00edndice del primer elemento es 1. Los valores A y B deben ser ambos n\u00fameros enteros. Ejemplos de aplicaci\u00f3n tr:nth-child(odd) o tr:nth-child(2n+1) Representa las filas impares de una tabla HTML: 1, 3, 5, etc. tr:nth-child(even) o tr:nth-child(2n) Representa las filas pares de una tabla HTML: 2, 4, 6, etc. :nth-child(7) Representa el s\u00e9ptimo elemento. :nth-child(5n) Representa los elementos 5, 10, 15, etc. :nth-child(3n+4) Representa los elementos 4, 7, 10, 13, etc. :nth-child(-n+3) Representa los primeros tres elementos entre un grupo de hermanos. p:nth-child(n) Representa cada elemento <p> entre un grupo de hermanos. Esto es lo mismo que un simple selector <p> . p:nth-child(1) o p:nth-child(0n+1) Representa cada <p> que es el primer elemento entre un grupo de hermanos. Esto es lo mismo que el selector :first-child .","title":":nth-child"},{"location":"cssFundamentos/introSintax/#visited","text":"La pseudo-clase :visited de CSS representa enlaces que el usuario ya ha visitado. Por motivos de privacidad, los estilos que se pueden modificar con este selector son muy limitados. 1 2 3 4 /* Selecciona cualquier <a> que ha sido visitado */ a : visited { color : green ; }","title":":visited"},{"location":"cssFundamentos/introSintax/#pseudo-elementos","text":"Los pseudo-elementos son parecidos a las pseudo-clases, con alguna diferencia. Estos son claves, ahora precedidas por :: , que se a\u00f1aden al final del selector para elegir cierta parte de un elemento. ::after ::before ::first-letter ::first-line ::selection ::backdrop","title":"Pseudo-elementos"},{"location":"cssFundamentos/introSintax/#after","text":"El pseudo-elemento CSS ::after coincide con el \u00faltimo hijo virtual del elemento seleccionado. Se usa generalmente para a\u00f1adir contenido est\u00e9tico a un elemento, usando la propiedad CSS content. Este elemento se muestra en l\u00ednea con el texto de forma predeterminada. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"pseudoElementosAfter.css\" > < title > Selectores de elementos </ title > </ head > < body > < p class = \"boring-text\" > Here is some good old boring text. </ p > < p > Here is some moderate text that is neither boring nor exciting. </ p > < p class = \"exciting-text\" > Contributing to MDN is easy and fun. Just hit the edit button to add new live samples, or improve existing samples. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 . exciting-text :: after { content : \"<- now this *is* exciting!\" ; color : green ; } . boring-text :: after { content : \"<- BORING!\" ; color : red ; }","title":"::after"},{"location":"cssFundamentos/introSintax/#before","text":"::before crea un pseudo-elemento que es el primer hijo del elemento seleccionado. Es usado normalmente para a\u00f1adir contenido est\u00e9tico a un elemento, usando la propiedad content. Este elemento se muestra en l\u00ednea con el texto de forma predeterminada. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"pseudoElementosBefore.css\" > < title > Selectores de elementos </ title > </ head > < body > < q > Some quotes </ q > , he said, < q > are better than none </ q > . </ body > </ html > C\u00f3digo CSS 1 2 3 4 q :: before { content : \"\u2665 \" ; color : red ; }","title":"::before"},{"location":"cssFundamentos/introSintax/#first-letter","text":"El pseudo-elemento CSS ::first-letter aplica estilos a la primera letra de la primera l\u00ednea de un elemento de nivel de bloque, pero solo cuando no est\u00e1 precedido por otro contenido (como im\u00e1genes o tablas en l\u00ednea). C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"pseudoElementosFirstLetter.css\" > < title > Selectores de elementos </ title > </ head > < body > < p > Lorem ipsum dolor sit amet, consetetur sadipscing elitr. </ p > < p > Duis autem vel eum iriure dolor in molestie consequat. </ p > < p > Ut wisi enim ad minim veniam. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 /* Selecciona la primer letra del elemento <p> */ p :: first-letter { font-size : 130 % ; }","title":"::first-letter"},{"location":"cssFundamentos/introSintax/#first-line","text":"El pseudo-elemento CSS ::first-line aplica estilos a la primera l\u00ednea de un elemento de nivel de bloque. Tenga en cuenta que la longitud de la primera l\u00ednea depende de muchos factores, incluido el ancho del elemento, el ancho del documento y el tama\u00f1o de la fuente del texto. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < link rel = \"stylesheet\" href = \"pseudoElementosFirstLine.css\" > < title > Selectores de elementos </ title > </ head > < body > < p > Los estilos se aplican a la primer l\u00ednea de este p\u00e1rrafo. En la l\u00ednea siguiente, el texto se mostrar\u00e1 de forma normal. </ p > < span > A la primer l\u00ednea de este texto no se le aplica estilo alguno porque no est\u00e1 contenido dentro de un elemento en bloque. </ span > </ body > </ html > C\u00f3digo CSS 1 2 3 4 :: first-line { color : blue ; text-transform : uppercase ; } Fuente: https://developer.mozilla.org/es/docs/Learn/CSS/Introduction_to_CSS/Pseudo-clases_y_pseudo-elementos","title":"::first-line"},{"location":"cssFundamentos/introlExercises/","text":"Agregando CSS \u00b6 Descarg\u00e1 el ejercicio y asign\u00e1 estilos CSS: Usando el formato \"en l\u00ednea\" para los p\u00e1rrafos. Empleando el formato \"Hoja de estilos CSS interna\" para los t\u00edtulos. Descarg\u00e1 el ejercicio y us\u00e1 una hoja de estilos CSS externa para darle estilo a los t\u00edtulos y p\u00e1rrafos. Selectores \u00b6 Descarg\u00e1 el ejercicio y escrib\u00ed tus propios estilos respetando las siguientes consignas: Una clase para los t\u00edtulos <h1> y <h2> Una clase para los p\u00e1rrafos que se encuentren luego de <h2> Una clase para las listas ordenadas ubicadas dentro de un <div> y otra para las otras listas ordenadas Un identificador para <div> Descarg\u00e1 el ejercicio y escrib\u00ed tus propias combinaciones de selectores: Estilizar los links que est\u00e1n dentro de las listas ul (desordenadas) Estilizar los links dentro de las ul, solo cuando les pase el rat\u00f3n. Estilizar solo el p\u00e1rrafo que va directamente despu\u00e9s de primer t\u00edtulo. Descarg\u00e1 el ejercicio y realiz\u00e1 las consignas indicadas (Soluci\u00f3n) . Descarg\u00e1 el ejercicio y realiz\u00e1 las consignas indicadas (Soluci\u00f3n) .","title":"Ejercicios"},{"location":"cssFundamentos/introlExercises/#agregando-css","text":"Descarg\u00e1 el ejercicio y asign\u00e1 estilos CSS: Usando el formato \"en l\u00ednea\" para los p\u00e1rrafos. Empleando el formato \"Hoja de estilos CSS interna\" para los t\u00edtulos. Descarg\u00e1 el ejercicio y us\u00e1 una hoja de estilos CSS externa para darle estilo a los t\u00edtulos y p\u00e1rrafos.","title":"Agregando CSS"},{"location":"cssFundamentos/introlExercises/#selectores","text":"Descarg\u00e1 el ejercicio y escrib\u00ed tus propios estilos respetando las siguientes consignas: Una clase para los t\u00edtulos <h1> y <h2> Una clase para los p\u00e1rrafos que se encuentren luego de <h2> Una clase para las listas ordenadas ubicadas dentro de un <div> y otra para las otras listas ordenadas Un identificador para <div> Descarg\u00e1 el ejercicio y escrib\u00ed tus propias combinaciones de selectores: Estilizar los links que est\u00e1n dentro de las listas ul (desordenadas) Estilizar los links dentro de las ul, solo cuando les pase el rat\u00f3n. Estilizar solo el p\u00e1rrafo que va directamente despu\u00e9s de primer t\u00edtulo. Descarg\u00e1 el ejercicio y realiz\u00e1 las consignas indicadas (Soluci\u00f3n) . Descarg\u00e1 el ejercicio y realiz\u00e1 las consignas indicadas (Soluci\u00f3n) .","title":"Selectores"},{"location":"cssFundamentos/units/","text":"Hay muchos valores de propiedades CSS, valores num\u00e9ricos, colores o funciones que realizan una acci\u00f3n (como mostrar una imagen de fondo o rotar un elemento). Algunos dependen de las unidades en que se expresen los valores a representar \u2014 como la medida de una caja: \u00bf30 pixels, 30 cm. o 30 ems? En esta gu\u00eda veremos valores usuales como longitud, color y funciones simples, y otros menos comunes como grados o valores num\u00e9ricos sin unidades. Hay gran variedad de valores CSS, algunos de ellos muy usuales y otros que rara vez nos encontraremos. En este art\u00edculo no los vamos a estudiar todos de manera exhaustiva; solo aquellos que nos servir\u00e1n en nuestro camino de aprendizaje de CSS por ser los m\u00e1s usuales. Vamos a ver los siguientes valores CSS: Valores num\u00e9ricos : Valores de longitud para expresar el ancho de elementos, de bordes, o tama\u00f1o de fuentes; tambi\u00e9n enteros sin unidades para expresar anchos de l\u00ednea o veces que se repite una animaci\u00f3n. Porcentajes : Se usan para expresar tama\u00f1o o longitud \u2014 relativos por ejemplo al ancho y alto del contenedor previo o al tama\u00f1o de fuente predeterminado. Colores : Para expresar colores de fondo, de texto, etc. Coordenadas : Para expresar la posici\u00f3n relativa de un elemento desde, por ejemplo, el margen superior izquierdo de la pantalla. Funciones : Para expresar im\u00e1genes de fondo o el degradado de la imagen de fondo. A continuaci\u00f3n veremos ejemplos de unidades que encontraremos en el resto del tema CSS, y nos servir\u00e1n para \u00a1cualquier CSS que nos encontremos! Nos acostumbraremos con rapidez. Fuente de conocimiento: developer.mozilla.org/es developer.mozilla.org/es","title":"Introducci\u00f3n"},{"location":"cssFundamentos/unitsColors/","text":"Colores \u00b6 Hay varias formas de referenciar colores en CSS, algunas m\u00e1s recientes que otras. Los mismos valores de color pueden utilizarse en todos los sitios en CSS, si nos referimos a color de texto, de fondo o cualquier otro. El sistema de color est\u00e1ndar en los ordenadores actuales es el de 24 bits, que permite representar unos 16,7 millones de colores diferentes por canal (256 x 256 x 256 = 16.777.216). Veamos los valores de los distintos tipos de sistemas de colores. Conversor online de sistemas de colores Para pasar los valores de unos sistemas de colores a otros, necesitaremos un conversor de colores. Estos son algunos de los conversores disponibles online: rapidtables.com w3schools.com serennu.com Claves de color \u00b6 El sistema de color m\u00e1s antiguo y sencillo en CSS son las claves de color. Son cadenas de texto que representan valores de color. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colorkey.css\" > </ head > < body > < p > Este p\u00e1rrafo tiene un fondo rojo. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 p { background-color : red ; } Es f\u00e1cil de entender, aunque solo nos permite referenciar unos cuantos colores primitivos. Lista de claves de color \u00b6 Existen alrededor de 165 claves diferentes para su uso en los distintos navegadores (se exhibe, adem\u00e1s, el valor del color en formato hexadecimal): Nombre del color Valor hexadecimal Color AliceBlue #F0F8FF AntiqueWhite #FAEBD7 Aqua #00FFFF Aquamarine #7FFFD4 Azure #F0FFFF Beige #F5F5DC Bisque #FFE4C4 Black #000000 BlanchedAlmond #FFEBCD Blue #0000FF BlueViolet #8A2BE2 Brown #A52A2A BurlyWood #DEB887 CadetBlue #5F9EA0 Chartreuse #7FFF00 Chocolate #D2691E Coral #FF7F50 CornflowerBlue #6495ED Cornsilk #FFF8DC Crimson #DC143C Cyan #00FFFF DarkBlue #00008B DarkCyan #008B8B DarkGoldenRod #B8860B DarkGray #A9A9A9 DarkGrey #A9A9A9 DarkGreen #006400 DarkKhaki #BDB76B DarkMagenta #8B008B DarkOliveGreen #556B2F DarkOrange #FF8C00 DarkOrchid #9932CC DarkRed #8B0000 DarkSalmon #E9967A DarkSeaGreen #8FBC8F DarkSlateBlue #483D8B DarkSlateGray #2F4F4F DarkSlateGrey #2F4F4F DarkTurquoise #00CED1 DarkViolet #9400D3 DeepPink #FF1493 DeepSkyBlue #00BFFF DimGray #696969 DimGrey #696969 DodgerBlue #1E90FF FireBrick #B22222 FloralWhite #FFFAF0 ForestGreen #228B22 Fuchsia #FF00FF Gainsboro #DCDCDC GhostWhite #F8F8FF Gold #FFD700 GoldenRod #DAA520 Gray #808080 Grey #808080 Green #008000 GreenYellow #ADFF2F HoneyDew #F0FFF0 HotPink #FF69B4 IndianRed #CD5C5C Indigo #4B0082 Ivory #FFFFF0 Khaki #F0E68C Lavender #E6E6FA LavenderBlush #FFF0F5 LawnGreen #7CFC00 LemonChiffon #FFFACD LightBlue #ADD8E6 LightCoral #F08080 LightCyan #E0FFFF LightGoldenRodYellow #FAFAD2 LightGray #D3D3D3 LightGrey #D3D3D3 LightGreen #90EE90 LightPink #FFB6C1 LightSalmon #FFA07A LightSeaGreen #20B2AA LightSkyBlue #87CEFA LightSlateGray #778899 LightSlateGrey #778899 LightSteelBlue #B0C4DE LightYellow #FFFFE0 Lime #00FF00 LimeGreen #32CD32 Linen #FAF0E6 Magenta #FF00FF Maroon #800000 MediumAquaMarine #66CDAA MediumBlue #0000CD MediumOrchid #BA55D3 MediumPurple #9370DB MediumSeaGreen #3CB371 MediumSlateBlue #7B68EE MediumSpringGreen #00FA9A MediumTurquoise #48D1CC MediumVioletRed #C71585 MidnightBlue #191970 MintCream #F5FFFA MistyRose #FFE4E1 Moccasin #FFE4B5 NavajoWhite #FFDEAD Navy #000080 OldLace #FDF5E6 Olive #808000 OliveDrab #6B8E23 Orange #FFA500 OrangeRed #FF4500 Orchid #DA70D6 PaleGoldenRod #EEE8AA PaleGreen #98FB98 PaleTurquoise #AFEEEE PaleVioletRed #DB7093 PapayaWhip #FFEFD5 PeachPuff #FFDAB9 Peru #CD853F Pink #FFC0CB Plum #DDA0DD PowderBlue #B0E0E6 Purple #800080 RebeccaPurple #663399 Red #FF0000 RosyBrown #BC8F8F RoyalBlue #4169E1 SaddleBrown #8B4513 Salmon #FA8072 SandyBrown #F4A460 SeaGreen #2E8B57 SeaShell #FFF5EE Sienna #A0522D Silver #C0C0C0 SkyBlue #87CEEB SlateBlue #6A5ACD SlateGray #708090 SlateGrey #708090 Snow #FFFAFA SpringGreen #00FF7F SteelBlue #4682B4 Tan #D2B48C Teal #008080 Thistle #D8BFD8 Tomato #FF6347 Turquoise #40E0D0 Violet #EE82EE Wheat #F5DEB3 White #FFFFFF WhiteSmoke #F5F5F5 Yellow #FFFF00 YellowGreen #9ACD32 Valores hexadecimales \u00b6 El siguiente sistema de color universal es el sistema hexadecimal, o c\u00f3digos hex. Cada valor hex est\u00e1 compuesto por una almohadilla (#) seguida por seis n\u00fameros hexadecimales, cada uno de los cuales puede estar comprendido entre el 0 y la f (que representa el 15) \u2014 0123456789abcdef (16 s\u00edmbolos). Cada par de valores representa uno de los canales primarios \u2014 rojo, verde y azul \u2014 y nos permite referenciar cualquiera de los 256 valores disponibles para cada uno (16 x 16 = 256). C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colorhex.css\" > </ head > < body > < p class = \"rojo\" > Este p\u00e1rrafo tiene un fondo rojo. </ p > < p class = \"azul\" > Este p\u00e1rrafo tiene un fondo azul. </ p > < p class = \"lila\" > Este p\u00e1rrafo tiene un fondo lila. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* equivalente a la palabra clave red */ . rojo { background-color : #ff0000 ; } /* equivalente a la palabra clave blue */ . azul { background-color : #0000ff ; } /* no posee equivalente de palabra clave */ . lila { background-color : #e0b0ff ; } Estos valores son un poco m\u00e1s complejos y dif\u00edciles de entender, pero es mucho m\u00e1s vers\u00e1til que las claves \u2014 podemos utilizar valores hex para representar cualquier color que queramos usar en nuestra paleta de colores. RGB \u00b6 El tercer sistema al que vamos a hacer referencia es RGB. Un valor RGB es una funci\u00f3n \u2014 rgb() \u2014 a la que pasamos tres par\u00e1metros que representas los colores primarios rojo, verde y azul, parecido al sistema hex. La diferencia radica en que, en lugar de representar cada canal por un par de n\u00fameros, ahora lo hacemos simplemente por un n\u00famero decimal entre el 0 y el 255. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colorrgb.css\" > </ head > < body > < p class = \"rojo\" > Este p\u00e1rrafo tiene un fondo rojo. </ p > < p class = \"azul\" > Este p\u00e1rrafo tiene un fondo azul. </ p > < p class = \"lila\" > Este p\u00e1rrafo tiene un fondo lila. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* equivalente a la palabra clave red */ . rojo { background-color : rgb ( 255 , 0 , 0 ); } /* equivalente a la palabra clave blue */ . azul { background-color : rgb ( 0 , 0 , 255 ); } /* no posee equivalente de palabra clave */ . lila { background-color : rgb ( 224 , 176 , 255 ); } El sistema RGB es casi tan soportado como el hexadecimal \u2014 probablemente no nos encontremos en nuestro trabajo ning\u00fan navegador que no los reconozca ambos. HSL \u00b6 Un poco menos soportado que RGB est\u00e1 el modelo HSL (no en viejas versiones de IE), que fueron implementadas con mucho inter\u00e9s de los dise\u00f1adores \u2014 en vez de valores rojo, verde y azul, la funci\u00f3n hsl() admite los valores tono(hue), saturaci\u00f3n y brillo (lightness), para referenciar 16,7 millones de colores, pero de forma diferente: hue (tono) : Es el color b\u00e1sico. Toma un valor entre 0-360, como los \u00e1ngulos de una rueda de color. saturaci\u00f3n : \u00bfC\u00f3mo est\u00e1 el color de saturado? Con valores entre 0 y 100%, en 0 no hay color (aparece como una sombra gris), y 100% es la saturaci\u00f3n total del color. lightness (brillo) : Representa la claridad del color. Toma valores entre 0 y 100%, donde 0 es la ausencia de luz (completamente negro) y 100% es el brillo total (completamente blanco). C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colorrgb.css\" > </ head > < body > < p class = \"rojo\" > Este p\u00e1rrafo tiene un fondo rojo. </ p > < p class = \"azul\" > Este p\u00e1rrafo tiene un fondo azul. </ p > < p class = \"lila\" > Este p\u00e1rrafo tiene un fondo lila. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* equivalente a la palabra clave red */ . rojo { background-color : hsl ( 0 , 100 % , 50 % ); } /* equivalente a la palabra clave blue */ . azul { background-color : hsl ( 240 , 100 % , 50 % ); } /* no posee equivalente de palabra clave */ . lila { background-color : hsl ( 276 , 100 % , 85 % ); } El modelo de colores HSL es intuitivo para los dise\u00f1adores acostumbrados a trabajar con estas caracteristicas de color. Es \u00fatil, por ejemplo, para representar una paleta de sombras en un sistema monocrom\u00e1tico: 1 2 3 4 /* Tres variaciones de sombra del color rojo */ background-color : hsl ( 0 , 100 %, 50 %); background-color : hsl ( 0 , 100 %, 60 %); background-color : hsl ( 0 , 100 %, 70 %); RGBA y HSLA \u00b6 RGB y HSL tienen sus correspondientes modos \u2014 RGBA and HSLA \u2014 que nos permiten representar, no solo el color, sino tambi\u00e9n la transparencia a representar. Sus funciones correspondientes toman los mismos par\u00e1metros, m\u00e1s un cuarto valor entre 0\u20131 \u2014 que establece la transparencia, o el llamado canal alfa. 0 es totalmente transparente y 1 completamente opaco. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colortransparent.css\" > </ head > < body > < p class = \"rojot\" > Este p\u00e1rrafo tiene un fondo rojo transparente. </ p > < p class = \"azult\" > Este p\u00e1rrafo tiene un fondo azul transparente. </ p > </ body > </ html > C\u00f3digo CSS ( Se \"baj\u00f3\" el primer p\u00e1rrafo con posicionamiento, para mostrar el efecto de superposici\u00f3n de los p\u00e1rrafos ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 p { height : 50 px ; width : 350 px ; } /* Rojo transparente */ . rojot { background-color : rgba ( 255 , 0 , 0 , 0.5 ); position : relative ; top : 30 px ; left : 50 px ; } /* Azul transparente */ . azult { background-color : hsla ( 240 , 100 % , 50 % , 0.5 ); } Los colores transparentes son muy \u00fatiles para proporcionar ricos efectos visuales \u2014 mezcla de fondos, elementos UI semi-transparentes, etc. Opacidad \u00b6 Existe otra forma de especificar la transparencia v\u00eda CSS \u2014 la propiedad opacity . En lugar de fijar la transparencia de un determinado color, aqu\u00ed fijamos la transparencia de todos los elementos seleccionados y sus hijos. De nuevo, veamos un ejemplo para estudiar la diferencia: C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"coloropacity.css\" > </ head > < body > < p class = \"rojorgba\" > P\u00e1rrafo rojo con transparencia RGBA. </ p > < p class = \"rojoopacity\" > P\u00e1rrafo rojo con transparencia opacity. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 /* Rojo con RGBA */ . rojorgba { background-color : rgba ( 255 , 0 , 0 , 0.5 ); } /* Rojo con opacity */ . rojoopacity { background-color : rgb ( 255 , 0 , 0 ); opacity : 0.5 ; }","title":"Color"},{"location":"cssFundamentos/unitsColors/#colores","text":"Hay varias formas de referenciar colores en CSS, algunas m\u00e1s recientes que otras. Los mismos valores de color pueden utilizarse en todos los sitios en CSS, si nos referimos a color de texto, de fondo o cualquier otro. El sistema de color est\u00e1ndar en los ordenadores actuales es el de 24 bits, que permite representar unos 16,7 millones de colores diferentes por canal (256 x 256 x 256 = 16.777.216). Veamos los valores de los distintos tipos de sistemas de colores. Conversor online de sistemas de colores Para pasar los valores de unos sistemas de colores a otros, necesitaremos un conversor de colores. Estos son algunos de los conversores disponibles online: rapidtables.com w3schools.com serennu.com","title":"Colores"},{"location":"cssFundamentos/unitsColors/#claves-de-color","text":"El sistema de color m\u00e1s antiguo y sencillo en CSS son las claves de color. Son cadenas de texto que representan valores de color. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colorkey.css\" > </ head > < body > < p > Este p\u00e1rrafo tiene un fondo rojo. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 p { background-color : red ; } Es f\u00e1cil de entender, aunque solo nos permite referenciar unos cuantos colores primitivos.","title":"Claves de color"},{"location":"cssFundamentos/unitsColors/#lista-de-claves-de-color","text":"Existen alrededor de 165 claves diferentes para su uso en los distintos navegadores (se exhibe, adem\u00e1s, el valor del color en formato hexadecimal): Nombre del color Valor hexadecimal Color AliceBlue #F0F8FF AntiqueWhite #FAEBD7 Aqua #00FFFF Aquamarine #7FFFD4 Azure #F0FFFF Beige #F5F5DC Bisque #FFE4C4 Black #000000 BlanchedAlmond #FFEBCD Blue #0000FF BlueViolet #8A2BE2 Brown #A52A2A BurlyWood #DEB887 CadetBlue #5F9EA0 Chartreuse #7FFF00 Chocolate #D2691E Coral #FF7F50 CornflowerBlue #6495ED Cornsilk #FFF8DC Crimson #DC143C Cyan #00FFFF DarkBlue #00008B DarkCyan #008B8B DarkGoldenRod #B8860B DarkGray #A9A9A9 DarkGrey #A9A9A9 DarkGreen #006400 DarkKhaki #BDB76B DarkMagenta #8B008B DarkOliveGreen #556B2F DarkOrange #FF8C00 DarkOrchid #9932CC DarkRed #8B0000 DarkSalmon #E9967A DarkSeaGreen #8FBC8F DarkSlateBlue #483D8B DarkSlateGray #2F4F4F DarkSlateGrey #2F4F4F DarkTurquoise #00CED1 DarkViolet #9400D3 DeepPink #FF1493 DeepSkyBlue #00BFFF DimGray #696969 DimGrey #696969 DodgerBlue #1E90FF FireBrick #B22222 FloralWhite #FFFAF0 ForestGreen #228B22 Fuchsia #FF00FF Gainsboro #DCDCDC GhostWhite #F8F8FF Gold #FFD700 GoldenRod #DAA520 Gray #808080 Grey #808080 Green #008000 GreenYellow #ADFF2F HoneyDew #F0FFF0 HotPink #FF69B4 IndianRed #CD5C5C Indigo #4B0082 Ivory #FFFFF0 Khaki #F0E68C Lavender #E6E6FA LavenderBlush #FFF0F5 LawnGreen #7CFC00 LemonChiffon #FFFACD LightBlue #ADD8E6 LightCoral #F08080 LightCyan #E0FFFF LightGoldenRodYellow #FAFAD2 LightGray #D3D3D3 LightGrey #D3D3D3 LightGreen #90EE90 LightPink #FFB6C1 LightSalmon #FFA07A LightSeaGreen #20B2AA LightSkyBlue #87CEFA LightSlateGray #778899 LightSlateGrey #778899 LightSteelBlue #B0C4DE LightYellow #FFFFE0 Lime #00FF00 LimeGreen #32CD32 Linen #FAF0E6 Magenta #FF00FF Maroon #800000 MediumAquaMarine #66CDAA MediumBlue #0000CD MediumOrchid #BA55D3 MediumPurple #9370DB MediumSeaGreen #3CB371 MediumSlateBlue #7B68EE MediumSpringGreen #00FA9A MediumTurquoise #48D1CC MediumVioletRed #C71585 MidnightBlue #191970 MintCream #F5FFFA MistyRose #FFE4E1 Moccasin #FFE4B5 NavajoWhite #FFDEAD Navy #000080 OldLace #FDF5E6 Olive #808000 OliveDrab #6B8E23 Orange #FFA500 OrangeRed #FF4500 Orchid #DA70D6 PaleGoldenRod #EEE8AA PaleGreen #98FB98 PaleTurquoise #AFEEEE PaleVioletRed #DB7093 PapayaWhip #FFEFD5 PeachPuff #FFDAB9 Peru #CD853F Pink #FFC0CB Plum #DDA0DD PowderBlue #B0E0E6 Purple #800080 RebeccaPurple #663399 Red #FF0000 RosyBrown #BC8F8F RoyalBlue #4169E1 SaddleBrown #8B4513 Salmon #FA8072 SandyBrown #F4A460 SeaGreen #2E8B57 SeaShell #FFF5EE Sienna #A0522D Silver #C0C0C0 SkyBlue #87CEEB SlateBlue #6A5ACD SlateGray #708090 SlateGrey #708090 Snow #FFFAFA SpringGreen #00FF7F SteelBlue #4682B4 Tan #D2B48C Teal #008080 Thistle #D8BFD8 Tomato #FF6347 Turquoise #40E0D0 Violet #EE82EE Wheat #F5DEB3 White #FFFFFF WhiteSmoke #F5F5F5 Yellow #FFFF00 YellowGreen #9ACD32","title":"Lista de claves de color"},{"location":"cssFundamentos/unitsColors/#valores-hexadecimales","text":"El siguiente sistema de color universal es el sistema hexadecimal, o c\u00f3digos hex. Cada valor hex est\u00e1 compuesto por una almohadilla (#) seguida por seis n\u00fameros hexadecimales, cada uno de los cuales puede estar comprendido entre el 0 y la f (que representa el 15) \u2014 0123456789abcdef (16 s\u00edmbolos). Cada par de valores representa uno de los canales primarios \u2014 rojo, verde y azul \u2014 y nos permite referenciar cualquiera de los 256 valores disponibles para cada uno (16 x 16 = 256). C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colorhex.css\" > </ head > < body > < p class = \"rojo\" > Este p\u00e1rrafo tiene un fondo rojo. </ p > < p class = \"azul\" > Este p\u00e1rrafo tiene un fondo azul. </ p > < p class = \"lila\" > Este p\u00e1rrafo tiene un fondo lila. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* equivalente a la palabra clave red */ . rojo { background-color : #ff0000 ; } /* equivalente a la palabra clave blue */ . azul { background-color : #0000ff ; } /* no posee equivalente de palabra clave */ . lila { background-color : #e0b0ff ; } Estos valores son un poco m\u00e1s complejos y dif\u00edciles de entender, pero es mucho m\u00e1s vers\u00e1til que las claves \u2014 podemos utilizar valores hex para representar cualquier color que queramos usar en nuestra paleta de colores.","title":"Valores hexadecimales"},{"location":"cssFundamentos/unitsColors/#rgb","text":"El tercer sistema al que vamos a hacer referencia es RGB. Un valor RGB es una funci\u00f3n \u2014 rgb() \u2014 a la que pasamos tres par\u00e1metros que representas los colores primarios rojo, verde y azul, parecido al sistema hex. La diferencia radica en que, en lugar de representar cada canal por un par de n\u00fameros, ahora lo hacemos simplemente por un n\u00famero decimal entre el 0 y el 255. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colorrgb.css\" > </ head > < body > < p class = \"rojo\" > Este p\u00e1rrafo tiene un fondo rojo. </ p > < p class = \"azul\" > Este p\u00e1rrafo tiene un fondo azul. </ p > < p class = \"lila\" > Este p\u00e1rrafo tiene un fondo lila. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* equivalente a la palabra clave red */ . rojo { background-color : rgb ( 255 , 0 , 0 ); } /* equivalente a la palabra clave blue */ . azul { background-color : rgb ( 0 , 0 , 255 ); } /* no posee equivalente de palabra clave */ . lila { background-color : rgb ( 224 , 176 , 255 ); } El sistema RGB es casi tan soportado como el hexadecimal \u2014 probablemente no nos encontremos en nuestro trabajo ning\u00fan navegador que no los reconozca ambos.","title":"RGB"},{"location":"cssFundamentos/unitsColors/#hsl","text":"Un poco menos soportado que RGB est\u00e1 el modelo HSL (no en viejas versiones de IE), que fueron implementadas con mucho inter\u00e9s de los dise\u00f1adores \u2014 en vez de valores rojo, verde y azul, la funci\u00f3n hsl() admite los valores tono(hue), saturaci\u00f3n y brillo (lightness), para referenciar 16,7 millones de colores, pero de forma diferente: hue (tono) : Es el color b\u00e1sico. Toma un valor entre 0-360, como los \u00e1ngulos de una rueda de color. saturaci\u00f3n : \u00bfC\u00f3mo est\u00e1 el color de saturado? Con valores entre 0 y 100%, en 0 no hay color (aparece como una sombra gris), y 100% es la saturaci\u00f3n total del color. lightness (brillo) : Representa la claridad del color. Toma valores entre 0 y 100%, donde 0 es la ausencia de luz (completamente negro) y 100% es el brillo total (completamente blanco). C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colorrgb.css\" > </ head > < body > < p class = \"rojo\" > Este p\u00e1rrafo tiene un fondo rojo. </ p > < p class = \"azul\" > Este p\u00e1rrafo tiene un fondo azul. </ p > < p class = \"lila\" > Este p\u00e1rrafo tiene un fondo lila. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 /* equivalente a la palabra clave red */ . rojo { background-color : hsl ( 0 , 100 % , 50 % ); } /* equivalente a la palabra clave blue */ . azul { background-color : hsl ( 240 , 100 % , 50 % ); } /* no posee equivalente de palabra clave */ . lila { background-color : hsl ( 276 , 100 % , 85 % ); } El modelo de colores HSL es intuitivo para los dise\u00f1adores acostumbrados a trabajar con estas caracteristicas de color. Es \u00fatil, por ejemplo, para representar una paleta de sombras en un sistema monocrom\u00e1tico: 1 2 3 4 /* Tres variaciones de sombra del color rojo */ background-color : hsl ( 0 , 100 %, 50 %); background-color : hsl ( 0 , 100 %, 60 %); background-color : hsl ( 0 , 100 %, 70 %);","title":"HSL"},{"location":"cssFundamentos/unitsColors/#rgba-y-hsla","text":"RGB y HSL tienen sus correspondientes modos \u2014 RGBA and HSLA \u2014 que nos permiten representar, no solo el color, sino tambi\u00e9n la transparencia a representar. Sus funciones correspondientes toman los mismos par\u00e1metros, m\u00e1s un cuarto valor entre 0\u20131 \u2014 que establece la transparencia, o el llamado canal alfa. 0 es totalmente transparente y 1 completamente opaco. C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"colortransparent.css\" > </ head > < body > < p class = \"rojot\" > Este p\u00e1rrafo tiene un fondo rojo transparente. </ p > < p class = \"azult\" > Este p\u00e1rrafo tiene un fondo azul transparente. </ p > </ body > </ html > C\u00f3digo CSS ( Se \"baj\u00f3\" el primer p\u00e1rrafo con posicionamiento, para mostrar el efecto de superposici\u00f3n de los p\u00e1rrafos ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 p { height : 50 px ; width : 350 px ; } /* Rojo transparente */ . rojot { background-color : rgba ( 255 , 0 , 0 , 0.5 ); position : relative ; top : 30 px ; left : 50 px ; } /* Azul transparente */ . azult { background-color : hsla ( 240 , 100 % , 50 % , 0.5 ); } Los colores transparentes son muy \u00fatiles para proporcionar ricos efectos visuales \u2014 mezcla de fondos, elementos UI semi-transparentes, etc.","title":"RGBA y HSLA"},{"location":"cssFundamentos/unitsColors/#opacidad","text":"Existe otra forma de especificar la transparencia v\u00eda CSS \u2014 la propiedad opacity . En lugar de fijar la transparencia de un determinado color, aqu\u00ed fijamos la transparencia de todos los elementos seleccionados y sus hijos. De nuevo, veamos un ejemplo para estudiar la diferencia: C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"coloropacity.css\" > </ head > < body > < p class = \"rojorgba\" > P\u00e1rrafo rojo con transparencia RGBA. </ p > < p class = \"rojoopacity\" > P\u00e1rrafo rojo con transparencia opacity. </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 /* Rojo con RGBA */ . rojorgba { background-color : rgba ( 255 , 0 , 0 , 0.5 ); } /* Rojo con opacity */ . rojoopacity { background-color : rgb ( 255 , 0 , 0 ); opacity : 0.5 ; }","title":"Opacidad"},{"location":"cssFundamentos/unitsExercises/","text":"Valores y unidades \u00b6 Descarg\u00e1 el ejercicio y modific\u00e1 el archivo CSS siguiendo las instrucciones: Introduc\u00ed los valores CSS necesarios de tal manera que el tama\u00f1o de la fuente de un p\u00e1rrafo est\u00e9 expresado en una unidad relativa y el otro p\u00e1rrafo en una unidad absoluta. Modific\u00e1 el tama\u00f1o de la ventana del navegador, llev\u00e1ndola a diferentes medidas. \u00bfC\u00f3mo se comportan las fuentes de un p\u00e1rrafo y otro? Describilo.","title":"Ejercicios"},{"location":"cssFundamentos/unitsExercises/#valores-y-unidades","text":"Descarg\u00e1 el ejercicio y modific\u00e1 el archivo CSS siguiendo las instrucciones: Introduc\u00ed los valores CSS necesarios de tal manera que el tama\u00f1o de la fuente de un p\u00e1rrafo est\u00e9 expresado en una unidad relativa y el otro p\u00e1rrafo en una unidad absoluta. Modific\u00e1 el tama\u00f1o de la ventana del navegador, llev\u00e1ndola a diferentes medidas. \u00bfC\u00f3mo se comportan las fuentes de un p\u00e1rrafo y otro? Describilo.","title":"Valores y unidades"},{"location":"cssFundamentos/unitsNumbers/","text":"Valores num\u00e9ricos \u00b6 Veremos los n\u00fameros utilizados en muchos sitios en unidades CSS. Esta secci\u00f3n trata acerca de los tipos m\u00e1s utilizados de valores num\u00e9ricos. Longitud y tama\u00f1o \u00b6 La especificaci\u00f3n CSS utiliza medidas de distancia. Las mismas se definen indicando un valor seguido por una unidad de longitud (px, em, pc, in, mm, etc.). <longitud><unidad> Al igual que en cualquier dimensi\u00f3n CSS, no debe haber espacio entre la unidad y el n\u00famero. La unidad de longitud es opcional despu\u00e9s del valor 0 (cero). Muchas propiedades CSS (CSS properties) reciben valores de longitud, como por ejemplo width , margin-top , y font-size . Valores negativos de longitud Para algunas propiedades, el uso de longitudes negativas es un error de sintaxis, mientras que para algunas propiedades est\u00e1 permitido. En cuanto a las unidades, podemos ordenar las mismas en dos grandes grupos: relativas y absolutas. Unidades de longitud relativa \u00b6 Especifican un tama\u00f1o relativo a otra longitud externa. Las unidades relativas son f\u00e1cilmente escalables. Longitudes relativas a la fuente \u00b6 ** em ** Es el tama\u00f1o de fuente del elemento actual (es el ancho de la letra M may\u00fascula). El tama\u00f1o de fuente por defecto que los navegadores usan antes de aplicar CSS es de 16 p\u00edxeles, lo que significa que este es el valor asignado por defecto a un elemento (1em). Ojo, los tama\u00f1os de fuente de los elementos se heredan de los padres, por lo que si a los padres se les aplica otros tama\u00f1os de fuente, la equivalencia en pixel de un em puede complicarse. Esta unidad representa el tama\u00f1o calculado de fuente ( font-size ) del elemento. Si se usa dentro de la propiedad font-size , representa el tama\u00f1o de fuente heredado por el elemento. Interfaces escalables con em Esta unidad se usa por lo general para crear interfaces escalables . Las propiedades CSS line-height , font-size , margin-bottom y margin-top generalemente tienen valores expresados en em . ex Esta unidad representa la altura de la x de la fuente ( font ) del elemento. En fuentes que incluyen la letra x , es generalmente la altura de letras min\u00fasculas en la fuente; 1ex \u2248 0.5em en muchas fuentes. ch Esta unidad representa la anchura, o m\u00e1s precisamente, la medida de avance, del glifo 0 (cero, de caracter Unicode U+0030) en la fuente ( font ) del elemento. rem Funciona igual que em, excepto que esta siempre igualar\u00e1 el tama\u00f1o del tama\u00f1o de fuente por defecto; los tama\u00f1os de fuente heredados no afectan, por lo que parece mejor soluci\u00f3n que em , rem no funciona en versiones antiguas de Internet Explorer. Esta unidad representa el tama\u00f1o ( font-size ) del elemento ra\u00edz (p.ej. el tama\u00f1o de fuente del elemento <html> ). Cuando se aplica a font-size del elemento ra\u00edz, representa su valor inicial. Interfaces escalables con rem Esta unidad es pr\u00e1ctica para crear interfaces perfectamente escalables. Si no es soportada por los navegadores, se puede recurrir a unidades em , aunque estas son ligeramente m\u00e1s complejas. Longitudes de porcentaje del viewport \u00b6 Las longitudes de porcentaje del viewport definen una longitud relativa al tama\u00f1o del viewport , que es la porci\u00f3n visible del documento. Solamente los navegadores basados en Gecko actualizan los valores del viewport din\u00e1micamente, cuando el tama\u00f1o de \u00e9ste es modificado (al cambiar el tama\u00f1o de la ventana en una computadora de escritorio, o al girar el dispositivo, en tel\u00e9fonos y tablets). vh 1/100 de la altura del viewport. vw 1/100 de la anchura del viewport. vmin 1/100 del valor m\u00ednimo entre la altura y anchura del viewport. vmax 1/100 del valor m\u00e1ximo entre la altura y anchura del viewport. Unidades de longitud absoluta \u00b6 Consisten en unidades de medida f\u00edsicas y tienen una relaci\u00f3n fija y bien definida unas relativas a otras. Son unidades no escalables , a excepci\u00f3n del porcentaje, que estrictamente hablando no ser\u00eda una unidad absoluta est\u00e1ndar, aunque as\u00ed es generalmente considerada. Unidades absolutas y accesibilidad Los usuarios pueden incrementar el tama\u00f1o de fuente por razones de accesibilidad. Para permitir interfaces usables sin importar el tamao de fuente, use \u00fanicamente unidades de longitud absolutas cuando las caracter\u00edsticas f\u00edsicas del medio de salida son conocidas, como im\u00e1genes de mapa de bits. Al establecer longitudes relacionadas al tama\u00f1o de fuente, es preferible usar unidades relativas, como em o rem . px Relativa al dispositivo de visualizaci\u00f3n. Para pantallas, generalmente es el tama\u00f1o de un p\u00edxel (punto) de la pantalla del dispositivo. Para impresoras y pantallas de muy alta resoluci\u00f3n, un p\u00edxel CSS implica m\u00faltiples p\u00edxeles del dispositivo, de modo que el n\u00famero de p\u00edxeles por pulgada se mantenga al rededor de 96. ** mm ** Un mil\u00edmetro. q Un cuarto de mil\u00edmetro (1/40\u00b0 de cent\u00edmetro). cm Un cent\u00edmetro (10 mil\u00edmetros). in Una pulgada (2.54 cent\u00edmetros). pt Un punto (1/72\u00b0 de pulgada). pc Una pica (12 puntos). mozmm Una unidad experimental que intenta generar exactamente un mil\u00edmetro, sin importar el tama\u00f1o de resoluci\u00f3n de la pantalla. Esto raramente ser\u00e1 lo que se desea, pero podr\u00eda ser \u00fatil para dispositivos m\u00f3viles, en particular. Unidades CSS y puntos por pulgada (dots-per-inch) \u00b6 La unidad in no representa una pulgada f\u00edsica en pantalla, sino 96px . Esto significa que sin importar la densidad de p\u00edxeles real en pantalla, se asume que ser\u00e1n 96ppp. En dispositivos con mayor densidad de p\u00edxeles, 1in ser\u00e1 menor que una pulgada f\u00edsica. Algunos ejemplos espec\u00edficos: 1in siempre son 96px 3pt siempre son 4px 25.4mm siempre son 96px . Ejemplo \u00b6 C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"length.css\" > </ head > < body > < p class = \"p1\" > P\u00e1rrafo 1 </ p > < p class = \"p2\" > P\u00e1rrafo 2 </ p > < p class = \"p3\" > P\u00e1rrafo 3 </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 p { margin : 5 px ; padding : 10 px ; border : 2 px solid black ; background-color : cyan ; } . p1 { width : 150 px ; font-size : 18 px ; } . p2 { width : 250 px ; font-size : 24 px ; } . p3 { width : 350 px ; font-size : 30 px ; } Valores sin unidades \u00b6 En algunas ocasiones encontramos en CSS valores sin unidades \u2014 no siempre es un error, de hecho, es algo permitido bajo determinadas circunstancias. Imaginemos que queremos eliminar el margen o el relleno de un elemento, simplemente usaremos el 0, ya que 0 es 0 cualesquiera que fueran las unidades. margin : 0 ; Altura de l\u00ednea sin unidades \u00b6 Otro ejemplo es line-height , que establece la altura de cada l\u00ednea de texto en un elemento. Podemos usar unidades para establecer la altura de la l\u00ednea, pero normalmente es m\u00e1s f\u00e1cil usar simplemente un valor que act\u00fae como factor multiplicador. Supongamos el siguiente c\u00f3digo HTML: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"length.css\" > </ head > < body > < p > Hola! Soy un p\u00e1rrafo com\u00fan y corriente. </ p > </ body > </ html > Y el siguiente CSS: 1 2 3 p { line-height : 1.5 ; } Donde el tama\u00f1o de fuente font-size son 16px; la altura de linea 1.5 veces esta, o sea 24px . N\u00famero de animaciones \u00b6 Las animaciones CSS nos permiten animar elementos HTML en la p\u00e1gina. Veamos un sencillo ejemplo que haga rotar un p\u00e1rrafo cuando pasa el rat\u00f3n. El HTML: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"animate.css\" > </ head > < body > < p > P\u00e1rrafo animado </ p > </ body > </ html > Y el CSS un poco m\u00e1s complicado: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @ keyframes rotate { 0 % { transform : rotate ( 0 deg ); } 100 % { transform : rotate ( 360 deg ); } } p { color : red ; width : 100 px ; font-size : 40 px ; transform-origin : center ; } p : hover { animation-name : rotate ; animation-duration : 0.6 s ; animation-timing-function : linear ; animation-iteration-count : 5 ; } Hemos usado funciones (que no se explican ac\u00e1) pero la que nos interesa es la l\u00ednea animation-iteration-count: 5; \u2014 que controla el n\u00famero de veces que ocurrir\u00e1 la animaci\u00f3n cuando se active (el rat\u00f3n pasa por encima), y esto es un simple n\u00famero sin unidades (un entero o integer en idioma inform\u00e1tico).","title":"Num\u00e9ricas"},{"location":"cssFundamentos/unitsNumbers/#valores-numericos","text":"Veremos los n\u00fameros utilizados en muchos sitios en unidades CSS. Esta secci\u00f3n trata acerca de los tipos m\u00e1s utilizados de valores num\u00e9ricos.","title":"Valores num\u00e9ricos"},{"location":"cssFundamentos/unitsNumbers/#longitud-y-tamano","text":"La especificaci\u00f3n CSS utiliza medidas de distancia. Las mismas se definen indicando un valor seguido por una unidad de longitud (px, em, pc, in, mm, etc.). <longitud><unidad> Al igual que en cualquier dimensi\u00f3n CSS, no debe haber espacio entre la unidad y el n\u00famero. La unidad de longitud es opcional despu\u00e9s del valor 0 (cero). Muchas propiedades CSS (CSS properties) reciben valores de longitud, como por ejemplo width , margin-top , y font-size . Valores negativos de longitud Para algunas propiedades, el uso de longitudes negativas es un error de sintaxis, mientras que para algunas propiedades est\u00e1 permitido. En cuanto a las unidades, podemos ordenar las mismas en dos grandes grupos: relativas y absolutas.","title":"Longitud y tama\u00f1o"},{"location":"cssFundamentos/unitsNumbers/#unidades-de-longitud-relativa","text":"Especifican un tama\u00f1o relativo a otra longitud externa. Las unidades relativas son f\u00e1cilmente escalables.","title":"Unidades de longitud relativa"},{"location":"cssFundamentos/unitsNumbers/#longitudes-relativas-a-la-fuente","text":"** em ** Es el tama\u00f1o de fuente del elemento actual (es el ancho de la letra M may\u00fascula). El tama\u00f1o de fuente por defecto que los navegadores usan antes de aplicar CSS es de 16 p\u00edxeles, lo que significa que este es el valor asignado por defecto a un elemento (1em). Ojo, los tama\u00f1os de fuente de los elementos se heredan de los padres, por lo que si a los padres se les aplica otros tama\u00f1os de fuente, la equivalencia en pixel de un em puede complicarse. Esta unidad representa el tama\u00f1o calculado de fuente ( font-size ) del elemento. Si se usa dentro de la propiedad font-size , representa el tama\u00f1o de fuente heredado por el elemento. Interfaces escalables con em Esta unidad se usa por lo general para crear interfaces escalables . Las propiedades CSS line-height , font-size , margin-bottom y margin-top generalemente tienen valores expresados en em . ex Esta unidad representa la altura de la x de la fuente ( font ) del elemento. En fuentes que incluyen la letra x , es generalmente la altura de letras min\u00fasculas en la fuente; 1ex \u2248 0.5em en muchas fuentes. ch Esta unidad representa la anchura, o m\u00e1s precisamente, la medida de avance, del glifo 0 (cero, de caracter Unicode U+0030) en la fuente ( font ) del elemento. rem Funciona igual que em, excepto que esta siempre igualar\u00e1 el tama\u00f1o del tama\u00f1o de fuente por defecto; los tama\u00f1os de fuente heredados no afectan, por lo que parece mejor soluci\u00f3n que em , rem no funciona en versiones antiguas de Internet Explorer. Esta unidad representa el tama\u00f1o ( font-size ) del elemento ra\u00edz (p.ej. el tama\u00f1o de fuente del elemento <html> ). Cuando se aplica a font-size del elemento ra\u00edz, representa su valor inicial. Interfaces escalables con rem Esta unidad es pr\u00e1ctica para crear interfaces perfectamente escalables. Si no es soportada por los navegadores, se puede recurrir a unidades em , aunque estas son ligeramente m\u00e1s complejas.","title":"Longitudes relativas a la fuente"},{"location":"cssFundamentos/unitsNumbers/#longitudes-de-porcentaje-del-viewport","text":"Las longitudes de porcentaje del viewport definen una longitud relativa al tama\u00f1o del viewport , que es la porci\u00f3n visible del documento. Solamente los navegadores basados en Gecko actualizan los valores del viewport din\u00e1micamente, cuando el tama\u00f1o de \u00e9ste es modificado (al cambiar el tama\u00f1o de la ventana en una computadora de escritorio, o al girar el dispositivo, en tel\u00e9fonos y tablets). vh 1/100 de la altura del viewport. vw 1/100 de la anchura del viewport. vmin 1/100 del valor m\u00ednimo entre la altura y anchura del viewport. vmax 1/100 del valor m\u00e1ximo entre la altura y anchura del viewport.","title":"Longitudes de porcentaje del viewport"},{"location":"cssFundamentos/unitsNumbers/#unidades-de-longitud-absoluta","text":"Consisten en unidades de medida f\u00edsicas y tienen una relaci\u00f3n fija y bien definida unas relativas a otras. Son unidades no escalables , a excepci\u00f3n del porcentaje, que estrictamente hablando no ser\u00eda una unidad absoluta est\u00e1ndar, aunque as\u00ed es generalmente considerada. Unidades absolutas y accesibilidad Los usuarios pueden incrementar el tama\u00f1o de fuente por razones de accesibilidad. Para permitir interfaces usables sin importar el tamao de fuente, use \u00fanicamente unidades de longitud absolutas cuando las caracter\u00edsticas f\u00edsicas del medio de salida son conocidas, como im\u00e1genes de mapa de bits. Al establecer longitudes relacionadas al tama\u00f1o de fuente, es preferible usar unidades relativas, como em o rem . px Relativa al dispositivo de visualizaci\u00f3n. Para pantallas, generalmente es el tama\u00f1o de un p\u00edxel (punto) de la pantalla del dispositivo. Para impresoras y pantallas de muy alta resoluci\u00f3n, un p\u00edxel CSS implica m\u00faltiples p\u00edxeles del dispositivo, de modo que el n\u00famero de p\u00edxeles por pulgada se mantenga al rededor de 96. ** mm ** Un mil\u00edmetro. q Un cuarto de mil\u00edmetro (1/40\u00b0 de cent\u00edmetro). cm Un cent\u00edmetro (10 mil\u00edmetros). in Una pulgada (2.54 cent\u00edmetros). pt Un punto (1/72\u00b0 de pulgada). pc Una pica (12 puntos). mozmm Una unidad experimental que intenta generar exactamente un mil\u00edmetro, sin importar el tama\u00f1o de resoluci\u00f3n de la pantalla. Esto raramente ser\u00e1 lo que se desea, pero podr\u00eda ser \u00fatil para dispositivos m\u00f3viles, en particular.","title":"Unidades de longitud absoluta"},{"location":"cssFundamentos/unitsNumbers/#unidades-css-y-puntos-por-pulgada-dots-per-inch","text":"La unidad in no representa una pulgada f\u00edsica en pantalla, sino 96px . Esto significa que sin importar la densidad de p\u00edxeles real en pantalla, se asume que ser\u00e1n 96ppp. En dispositivos con mayor densidad de p\u00edxeles, 1in ser\u00e1 menor que una pulgada f\u00edsica. Algunos ejemplos espec\u00edficos: 1in siempre son 96px 3pt siempre son 4px 25.4mm siempre son 96px .","title":"Unidades CSS y puntos por pulgada (dots-per-inch)"},{"location":"cssFundamentos/unitsNumbers/#ejemplo","text":"C\u00f3digo HTML 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"length.css\" > </ head > < body > < p class = \"p1\" > P\u00e1rrafo 1 </ p > < p class = \"p2\" > P\u00e1rrafo 2 </ p > < p class = \"p3\" > P\u00e1rrafo 3 </ p > </ body > </ html > C\u00f3digo CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 p { margin : 5 px ; padding : 10 px ; border : 2 px solid black ; background-color : cyan ; } . p1 { width : 150 px ; font-size : 18 px ; } . p2 { width : 250 px ; font-size : 24 px ; } . p3 { width : 350 px ; font-size : 30 px ; }","title":"Ejemplo"},{"location":"cssFundamentos/unitsNumbers/#valores-sin-unidades","text":"En algunas ocasiones encontramos en CSS valores sin unidades \u2014 no siempre es un error, de hecho, es algo permitido bajo determinadas circunstancias. Imaginemos que queremos eliminar el margen o el relleno de un elemento, simplemente usaremos el 0, ya que 0 es 0 cualesquiera que fueran las unidades. margin : 0 ;","title":"Valores sin unidades"},{"location":"cssFundamentos/unitsNumbers/#altura-de-linea-sin-unidades","text":"Otro ejemplo es line-height , que establece la altura de cada l\u00ednea de texto en un elemento. Podemos usar unidades para establecer la altura de la l\u00ednea, pero normalmente es m\u00e1s f\u00e1cil usar simplemente un valor que act\u00fae como factor multiplicador. Supongamos el siguiente c\u00f3digo HTML: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"length.css\" > </ head > < body > < p > Hola! Soy un p\u00e1rrafo com\u00fan y corriente. </ p > </ body > </ html > Y el siguiente CSS: 1 2 3 p { line-height : 1.5 ; } Donde el tama\u00f1o de fuente font-size son 16px; la altura de linea 1.5 veces esta, o sea 24px .","title":"Altura de l\u00ednea sin unidades"},{"location":"cssFundamentos/unitsNumbers/#numero-de-animaciones","text":"Las animaciones CSS nos permiten animar elementos HTML en la p\u00e1gina. Veamos un sencillo ejemplo que haga rotar un p\u00e1rrafo cuando pasa el rat\u00f3n. El HTML: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"animate.css\" > </ head > < body > < p > P\u00e1rrafo animado </ p > </ body > </ html > Y el CSS un poco m\u00e1s complicado: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @ keyframes rotate { 0 % { transform : rotate ( 0 deg ); } 100 % { transform : rotate ( 360 deg ); } } p { color : red ; width : 100 px ; font-size : 40 px ; transform-origin : center ; } p : hover { animation-name : rotate ; animation-duration : 0.6 s ; animation-timing-function : linear ; animation-iteration-count : 5 ; } Hemos usado funciones (que no se explican ac\u00e1) pero la que nos interesa es la l\u00ednea animation-iteration-count: 5; \u2014 que controla el n\u00famero de veces que ocurrir\u00e1 la animaci\u00f3n cuando se active (el rat\u00f3n pasa por encima), y esto es un simple n\u00famero sin unidades (un entero o integer en idioma inform\u00e1tico).","title":"N\u00famero de animaciones"},{"location":"cssFundamentos/unitsPercent/","text":"Porcentajes \u00b6 Tambi\u00e9n podemos usar valores porcentuales para expresar la mayor\u00eda de cosas que requieran de valores num\u00e9ricos, lo que nos permite crear, por ejemplo, cajas cuya anchura siempre cambie seg\u00fan el ancho del contenedor padre. En contraposici\u00f3n a las cajas cuya anchura este definida por un cierto valor (en px o en ems ), que siempre ser\u00e1n de la misma longitud, incluso aunque cambie el ancho de los contenedores padres. Mejor verlo con un ejemplo. Primero dos cajas parecidas, expresadas en HTML: 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"layout.css\" > </ head > < body > < div class = \"fixed\" > Ancho fijo (p\u00edxeles) </ div > < div class = \"liquid\" > Ancho variable (porcentaje) </ div > </ body > </ html > Y los estilos CSS: div { margin : 10 px ; font-size : 200 % ; color : white ; height : 150 px ; border : 2 px solid black ; } . fixed { background-color : red ; width : 400 px ; } . liquid { background-color : blue ; width : 70 % ; } Hemos establecido el ancho del primer div con width en 500px , y del segundo al 70% , por lo que el primer div siempre tendr\u00e1 el mismo ancho, aunque se redimensione la ventana (desaparecer\u00e1 de la pantalla si la ventana es m\u00e1s estrecha que la pantalla), mientras que el segundo ir\u00e1 cambiando a medida que cambie su padre (en este caso el elemento <body> , que por defecto es el 100% del ancho de la ventana. Funciones \u00b6 En programaci\u00f3n, una function es una secci\u00f3n de c\u00f3digo reutilizable que puede ser ejecutada muchas veces para realizar una tarea repetitiva con el m\u00ednimo esfuerzo para el desarrollador y para el ordenador. Las funciones se asocian normalmente con lenguajes como JavaScript, Python, o C++, pero tambi\u00e9n existen en CSS, como valores de propiedad. Ya hemos visto las funciones rgb() , hsl() , etc. 1 2 background-color : rgba ( 255 , 0 , 0 , 0 . 5 ); background-color : hsla ( 240 , 100 %, 50 %, 0 . 5 ); Estas funciones calculan qu\u00e9 color usar. Pero tambi\u00e9n encontraremos funciones en otros sitios \u2014 cada vez que veamos par\u00e9ntesis detr\u00e1s de un nombre, con valores o no, separados por comas, estaremos delante de una funci\u00f3n. Por ejemplo: 1 2 3 4 5 6 7 8 /* Calcula la nueva posici\u00f3n de un elemento desdpues de haber rotado 45 grados */ transform : rotate ( 45deg ); /* Calcula la nueva posici\u00f3n de un elemento despu\u00e9s de haberlo movido de un lado a otro 50px y hacia abajo 60px */ transform : translate ( 50px , 60px ); /* Calcular el 90% del ancho acutal menos 15px */ width : calc ( 90 % -15px ); /* Obtener una imagen para ser utilizada como fondo */ background-image : url ( 'myimage.png' ); Hay muchas funciones en CSS, las veremos a lo largo del curso.","title":"Porcentaje y funciones"},{"location":"cssFundamentos/unitsPercent/#porcentajes","text":"Tambi\u00e9n podemos usar valores porcentuales para expresar la mayor\u00eda de cosas que requieran de valores num\u00e9ricos, lo que nos permite crear, por ejemplo, cajas cuya anchura siempre cambie seg\u00fan el ancho del contenedor padre. En contraposici\u00f3n a las cajas cuya anchura este definida por un cierto valor (en px o en ems ), que siempre ser\u00e1n de la misma longitud, incluso aunque cambie el ancho de los contenedores padres. Mejor verlo con un ejemplo. Primero dos cajas parecidas, expresadas en HTML: 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" > < title > Longitud y tama\u00f1o </ title > < link rel = \"stylesheet\" href = \"layout.css\" > </ head > < body > < div class = \"fixed\" > Ancho fijo (p\u00edxeles) </ div > < div class = \"liquid\" > Ancho variable (porcentaje) </ div > </ body > </ html > Y los estilos CSS: div { margin : 10 px ; font-size : 200 % ; color : white ; height : 150 px ; border : 2 px solid black ; } . fixed { background-color : red ; width : 400 px ; } . liquid { background-color : blue ; width : 70 % ; } Hemos establecido el ancho del primer div con width en 500px , y del segundo al 70% , por lo que el primer div siempre tendr\u00e1 el mismo ancho, aunque se redimensione la ventana (desaparecer\u00e1 de la pantalla si la ventana es m\u00e1s estrecha que la pantalla), mientras que el segundo ir\u00e1 cambiando a medida que cambie su padre (en este caso el elemento <body> , que por defecto es el 100% del ancho de la ventana.","title":"Porcentajes"},{"location":"cssFundamentos/unitsPercent/#funciones","text":"En programaci\u00f3n, una function es una secci\u00f3n de c\u00f3digo reutilizable que puede ser ejecutada muchas veces para realizar una tarea repetitiva con el m\u00ednimo esfuerzo para el desarrollador y para el ordenador. Las funciones se asocian normalmente con lenguajes como JavaScript, Python, o C++, pero tambi\u00e9n existen en CSS, como valores de propiedad. Ya hemos visto las funciones rgb() , hsl() , etc. 1 2 background-color : rgba ( 255 , 0 , 0 , 0 . 5 ); background-color : hsla ( 240 , 100 %, 50 %, 0 . 5 ); Estas funciones calculan qu\u00e9 color usar. Pero tambi\u00e9n encontraremos funciones en otros sitios \u2014 cada vez que veamos par\u00e9ntesis detr\u00e1s de un nombre, con valores o no, separados por comas, estaremos delante de una funci\u00f3n. Por ejemplo: 1 2 3 4 5 6 7 8 /* Calcula la nueva posici\u00f3n de un elemento desdpues de haber rotado 45 grados */ transform : rotate ( 45deg ); /* Calcula la nueva posici\u00f3n de un elemento despu\u00e9s de haberlo movido de un lado a otro 50px y hacia abajo 60px */ transform : translate ( 50px , 60px ); /* Calcular el 90% del ancho acutal menos 15px */ width : calc ( 90 % -15px ); /* Obtener una imagen para ser utilizada como fondo */ background-image : url ( 'myimage.png' ); Hay muchas funciones en CSS, las veremos a lo largo del curso.","title":"Funciones"},{"location":"cssGrid/","text":"http://flexboxfroggy.com/#es https://gridbyexample.com/examples/ https://aerolab.co/blog/flexbox-grids/","title":"Index"},{"location":"disenoWeb/","text":"\u00bfA qu\u00e9 llamamos dise\u00f1o web? \u00b6 Hablar hoy de dise\u00f1o web es algo impropio o, cuanto menos impreciso, puesto que en el proceso de creaci\u00f3n de un sitio web intervienen en la actualidad varias disciplinas. A medida que internet fue creciendo -y con ello creciendo la complejidad de los sitios web- aparecieron nuevos profesionales enfocados en un \u00e1rea particular del proceso de creaci\u00f3n de un sitio web: desarrollador web a quien est\u00e1 encargado del dise\u00f1o de base de datos y programaci\u00f3n, es decir, normalmente se ocupa \u00fanicamente del funcionamiento del software dise\u00f1ador web a quien se ocupa del aspecto final de la p\u00e1gina webmaster a la persona encargada de integrar ambas partes aunque, en ocasiones, el webmaster tambi\u00e9n se encarga de actualizar los contenidos de la p\u00e1gina. Sin embargo, esta clasificaci\u00f3n pronto se volvi\u00f3 obsoleta ya que m\u00faltiples y nuevas tareas aparecienron y fueron haci\u00e9ndose lugar en el camino de creaci\u00f3n de un sitio web: dise\u00f1o de interfaz de usuario (UI) , dise\u00f1o de experiencia de usuario (UX) , programaci\u00f3n (Javascript, PHP, Python, Ruby, etc.), bases de datos (MySQL, MariaDB, PostgreSQL, SQLite, MongoDB, etc.), optimizaci\u00f3n del sitio para buscadores (SEO) , an\u00e1lisis web , administraci\u00f3n de sistemas, seguridad inform\u00e1tica, etc. Por tanto, se hizo necesario redefinir el concepto y alcances del dise\u00f1ador web, conform\u00e1ndose nuevos espacios y disciplinas que se fueron sumando en la cada vez m\u00e1s compleja industria web: Desarrollador front-end vinculado con todos los aspectos relacionados con la visualizaci\u00f3n del sitio y su interacci\u00f3n con el navegante Desarrollador back-end responsable de la administraci\u00f3n del sitio, programaci\u00f3n del lado del servidor y el procesamiento de los datos ingresados por el usuario. Desarrollador full-stack quien se ocupa por igual del front-end y el back-end de un sitio web. Dise\u00f1o front-end \u00b6 Este curso se enfocar\u00e1 en las tareas del desarrollo front-end entre las cu\u00e1les se destacan el dominio de tres lenguajes: HTML , CSS y Javascript . Los dos primeros son lenguajes de marcado y el \u00faltimo, de programaci\u00f3n. Para comprender mejor que funcion cumple cada uno de ellos a una p\u00e1gina web, haremos una comparaci\u00f3n: HTML CSS JS Descripci\u00f3n **H**yper**T**ext **M**arkup **L**anguage (Lenguaje de Marcas de Hipertexto) **C**ascading **S**tyle **S**heets (Hojas de Estilo en Cascada) **J**ava**S**cript Funci\u00f3n Constituye la estructura de una p\u00e1gina web. (Podr\u00edamos compararlo con el esqueleto de una persona) . Se encarga de la apariencia de una p\u00e1gina web: colores, tipo y tama\u00f1o de letras, fondos, etc. (Resulta \u00fatil compararlo con la vestimenta y accesorios de moda que podr\u00eda utilizar una persona) . Establece la respuesta de la p\u00e1gina frente a las acciones del usuario. (Se podr\u00eda comparar con el comportamiento de una persona) . Versi\u00f3n actual 5 3 6","title":"Introducci\u00f3n"},{"location":"disenoWeb/#a-que-llamamos-diseno-web","text":"Hablar hoy de dise\u00f1o web es algo impropio o, cuanto menos impreciso, puesto que en el proceso de creaci\u00f3n de un sitio web intervienen en la actualidad varias disciplinas. A medida que internet fue creciendo -y con ello creciendo la complejidad de los sitios web- aparecieron nuevos profesionales enfocados en un \u00e1rea particular del proceso de creaci\u00f3n de un sitio web: desarrollador web a quien est\u00e1 encargado del dise\u00f1o de base de datos y programaci\u00f3n, es decir, normalmente se ocupa \u00fanicamente del funcionamiento del software dise\u00f1ador web a quien se ocupa del aspecto final de la p\u00e1gina webmaster a la persona encargada de integrar ambas partes aunque, en ocasiones, el webmaster tambi\u00e9n se encarga de actualizar los contenidos de la p\u00e1gina. Sin embargo, esta clasificaci\u00f3n pronto se volvi\u00f3 obsoleta ya que m\u00faltiples y nuevas tareas aparecienron y fueron haci\u00e9ndose lugar en el camino de creaci\u00f3n de un sitio web: dise\u00f1o de interfaz de usuario (UI) , dise\u00f1o de experiencia de usuario (UX) , programaci\u00f3n (Javascript, PHP, Python, Ruby, etc.), bases de datos (MySQL, MariaDB, PostgreSQL, SQLite, MongoDB, etc.), optimizaci\u00f3n del sitio para buscadores (SEO) , an\u00e1lisis web , administraci\u00f3n de sistemas, seguridad inform\u00e1tica, etc. Por tanto, se hizo necesario redefinir el concepto y alcances del dise\u00f1ador web, conform\u00e1ndose nuevos espacios y disciplinas que se fueron sumando en la cada vez m\u00e1s compleja industria web: Desarrollador front-end vinculado con todos los aspectos relacionados con la visualizaci\u00f3n del sitio y su interacci\u00f3n con el navegante Desarrollador back-end responsable de la administraci\u00f3n del sitio, programaci\u00f3n del lado del servidor y el procesamiento de los datos ingresados por el usuario. Desarrollador full-stack quien se ocupa por igual del front-end y el back-end de un sitio web.","title":"\u00bfA qu\u00e9 llamamos dise\u00f1o web?"},{"location":"disenoWeb/#diseno-front-end","text":"Este curso se enfocar\u00e1 en las tareas del desarrollo front-end entre las cu\u00e1les se destacan el dominio de tres lenguajes: HTML , CSS y Javascript . Los dos primeros son lenguajes de marcado y el \u00faltimo, de programaci\u00f3n. Para comprender mejor que funcion cumple cada uno de ellos a una p\u00e1gina web, haremos una comparaci\u00f3n: HTML CSS JS Descripci\u00f3n **H**yper**T**ext **M**arkup **L**anguage (Lenguaje de Marcas de Hipertexto) **C**ascading **S**tyle **S**heets (Hojas de Estilo en Cascada) **J**ava**S**cript Funci\u00f3n Constituye la estructura de una p\u00e1gina web. (Podr\u00edamos compararlo con el esqueleto de una persona) . Se encarga de la apariencia de una p\u00e1gina web: colores, tipo y tama\u00f1o de letras, fondos, etc. (Resulta \u00fatil compararlo con la vestimenta y accesorios de moda que podr\u00eda utilizar una persona) . Establece la respuesta de la p\u00e1gina frente a las acciones del usuario. (Se podr\u00eda comparar con el comportamiento de una persona) . Versi\u00f3n actual 5 3 6","title":"Dise\u00f1o  front-end"},{"location":"disenoWeb/herramientas/","text":"Como ya se ha mencionado, en el dise\u00f1o web confluyen m\u00faltiples disciplinas y cada una de ellas hace uso de software espec\u00edfico para desarrollar sus tareas. Editores de c\u00f3digo \u00b6 Ya sea que estemos hablando de HTML, CSS o Javascript, necesitaremos un editor de c\u00f3digo que venga en nuestro auxilio. En ciertos casos, existen editores para un lenguaje espec\u00edfico, ofreciendo resaltado de sintaxis, correcci\u00f3n de errores integrada, organizaci\u00f3n del c\u00f3gido, etc. A los programas que ofrecen estas posibilidades se los conoce como Entornos de desarrollo integrado o IDE . En orden alfab\u00e9tico, los editores de texto recomendados para la web son: Atom \u00b6 Licencia: Open Source Plataformas soportadas: BSD, GNU/Linux, Mac, Windows Web oficial: atom.io Brackets \u00b6 Licencia: Open Source Plataformas soportadas: GNU/Linux, Mac, Windows Web oficial: brackets.io Notepad++ \u00b6 Licencia: Open Source Plataformas soportadas: Windows Web oficial: notepad-plus-plus.org Visual Studio Code \u00b6 Licencia: Open Source Plataformas soportadas: GNU/Linux, Mac, Windows Web oficial: code.visualstudio.com Sublime Text \u00b6 Licencia: Privativa. Versi\u00f3n gratuita con opci\u00f3n de compra Plataformas soportadas: GNU/Linux, Mac, Windows Web oficial: sublimetext.com Validadores de c\u00f3digo \u00b6 La W3C es un consorcio internacional que determina las buenas pr\u00e1cticas y est\u00e1ndares web a seguir en la creaci\u00f3n de p\u00e1ginas webs. Su principal cometido es garantizar el desarrollo y expansi\u00f3n de la World Wide Web , red de redes o internet. Validador HTML Validador CSS Tratamiento del color \u00b6 Existen varias herramientas para gestionar la paleta de colores de un sitio web. En orden alfab\u00e9tico, las opciones recomendadas son: Adobe color \u00b6 Licencia: Privativa. Uso gratuito con limitaciones. Plataformas soportadas: Web Web oficial: color.adobe.com Coolors \u00b6 Licencia: Privativa. Uso gratuito con limitaciones. Plataformas soportadas: Web Web oficial: coolors.co Colorzilla \u00b6 Licencia: Privativa. Versi\u00f3n gratuita. Plataformas soportadas: Chrome, Firefox, Web Web oficial: colorzilla.com gpick \u00b6 Licencia: Open Source. Plataformas soportadas: GNU/Linux, Windows Web oficial: gpick.org Just Color Picker \u00b6 Licencia: Privativa. Versi\u00f3n gratuita. Plataformas soportadas: Mac, Windows Web oficial: annystudio.com/software/colorpicker Paletton \u00b6 Licencia: Privativa. Versi\u00f3n gratuita. Plataformas soportadas: Web Web oficial: paletton.com Navegadores \u00b6 Para acceder a un sitio web necesitamos s\u00f3lamente un navegador web y conexi\u00f3n a internet. Sin embargo, no todos los navegadores implementan de manera adecuada las resoluciones de la W3C que es la organizaci\u00f3n internacional que determina los est\u00e1ndares a emplear en el dise\u00f1o de los sitios web. Como resultado final, los sitios webs no se visualizan de igual manera en los distintos navegadores. Uso de Internet Explorer Siempre que sea posible se desaconseja el uso del navegador de Microsoft Internet Explorer no s\u00f3lo por cuestiones que dificultan el dise\u00f1o web y la posterior visualizaci\u00f3n de las p\u00e1ginas sino, sobre todo, por cuestiones de seguridad. El presente curso sugiere el empleo de los siguientes navegadores: Google Chrome: google.es/chrome/index.html Mozilla Firefox: mozilla.org/es-AR/firefox/new Opera: opera.com Safari: apple.com/la/safari Microsoft Edge: microsoft.com/es-ar/windows/microsoft-edge","title":"Herramientas web"},{"location":"disenoWeb/herramientas/#editores-de-codigo","text":"Ya sea que estemos hablando de HTML, CSS o Javascript, necesitaremos un editor de c\u00f3digo que venga en nuestro auxilio. En ciertos casos, existen editores para un lenguaje espec\u00edfico, ofreciendo resaltado de sintaxis, correcci\u00f3n de errores integrada, organizaci\u00f3n del c\u00f3gido, etc. A los programas que ofrecen estas posibilidades se los conoce como Entornos de desarrollo integrado o IDE . En orden alfab\u00e9tico, los editores de texto recomendados para la web son:","title":"Editores de c\u00f3digo"},{"location":"disenoWeb/herramientas/#atom","text":"Licencia: Open Source Plataformas soportadas: BSD, GNU/Linux, Mac, Windows Web oficial: atom.io","title":"Atom"},{"location":"disenoWeb/herramientas/#brackets","text":"Licencia: Open Source Plataformas soportadas: GNU/Linux, Mac, Windows Web oficial: brackets.io","title":"Brackets"},{"location":"disenoWeb/herramientas/#notepad","text":"Licencia: Open Source Plataformas soportadas: Windows Web oficial: notepad-plus-plus.org","title":"Notepad++"},{"location":"disenoWeb/herramientas/#visual-studio-code","text":"Licencia: Open Source Plataformas soportadas: GNU/Linux, Mac, Windows Web oficial: code.visualstudio.com","title":"Visual Studio Code"},{"location":"disenoWeb/herramientas/#sublime-text","text":"Licencia: Privativa. Versi\u00f3n gratuita con opci\u00f3n de compra Plataformas soportadas: GNU/Linux, Mac, Windows Web oficial: sublimetext.com","title":"Sublime Text"},{"location":"disenoWeb/herramientas/#validadores-de-codigo","text":"La W3C es un consorcio internacional que determina las buenas pr\u00e1cticas y est\u00e1ndares web a seguir en la creaci\u00f3n de p\u00e1ginas webs. Su principal cometido es garantizar el desarrollo y expansi\u00f3n de la World Wide Web , red de redes o internet. Validador HTML Validador CSS","title":"Validadores de c\u00f3digo"},{"location":"disenoWeb/herramientas/#tratamiento-del-color","text":"Existen varias herramientas para gestionar la paleta de colores de un sitio web. En orden alfab\u00e9tico, las opciones recomendadas son:","title":"Tratamiento del color"},{"location":"disenoWeb/herramientas/#adobe-color","text":"Licencia: Privativa. Uso gratuito con limitaciones. Plataformas soportadas: Web Web oficial: color.adobe.com","title":"Adobe color"},{"location":"disenoWeb/herramientas/#coolors","text":"Licencia: Privativa. Uso gratuito con limitaciones. Plataformas soportadas: Web Web oficial: coolors.co","title":"Coolors"},{"location":"disenoWeb/herramientas/#colorzilla","text":"Licencia: Privativa. Versi\u00f3n gratuita. Plataformas soportadas: Chrome, Firefox, Web Web oficial: colorzilla.com","title":"Colorzilla"},{"location":"disenoWeb/herramientas/#gpick","text":"Licencia: Open Source. Plataformas soportadas: GNU/Linux, Windows Web oficial: gpick.org","title":"gpick"},{"location":"disenoWeb/herramientas/#just-color-picker","text":"Licencia: Privativa. Versi\u00f3n gratuita. Plataformas soportadas: Mac, Windows Web oficial: annystudio.com/software/colorpicker","title":"Just Color Picker"},{"location":"disenoWeb/herramientas/#paletton","text":"Licencia: Privativa. Versi\u00f3n gratuita. Plataformas soportadas: Web Web oficial: paletton.com","title":"Paletton"},{"location":"disenoWeb/herramientas/#navegadores","text":"Para acceder a un sitio web necesitamos s\u00f3lamente un navegador web y conexi\u00f3n a internet. Sin embargo, no todos los navegadores implementan de manera adecuada las resoluciones de la W3C que es la organizaci\u00f3n internacional que determina los est\u00e1ndares a emplear en el dise\u00f1o de los sitios web. Como resultado final, los sitios webs no se visualizan de igual manera en los distintos navegadores. Uso de Internet Explorer Siempre que sea posible se desaconseja el uso del navegador de Microsoft Internet Explorer no s\u00f3lo por cuestiones que dificultan el dise\u00f1o web y la posterior visualizaci\u00f3n de las p\u00e1ginas sino, sobre todo, por cuestiones de seguridad. El presente curso sugiere el empleo de los siguientes navegadores: Google Chrome: google.es/chrome/index.html Mozilla Firefox: mozilla.org/es-AR/firefox/new Opera: opera.com Safari: apple.com/la/safari Microsoft Edge: microsoft.com/es-ar/windows/microsoft-edge","title":"Navegadores"},{"location":"htmlFundamentos/404/","text":"Oops! \u00b6 Esta p\u00e1gina est\u00e1 en proceso de elaboraci\u00f3n.","title":"Oops!"},{"location":"htmlFundamentos/404/#oops","text":"Esta p\u00e1gina est\u00e1 en proceso de elaboraci\u00f3n.","title":"Oops!"},{"location":"htmlFundamentos/ElementosBloqueLinea/","text":"Elementos en bloque y en l\u00ednea \u00b6 Las etiquetas HTML pueden agruparse de manera general en elementos en bloque y elementos en l\u00ednea . La diferencia fundamental entre \u00e9stos dos grupos de elementos es que al emplear los primeros se crea una nueva l\u00ednea para contenerlos; los elementos en l\u00ednea, en cambio, conviven en la misma l\u00ednea con otros elementos presentes en la misma. Ejemplo 11 \u00b6 Copi\u00e1 el siguiente c\u00f3digo y guardalo con el nombre ejemplo_11.html : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 11 </ title > </ head > < body > <!-- Span --> < span > N\u00famero 1 </ span > < span > N\u00famero 2 </ span > < span > N\u00famero 3 </ span > <!-- Div --> < div > Letra A </ div > < div > Letra B </ div > < div > Letra C </ div > </ body > </ html > \u00bfQu\u00e9 hemos hecho? En el ejemplo, hemos empleado dos tipos de etiquetas: <span> y <div> . Cada etiqueta representa a un tipo de elemento: en l\u00ednea y en bloque. Los elementos en bloque (block) son aquellos que generan un nuevo rengl\u00f3n al ser empleados. Los elementos en l\u00ednea (inline), en cambio, pueden colocarse uno al lado del otro sin generar un nuevo rengl\u00f3n. \u00bfA qu\u00e9 tipo de elemento representa la etiqueta <span> y la etiqueta <div> ? La estiqueta <span> es un ejemplo de elemento en l\u00ednea La etiqueta <div> es un ejemplo de elemento en bloque Para saber m\u00e1s Pod\u00e9s consultar cu\u00e1les son los elementos que pertenecen a un grupo y a otro en: Elementos en bloque Elementos en l\u00ednea","title":"Tipos de elementos"},{"location":"htmlFundamentos/ElementosBloqueLinea/#elementos-en-bloque-y-en-linea","text":"Las etiquetas HTML pueden agruparse de manera general en elementos en bloque y elementos en l\u00ednea . La diferencia fundamental entre \u00e9stos dos grupos de elementos es que al emplear los primeros se crea una nueva l\u00ednea para contenerlos; los elementos en l\u00ednea, en cambio, conviven en la misma l\u00ednea con otros elementos presentes en la misma.","title":"Elementos en bloque y en l\u00ednea"},{"location":"htmlFundamentos/ElementosBloqueLinea/#ejemplo-11","text":"Copi\u00e1 el siguiente c\u00f3digo y guardalo con el nombre ejemplo_11.html : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 11 </ title > </ head > < body > <!-- Span --> < span > N\u00famero 1 </ span > < span > N\u00famero 2 </ span > < span > N\u00famero 3 </ span > <!-- Div --> < div > Letra A </ div > < div > Letra B </ div > < div > Letra C </ div > </ body > </ html > \u00bfQu\u00e9 hemos hecho? En el ejemplo, hemos empleado dos tipos de etiquetas: <span> y <div> . Cada etiqueta representa a un tipo de elemento: en l\u00ednea y en bloque. Los elementos en bloque (block) son aquellos que generan un nuevo rengl\u00f3n al ser empleados. Los elementos en l\u00ednea (inline), en cambio, pueden colocarse uno al lado del otro sin generar un nuevo rengl\u00f3n. \u00bfA qu\u00e9 tipo de elemento representa la etiqueta <span> y la etiqueta <div> ? La estiqueta <span> es un ejemplo de elemento en l\u00ednea La etiqueta <div> es un ejemplo de elemento en bloque Para saber m\u00e1s Pod\u00e9s consultar cu\u00e1les son los elementos que pertenecen a un grupo y a otro en: Elementos en bloque Elementos en l\u00ednea","title":"Ejemplo 11"},{"location":"htmlFundamentos/Enlaces/","text":"Enlaces \u00b6 Los documentos de hipertexto o p\u00e1ginas webs no ser\u00edan tales si no estuviesen vinculadas unos con otros posibilitando, de esta manera, la navegaci\u00f3n entre la abundante y vasta informaci\u00f3n disponible en internet. La etiqueta HTML que permite estas conexiones se conoce como enlace o link . Ejemplo 7 \u00b6 Abr\u00ed el editor de texto y transcrib\u00ed el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 7 </ title > </ head > < body > < h3 > Viaj\u00e1 a otra dimensi\u00f3n! </ h3 > < p > Hac\u00e9 clic < a href = \"ejemplo_07_enlace.html\" > sobre este enlace </ a ></ p > </ body > </ html > Guarda el archivo con el nombre ejemplo_07.html . Ahora, con el editor abierto, cre\u00e1 otro archivo con el siguiente contenido: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 7 </ title > </ head > < body > < h3 > Hola! Soy otra p\u00e1gina. </ h3 > < p > Mejor vuelvo a < a href = \"ejemplo_07.html\" > la p\u00e1gina anterior </ a ></ p > . </ body > </ html > Guardalo con el nombre ejemplo_07_enlace.html . Ahora abr\u00ed cualquiera de los dos documentos creados con el navegador y hac\u00e9 clic sobre los enlaces creados para probar su funcionamiento. \u00bfQu\u00e9 hemos hecho? Hemos creado dos documentos HTML que estan \"vinculados\" a trav\u00e9s de un enlace o link . Para ello, usamos la etiqueta <a></a> y en el atributo href , hemos indicado el documento al cual queremos ir, cada vez que hagamos clic sobre el enlace. \u00bfCu\u00e1l es la funci\u00f3n del atributo href ? Indica el documento -o direcci\u00f3n web- a la que apunta un determinado enlace. En el ejemplo usamos enlaces entre documentos, pero podr\u00edamos haber colocado una direcci\u00f3n web (como www.google.com ) en el valor de href . De esta manera, al hacer clic sobre el enlace \u00e9ste nos dirigir\u00eda hacia dicha URL.","title":"Enlaces"},{"location":"htmlFundamentos/Enlaces/#enlaces","text":"Los documentos de hipertexto o p\u00e1ginas webs no ser\u00edan tales si no estuviesen vinculadas unos con otros posibilitando, de esta manera, la navegaci\u00f3n entre la abundante y vasta informaci\u00f3n disponible en internet. La etiqueta HTML que permite estas conexiones se conoce como enlace o link .","title":"Enlaces"},{"location":"htmlFundamentos/Enlaces/#ejemplo-7","text":"Abr\u00ed el editor de texto y transcrib\u00ed el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 7 </ title > </ head > < body > < h3 > Viaj\u00e1 a otra dimensi\u00f3n! </ h3 > < p > Hac\u00e9 clic < a href = \"ejemplo_07_enlace.html\" > sobre este enlace </ a ></ p > </ body > </ html > Guarda el archivo con el nombre ejemplo_07.html . Ahora, con el editor abierto, cre\u00e1 otro archivo con el siguiente contenido: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 7 </ title > </ head > < body > < h3 > Hola! Soy otra p\u00e1gina. </ h3 > < p > Mejor vuelvo a < a href = \"ejemplo_07.html\" > la p\u00e1gina anterior </ a ></ p > . </ body > </ html > Guardalo con el nombre ejemplo_07_enlace.html . Ahora abr\u00ed cualquiera de los dos documentos creados con el navegador y hac\u00e9 clic sobre los enlaces creados para probar su funcionamiento. \u00bfQu\u00e9 hemos hecho? Hemos creado dos documentos HTML que estan \"vinculados\" a trav\u00e9s de un enlace o link . Para ello, usamos la etiqueta <a></a> y en el atributo href , hemos indicado el documento al cual queremos ir, cada vez que hagamos clic sobre el enlace. \u00bfCu\u00e1l es la funci\u00f3n del atributo href ? Indica el documento -o direcci\u00f3n web- a la que apunta un determinado enlace. En el ejemplo usamos enlaces entre documentos, pero podr\u00edamos haber colocado una direcci\u00f3n web (como www.google.com ) en el valor de href . De esta manera, al hacer clic sobre el enlace \u00e9ste nos dirigir\u00eda hacia dicha URL.","title":"Ejemplo 7"},{"location":"htmlFundamentos/EstructuraDocumento/","text":"Introducci\u00f3n a HTML \u00b6 HTML es un lenguaje de marcado . Es decir, a trav\u00e9s de ciertas marcas o etiquetas , es posible indicar al navegador (Chrome, Firefox, Internet Explorer -Edge-, Opera, Safari, etc.) c\u00f3mo est\u00e1 estructurada un documento HTML o p\u00e1gina web. Las etiquetas HTML pueden escribirse en may\u00fasculas o en min\u00fasculas, sin embargo es recomendable escribirlas siempre en min\u00fasculas. Anatom\u00eda de una etiqueta \u00b6 Como se dijo, HTML es un lenguaje de etiquetas (tambi\u00e9n llamado lenguaje de marcado) y las p\u00e1ginas web est\u00e1n formadas por cientos o miles de pares de etiquetas. Las etiquetas se usan para indicar las diferentes secciones que componen un documento digital, marcando el inicio y el final de cada secci\u00f3n. La estructura t\u00edpica de una etiqueta es: < SoyUnaEtiqueta > (Ac\u00e1 ir\u00eda algo como texto, imagen, video, etc.) </ SoyUnaEtiqueta > Entonces: Una etiqueta est\u00e1 contenida entre los signos de menor que ( < ) y mayor que ( > ). En general las etiquetas est\u00e1n formadas por pares Exite una etiqueta de apertura ( <SoyUnaEtiqueta> ) y otra de cierre ( </SoyUnaEtiqueta> ). Casi todas las etiquetas soportan el uso de atributos que no son m\u00e1s que opciones adicionales con las que cuenta cada tipo de etiqueta. Su sintaxis es: < SoyUnaEtiqueta atributo = \"valor\" > (...Algo...) </ SoyUnaEtiqueta > Si ahora aplicamos todas estas nociones aprendidas a un ejemplo de etiqueta HTML: Estructura del documento \u00b6 Las p\u00e1ginas HTML se dividen en dos partes: la cabecera y el cuerpo . La cabecera incluye informaci\u00f3n sobre la propia p\u00e1gina, como por ejemplo su t\u00edtulo y su idioma. El cuerpo de la p\u00e1gina incluye todos sus contenidos, como p\u00e1rrafos de texto e im\u00e1genes. Si ahora incluimos las etiquetas que definen la estructura de un documento HTML, tenemos que: El documento queda delimitado entre las etiquetas html . La cabecera queda definida entre las etiquetas head y contiene todo lo que el usuario no ve en su pantalla. El cuerpo est\u00e1 comprendido entre las etiquetas body y contiene todo lo que el usuario ve en su pantalla. Lleg\u00f3 la hora del c\u00f3digo. \u00a1Manos a la obra! Ejemplo 1 \u00b6 Abr\u00ed el editor de texto y transcrib\u00ed el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 <!DOCTYPE html> < html > < head > < title > Ejemplo 1 </ title > </ head > < body > \u00a1Hola mundo! </ body > </ html > Guardalo con el nombre de ejemplo_01.html . Luego, abr\u00ed el archivo con tu navegador. \u00bfQu\u00e9 hemos hecho? En este ejemplo hemos creado nuestro primer documento HTML. En el mismo, podr\u00e1s apreciar unas l\u00edneas de c\u00f3digo que representan la estructura b\u00e1sica de un documento HTML. \u00bfCu\u00e1l es la funci\u00f3n de la etiqueta DOCTYPE ? La etiqueta DOCTYPE (tipo de documento) se coloca al inicio del documento (por \u00fanica vez) y su funci\u00f3n es indicar al navegador el tipo de documento. En nuestro ejemplo, indica que se trata de un documento HTML: <!DOCTYPE html> \u00bfQu\u00e9 pas\u00f3 con texto encerrado por la etiqueta title ? C\u00f3mo lo mencionamos antes, todo lo que est\u00e1 dentro de la etiqueta head no es visible en la pantalla del usuario. \u00a1Y la etiqueta title se encuentra dentro de la etiqueta head !. Sin embargo en este caso excepcional, aunque el texto no es visible en la ventada del navegador, s\u00ed se visualiza en la barra de t\u00edtulo del mismo. \u00a1Comprobalo! Ejemplo 2 \u00b6 Copi\u00e1 el siguiente c\u00f3digo en un nuevo archivo: 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html > < head > < title > Ejemplo 2 </ title > </ head > < body > <!-- \u00a1Hola mundo! --> \u00a1Esta es mi segunda p\u00e1gina! </ body > </ html > Guarda el archivo con el nombre ejemplo_02.html y abrilo con el navegador. \u00bfQu\u00e9 hemos hecho Hemos creado un documento HTML que incluye un comentario HTML. \u00c9stos son visibles s\u00f3lo si inspeccionamos el c\u00f3digo de una p\u00e1gina, pero no son visibles en la pantalla del usuario. Los comentarios son \u00fatiles para los desarrolladores, como un medio para realizar anotaciones. \u00bfCu\u00e1l es la sintaxis de un comentario HTML? Un comentario HTML siempre comienza con los s\u00edmbolos <!-- y finaliza con los s\u00edmbolos --> .","title":"Estructura HTML"},{"location":"htmlFundamentos/EstructuraDocumento/#introduccion-a-html","text":"HTML es un lenguaje de marcado . Es decir, a trav\u00e9s de ciertas marcas o etiquetas , es posible indicar al navegador (Chrome, Firefox, Internet Explorer -Edge-, Opera, Safari, etc.) c\u00f3mo est\u00e1 estructurada un documento HTML o p\u00e1gina web. Las etiquetas HTML pueden escribirse en may\u00fasculas o en min\u00fasculas, sin embargo es recomendable escribirlas siempre en min\u00fasculas.","title":"Introducci\u00f3n a HTML"},{"location":"htmlFundamentos/EstructuraDocumento/#anatomia-de-una-etiqueta","text":"Como se dijo, HTML es un lenguaje de etiquetas (tambi\u00e9n llamado lenguaje de marcado) y las p\u00e1ginas web est\u00e1n formadas por cientos o miles de pares de etiquetas. Las etiquetas se usan para indicar las diferentes secciones que componen un documento digital, marcando el inicio y el final de cada secci\u00f3n. La estructura t\u00edpica de una etiqueta es: < SoyUnaEtiqueta > (Ac\u00e1 ir\u00eda algo como texto, imagen, video, etc.) </ SoyUnaEtiqueta > Entonces: Una etiqueta est\u00e1 contenida entre los signos de menor que ( < ) y mayor que ( > ). En general las etiquetas est\u00e1n formadas por pares Exite una etiqueta de apertura ( <SoyUnaEtiqueta> ) y otra de cierre ( </SoyUnaEtiqueta> ). Casi todas las etiquetas soportan el uso de atributos que no son m\u00e1s que opciones adicionales con las que cuenta cada tipo de etiqueta. Su sintaxis es: < SoyUnaEtiqueta atributo = \"valor\" > (...Algo...) </ SoyUnaEtiqueta > Si ahora aplicamos todas estas nociones aprendidas a un ejemplo de etiqueta HTML:","title":"Anatom\u00eda de una etiqueta"},{"location":"htmlFundamentos/EstructuraDocumento/#estructura-del-documento","text":"Las p\u00e1ginas HTML se dividen en dos partes: la cabecera y el cuerpo . La cabecera incluye informaci\u00f3n sobre la propia p\u00e1gina, como por ejemplo su t\u00edtulo y su idioma. El cuerpo de la p\u00e1gina incluye todos sus contenidos, como p\u00e1rrafos de texto e im\u00e1genes. Si ahora incluimos las etiquetas que definen la estructura de un documento HTML, tenemos que: El documento queda delimitado entre las etiquetas html . La cabecera queda definida entre las etiquetas head y contiene todo lo que el usuario no ve en su pantalla. El cuerpo est\u00e1 comprendido entre las etiquetas body y contiene todo lo que el usuario ve en su pantalla. Lleg\u00f3 la hora del c\u00f3digo. \u00a1Manos a la obra!","title":"Estructura del documento"},{"location":"htmlFundamentos/EstructuraDocumento/#ejemplo-1","text":"Abr\u00ed el editor de texto y transcrib\u00ed el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 <!DOCTYPE html> < html > < head > < title > Ejemplo 1 </ title > </ head > < body > \u00a1Hola mundo! </ body > </ html > Guardalo con el nombre de ejemplo_01.html . Luego, abr\u00ed el archivo con tu navegador. \u00bfQu\u00e9 hemos hecho? En este ejemplo hemos creado nuestro primer documento HTML. En el mismo, podr\u00e1s apreciar unas l\u00edneas de c\u00f3digo que representan la estructura b\u00e1sica de un documento HTML. \u00bfCu\u00e1l es la funci\u00f3n de la etiqueta DOCTYPE ? La etiqueta DOCTYPE (tipo de documento) se coloca al inicio del documento (por \u00fanica vez) y su funci\u00f3n es indicar al navegador el tipo de documento. En nuestro ejemplo, indica que se trata de un documento HTML: <!DOCTYPE html> \u00bfQu\u00e9 pas\u00f3 con texto encerrado por la etiqueta title ? C\u00f3mo lo mencionamos antes, todo lo que est\u00e1 dentro de la etiqueta head no es visible en la pantalla del usuario. \u00a1Y la etiqueta title se encuentra dentro de la etiqueta head !. Sin embargo en este caso excepcional, aunque el texto no es visible en la ventada del navegador, s\u00ed se visualiza en la barra de t\u00edtulo del mismo. \u00a1Comprobalo!","title":"Ejemplo 1"},{"location":"htmlFundamentos/EstructuraDocumento/#ejemplo-2","text":"Copi\u00e1 el siguiente c\u00f3digo en un nuevo archivo: 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html > < head > < title > Ejemplo 2 </ title > </ head > < body > <!-- \u00a1Hola mundo! --> \u00a1Esta es mi segunda p\u00e1gina! </ body > </ html > Guarda el archivo con el nombre ejemplo_02.html y abrilo con el navegador. \u00bfQu\u00e9 hemos hecho Hemos creado un documento HTML que incluye un comentario HTML. \u00c9stos son visibles s\u00f3lo si inspeccionamos el c\u00f3digo de una p\u00e1gina, pero no son visibles en la pantalla del usuario. Los comentarios son \u00fatiles para los desarrolladores, como un medio para realizar anotaciones. \u00bfCu\u00e1l es la sintaxis de un comentario HTML? Un comentario HTML siempre comienza con los s\u00edmbolos <!-- y finaliza con los s\u00edmbolos --> .","title":"Ejemplo 2"},{"location":"htmlFundamentos/Formularios/","text":"Formularios \u00b6 Los formularios permiten que el usuario interact\u00fae con la p\u00e1gina web mediante la introducci\u00f3n de informaci\u00f3n que luego ser\u00e1 procesada por el servidor web y elaborar\u00e1 una respuesta. Ejemplo 9 \u00b6 Para poder interactuar con la p\u00e1gina es necesario el empleo de formularios . \u00c9stos, a su vez, presentan distintos tipos de campos dependiendo del tipo de informaci\u00f3n que se desea ingresar. Copi\u00e1 el siguiente c\u00f3digo y guardalo con el nombre ejemplo_09.html : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 9 </ title > </ head > < body > <!-- Inicio del formulario --> < form > Usuario: < input type = \"text\" placeholder = \"Ingres\u00e1 tu usuario\" /> < br /> Contrase\u00f1a: < input type = \"password\" placeholder = \"Ingres\u00e1 tu contrase\u00f1a\" /> < br /> < input type = \"submit\" value = \"Enviar\" /> </ form > <!-- Fin del formulario --> </ body > </ html > \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML que contiene un formulario simple. Los formularios son \u00fatiles para enviar informaci\u00f3n. \u00bfCu\u00e1l es la funci\u00f3n de las etiquetas form e input ? La etiqueta form determina donde comienza y finaliza un formulario. La etiqueta input representa a los distintos elementos o \u00edtems que componen al formulario, de manera similar a la etiqueta li de las listas \u00bfCu\u00e1l es la funci\u00f3n de los atributos type , placeholder y value ? El atributo m\u00e1s importante es sin duda type , puesto que determina el formato que tendr\u00e1 un determinado campo del formulario con el fin de recabar la informaci\u00f3n que suministren los usuarios. Algunos tipos son: campo de texto, casillas de verificaci\u00f3n, botones de radio, men\u00fa desplegable, calendario, etc. Para saber m\u00e1s, pod\u00e9s consultar la documentaci\u00f3n al respecto . placeholder se emplea para exhibir un texto adicional o de \"ayuda para el usuario\" en determinados campos de un formulario. value representa un valor a mostrar en pantalla. Generalmente est\u00e1 asociado al texto que llevan los botones. Importante Para que sea posible procesar la informaci\u00f3n enviada a trav\u00e9s de un formulario, es necesario emplear alg\u00fan lenguaje de programaci\u00f3n . Ejemplo 10 \u00b6 En este ejemplo, deber\u00e1s crear un archivo con el siguiente c\u00f3digo, guardandolo con el nombre de ejemplo_10.html . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 10 </ title > </ head > < body > < h1 > Formularios </ h1 > < h3 > Tipos de campos para el ingreso de datos </ h3 > <!-- Inicio del formulario --> < form > < p > Campo de texto </ p > < input type = \"text\" /> < p > Campo de texto (con sugerencia) </ p > < input type = \"text\" placeholder = \"Un texto por ac\u00e1\" /> < p > Campo de contrase\u00f1a </ p > < input type = \"password\" /> < p > Selector num\u00e9rico </ p > < input type = \"number\" value = \"5\" min = \"1\" max = \"10\" /> < p > Selector de rango </ p > < input type = \"range\" min = \"0\" max = \"100\" /> < p > Selector de color </ p > < input type = \"color\" /> < p > Selector de fecha </ p > < input type = \"date\" /> < p > \u00c1rea de texto </ p > < textarea rows = \"10\" cols = \"30\" ></ textarea > < p > Botones de radio </ p > < input type = \"radio\" name = \"equipo\" value = \"boca\" checked /> Boca Juniors < br /> < input type = \"radio\" name = \"equipo\" value = \"banfield\" /> Banfield < br /> < input type = \"radio\" name = \"equipo\" value = \"otros\" /> Otros < p > Botones de opci\u00f3n </ p > < input type = \"checkbox\" name = \"bicicleta\" value = \"bicicleta\" /> Bicicleta < br /> < input type = \"checkbox\" name = \"automovil\" value = \"automovil\" /> Autom\u00f3vil < br /> < input type = \"checkbox\" name = \"colectivo\" value = \"colectivo\" checked /> Colectivo < p > Selector </ p > < select > < option > Comida Italiana </ option > < option > Comida China </ option > < option selected = \"selected\" > Comida Japonesa </ option > </ select > < p > Campo de email </ p > < input type = \"email\" name = \"email\" /> < p > Bot\u00f3n </ p > < input type = \"button\" onclick = \"alert('Hola mundo!')\" value = \"Hac\u00e9 clic\" /> < p > Bot\u00f3n de reseteo </ p > < input type = \"reset\" value = \"Limpiar\" /> < p > Campo de env\u00edo (submit) </ p > < input type = \"submit\" value = \"Enviar\" /> </ form > <!-- Fin del formulario --> </ body > </ html > \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML que exhibe distintos campos de formulario o input , utilizados para obtener informaci\u00f3n proporcionada por los usuarios.","title":"Formularios"},{"location":"htmlFundamentos/Formularios/#formularios","text":"Los formularios permiten que el usuario interact\u00fae con la p\u00e1gina web mediante la introducci\u00f3n de informaci\u00f3n que luego ser\u00e1 procesada por el servidor web y elaborar\u00e1 una respuesta.","title":"Formularios"},{"location":"htmlFundamentos/Formularios/#ejemplo-9","text":"Para poder interactuar con la p\u00e1gina es necesario el empleo de formularios . \u00c9stos, a su vez, presentan distintos tipos de campos dependiendo del tipo de informaci\u00f3n que se desea ingresar. Copi\u00e1 el siguiente c\u00f3digo y guardalo con el nombre ejemplo_09.html : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 9 </ title > </ head > < body > <!-- Inicio del formulario --> < form > Usuario: < input type = \"text\" placeholder = \"Ingres\u00e1 tu usuario\" /> < br /> Contrase\u00f1a: < input type = \"password\" placeholder = \"Ingres\u00e1 tu contrase\u00f1a\" /> < br /> < input type = \"submit\" value = \"Enviar\" /> </ form > <!-- Fin del formulario --> </ body > </ html > \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML que contiene un formulario simple. Los formularios son \u00fatiles para enviar informaci\u00f3n. \u00bfCu\u00e1l es la funci\u00f3n de las etiquetas form e input ? La etiqueta form determina donde comienza y finaliza un formulario. La etiqueta input representa a los distintos elementos o \u00edtems que componen al formulario, de manera similar a la etiqueta li de las listas \u00bfCu\u00e1l es la funci\u00f3n de los atributos type , placeholder y value ? El atributo m\u00e1s importante es sin duda type , puesto que determina el formato que tendr\u00e1 un determinado campo del formulario con el fin de recabar la informaci\u00f3n que suministren los usuarios. Algunos tipos son: campo de texto, casillas de verificaci\u00f3n, botones de radio, men\u00fa desplegable, calendario, etc. Para saber m\u00e1s, pod\u00e9s consultar la documentaci\u00f3n al respecto . placeholder se emplea para exhibir un texto adicional o de \"ayuda para el usuario\" en determinados campos de un formulario. value representa un valor a mostrar en pantalla. Generalmente est\u00e1 asociado al texto que llevan los botones. Importante Para que sea posible procesar la informaci\u00f3n enviada a trav\u00e9s de un formulario, es necesario emplear alg\u00fan lenguaje de programaci\u00f3n .","title":"Ejemplo 9"},{"location":"htmlFundamentos/Formularios/#ejemplo-10","text":"En este ejemplo, deber\u00e1s crear un archivo con el siguiente c\u00f3digo, guardandolo con el nombre de ejemplo_10.html . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 10 </ title > </ head > < body > < h1 > Formularios </ h1 > < h3 > Tipos de campos para el ingreso de datos </ h3 > <!-- Inicio del formulario --> < form > < p > Campo de texto </ p > < input type = \"text\" /> < p > Campo de texto (con sugerencia) </ p > < input type = \"text\" placeholder = \"Un texto por ac\u00e1\" /> < p > Campo de contrase\u00f1a </ p > < input type = \"password\" /> < p > Selector num\u00e9rico </ p > < input type = \"number\" value = \"5\" min = \"1\" max = \"10\" /> < p > Selector de rango </ p > < input type = \"range\" min = \"0\" max = \"100\" /> < p > Selector de color </ p > < input type = \"color\" /> < p > Selector de fecha </ p > < input type = \"date\" /> < p > \u00c1rea de texto </ p > < textarea rows = \"10\" cols = \"30\" ></ textarea > < p > Botones de radio </ p > < input type = \"radio\" name = \"equipo\" value = \"boca\" checked /> Boca Juniors < br /> < input type = \"radio\" name = \"equipo\" value = \"banfield\" /> Banfield < br /> < input type = \"radio\" name = \"equipo\" value = \"otros\" /> Otros < p > Botones de opci\u00f3n </ p > < input type = \"checkbox\" name = \"bicicleta\" value = \"bicicleta\" /> Bicicleta < br /> < input type = \"checkbox\" name = \"automovil\" value = \"automovil\" /> Autom\u00f3vil < br /> < input type = \"checkbox\" name = \"colectivo\" value = \"colectivo\" checked /> Colectivo < p > Selector </ p > < select > < option > Comida Italiana </ option > < option > Comida China </ option > < option selected = \"selected\" > Comida Japonesa </ option > </ select > < p > Campo de email </ p > < input type = \"email\" name = \"email\" /> < p > Bot\u00f3n </ p > < input type = \"button\" onclick = \"alert('Hola mundo!')\" value = \"Hac\u00e9 clic\" /> < p > Bot\u00f3n de reseteo </ p > < input type = \"reset\" value = \"Limpiar\" /> < p > Campo de env\u00edo (submit) </ p > < input type = \"submit\" value = \"Enviar\" /> </ form > <!-- Fin del formulario --> </ body > </ html > \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML que exhibe distintos campos de formulario o input , utilizados para obtener informaci\u00f3n proporcionada por los usuarios.","title":"Ejemplo 10"},{"location":"htmlFundamentos/Imagenes/","text":"Im\u00e1genes \u00b6 Vivimos en la era de la imagen y los sitios webs propagan millones de instant\u00e1neas a lo largo y ancho de internet. En estos ejemplos aprenderemos a insertar im\u00e1genes en los documentos HTML. Ejemplo 8 \u00b6 Importante Este ejemplo incluye una imagen . La misma deber\u00e1 ubicarse en la misma carpeta que el archivo HTML de ejemplo. Abr\u00ed el editor de texto y transcrib\u00ed el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 8 </ title > </ head > < body > < h3 > Este es el ejemplo 8 </ h3 > < img src = \"html5.png\" /> </ body > </ html > Guarda el archivo con el nombre ejemplo_08.html . Abr\u00ed el docuemento con un navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML que contiene una imagen. \u00bfCu\u00e1l es la funci\u00f3n del atributo img ? La etiqueta img se emplea para vincular im\u00e1genes a un documento HTML \u00bfCu\u00e1l es la funci\u00f3n del atributo src ? El atributo src \u00f3 source , se emplea para indicar el nombre y la ubicaci\u00f3n de un recurso determinado. \u00bfUna etiqueta impar? Si observaste bien, habr\u00e1s notado que la etiqueta <img src=\"html5.png\" /> se autocierra . Ess decir, no posee una etiqueta para la apertura y otra para el cierre ( <img></img> no existe). Otra etiqueta que se autocierra es <br /> \u00f3 breaking rule . Genera saltos de l\u00ednea. \u00a1Comprobalo! Agregala en el documento anterior, seg\u00fan: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 8 </ title > </ head > < body > < h3 > Este es el ejemplo 8 </ h3 > < br /> < br /> < br /> < br /> < br /> < img src = \"html5.png\" /> </ body > </ html > Sin embargo, no son las \u00fanicas etiquetas \"auto-cerradas\". Existen otras etiquetas \"impares\", es decir, que no poseen etiqueta de cierre.","title":"Im\u00e1genes"},{"location":"htmlFundamentos/Imagenes/#imagenes","text":"Vivimos en la era de la imagen y los sitios webs propagan millones de instant\u00e1neas a lo largo y ancho de internet. En estos ejemplos aprenderemos a insertar im\u00e1genes en los documentos HTML.","title":"Im\u00e1genes"},{"location":"htmlFundamentos/Imagenes/#ejemplo-8","text":"Importante Este ejemplo incluye una imagen . La misma deber\u00e1 ubicarse en la misma carpeta que el archivo HTML de ejemplo. Abr\u00ed el editor de texto y transcrib\u00ed el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 8 </ title > </ head > < body > < h3 > Este es el ejemplo 8 </ h3 > < img src = \"html5.png\" /> </ body > </ html > Guarda el archivo con el nombre ejemplo_08.html . Abr\u00ed el docuemento con un navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML que contiene una imagen. \u00bfCu\u00e1l es la funci\u00f3n del atributo img ? La etiqueta img se emplea para vincular im\u00e1genes a un documento HTML \u00bfCu\u00e1l es la funci\u00f3n del atributo src ? El atributo src \u00f3 source , se emplea para indicar el nombre y la ubicaci\u00f3n de un recurso determinado. \u00bfUna etiqueta impar? Si observaste bien, habr\u00e1s notado que la etiqueta <img src=\"html5.png\" /> se autocierra . Ess decir, no posee una etiqueta para la apertura y otra para el cierre ( <img></img> no existe). Otra etiqueta que se autocierra es <br /> \u00f3 breaking rule . Genera saltos de l\u00ednea. \u00a1Comprobalo! Agregala en el documento anterior, seg\u00fan: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 8 </ title > </ head > < body > < h3 > Este es el ejemplo 8 </ h3 > < br /> < br /> < br /> < br /> < br /> < img src = \"html5.png\" /> </ body > </ html > Sin embargo, no son las \u00fanicas etiquetas \"auto-cerradas\". Existen otras etiquetas \"impares\", es decir, que no poseen etiqueta de cierre.","title":"Ejemplo 8"},{"location":"htmlFundamentos/ListasTablas/","text":"Listas y tablas \u00b6 En los ejemplos anteriores aprendimos como jerarquizar y organizar el texto. En ocasiones nos encontraremos ante la necesidad de presentar informaci\u00f3n de una manera ordenada y de r\u00e1pida lectura. Para ello existen las listas y tablas. Ejemplo 5 \u00b6 Abr\u00ed el editor de texto y copi\u00e1 el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 5 </ title > </ head > < body > < ul > < li > Cuaderno </ li > < li > Lapicera </ li > < li > Goma </ li > < li > Pendrive </ li > </ ul > < ol > < li > Bebe </ li > < li > Ni\u00f1o </ li > < li > Adolescente </ li > < li > Joven </ li > </ ol > </ body > </ html > Guarda el archivo con el nombre ejemplo_05.html y abrilo con el navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML que incluye listas ordenadas y listas desordenadas. \u00bfCu\u00e1l es la funci\u00f3n de las etiquetas ol , ul y li ? Son las etiquetas que definen listas en un documento HTML: ol \u2192 Ordered List \u00f3 listas ordenadas, organiza los \u00edtems con una sucesi\u00f3n num\u00e9rica (1, 2, 3, etc.). ul \u2192 Unordered List \u00f3 listas desordenadas, muestra los \u00edtems con vi\u00f1etas. li \u2192 List \u00f3 \u00edtems, que indica los elementos que conforman la lista, tanto en listas ordenadas como desordenadas. Ejemplo 6 \u00b6 Abr\u00ed el editor de texto y transcrib\u00ed el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <!DOCTYPE html> < html > < head > < title > Ejemplo 8 </ title > </ head > < body > < table > < tr > < td > Celda 1 </ td > < td > Celda 2 </ td > < td > Celda 3 </ td > </ tr > < tr > < td > Celda 4 </ td > < td > Celda 5 </ td > < td > Celda 6 </ td > </ tr > </ table > </ body > </ html > Guardalo con el nombre de ejemplo_06.html . Luego, abr\u00ed el archivo con tu navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML con una tabla que contiene dos filas y dos columnas. Las tablas son \u00fatiles para organizar informaci\u00f3n dentro de un documento. \u00bfCu\u00e1l es la funci\u00f3n de las etiquetas table , tr y td ? Son las etiquetas que definen a una tabla en un documento HTML: La etiqueta table determina el comienzo y final de una tabla. La etiqueta tr representa a las columnas de una tabla La etiqueta td representa a las filas de una tabla. Bordes de una tabla Para poder visualizar los bordes de una tablar, debemos incliur el atributo border dentro de la etiqueta de apertura table , seg\u00fan se muestra en el siguiente ejemplo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <!DOCTYPE html> < html > < head > < title > Ejemplo 8 </ title > </ head > < body > < table border = \"1\" > < tr > < td > Celda 1 </ td > < td > Celda 2 </ td > < td > Celda 3 </ td > </ tr > < tr > < td > Celda 4 </ td > < td > Celda 5 </ td > < td > Celda 6 </ td > </ tr > </ table > </ body > </ html >","title":"Listas y tablas"},{"location":"htmlFundamentos/ListasTablas/#listas-y-tablas","text":"En los ejemplos anteriores aprendimos como jerarquizar y organizar el texto. En ocasiones nos encontraremos ante la necesidad de presentar informaci\u00f3n de una manera ordenada y de r\u00e1pida lectura. Para ello existen las listas y tablas.","title":"Listas y tablas"},{"location":"htmlFundamentos/ListasTablas/#ejemplo-5","text":"Abr\u00ed el editor de texto y copi\u00e1 el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 5 </ title > </ head > < body > < ul > < li > Cuaderno </ li > < li > Lapicera </ li > < li > Goma </ li > < li > Pendrive </ li > </ ul > < ol > < li > Bebe </ li > < li > Ni\u00f1o </ li > < li > Adolescente </ li > < li > Joven </ li > </ ol > </ body > </ html > Guarda el archivo con el nombre ejemplo_05.html y abrilo con el navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML que incluye listas ordenadas y listas desordenadas. \u00bfCu\u00e1l es la funci\u00f3n de las etiquetas ol , ul y li ? Son las etiquetas que definen listas en un documento HTML: ol \u2192 Ordered List \u00f3 listas ordenadas, organiza los \u00edtems con una sucesi\u00f3n num\u00e9rica (1, 2, 3, etc.). ul \u2192 Unordered List \u00f3 listas desordenadas, muestra los \u00edtems con vi\u00f1etas. li \u2192 List \u00f3 \u00edtems, que indica los elementos que conforman la lista, tanto en listas ordenadas como desordenadas.","title":"Ejemplo 5"},{"location":"htmlFundamentos/ListasTablas/#ejemplo-6","text":"Abr\u00ed el editor de texto y transcrib\u00ed el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <!DOCTYPE html> < html > < head > < title > Ejemplo 8 </ title > </ head > < body > < table > < tr > < td > Celda 1 </ td > < td > Celda 2 </ td > < td > Celda 3 </ td > </ tr > < tr > < td > Celda 4 </ td > < td > Celda 5 </ td > < td > Celda 6 </ td > </ tr > </ table > </ body > </ html > Guardalo con el nombre de ejemplo_06.html . Luego, abr\u00ed el archivo con tu navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML con una tabla que contiene dos filas y dos columnas. Las tablas son \u00fatiles para organizar informaci\u00f3n dentro de un documento. \u00bfCu\u00e1l es la funci\u00f3n de las etiquetas table , tr y td ? Son las etiquetas que definen a una tabla en un documento HTML: La etiqueta table determina el comienzo y final de una tabla. La etiqueta tr representa a las columnas de una tabla La etiqueta td representa a las filas de una tabla. Bordes de una tabla Para poder visualizar los bordes de una tablar, debemos incliur el atributo border dentro de la etiqueta de apertura table , seg\u00fan se muestra en el siguiente ejemplo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 <!DOCTYPE html> < html > < head > < title > Ejemplo 8 </ title > </ head > < body > < table border = \"1\" > < tr > < td > Celda 1 </ td > < td > Celda 2 </ td > < td > Celda 3 </ td > </ tr > < tr > < td > Celda 4 </ td > < td > Celda 5 </ td > < td > Celda 6 </ td > </ tr > </ table > </ body > </ html >","title":"Ejemplo 6"},{"location":"htmlFundamentos/Propuesta/","text":"Nos introduciremos en el estudio de los fundamentos del lenguaje de marcado HTML a trav\u00e9s de ejemplos y ejercicios. Para seguir el curso, s\u00f3lo necesitar\u00e1s un navegador moderno y un editor de texto . Importante Durante todo el curso, la pr\u00e1ctica ser\u00e1 fundamental. Por lo tanto, es recomendable que transcribas a mano los fragmentos de c\u00f3digo que se ofrecen en cada ejercicio, evitando copiar y pegar.","title":"\u00bfQu\u00e9 aprenderemos?"},{"location":"htmlFundamentos/TitularesParrafos/","text":"Comenzamos a jerarquizar el texto de una p\u00e1gina, colocando t\u00edtulos y separ\u00e1ndolo en p\u00e1rrafos. Ejemplo 3 \u00b6 Abr\u00ed el editor de texto y copi\u00e1 el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 3 </ title > </ head > < body > < h1 > Hola mundo! </ h1 > < h2 > Hola mundo! </ h2 > < h3 > Hola mundo! </ h3 > < h4 > Hola mundo! </ h4 > < h5 > Hola mundo! </ h5 > < h6 > Hola mundo! </ h6 > </ body > </ html > Guarda el archivo con el nombre ejemplo_03.html y abrilo con el navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML con diversos tipos de t\u00edtulos. \u00bfQu\u00e9 funci\u00f3n cumplen las etiquetas h1 a h6 ? Nos proporcionan un medio para escribir titulares con distintos tama\u00f1os o importancia. De mayor ( h1 ) a menor tama\u00f1o ( h6 ) . Ejemplo 4 \u00b6 Abr\u00ed el editor de texto y copi\u00e1 el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 4 </ title > </ head > < body > Esta es una l\u00ednea de texto. Esta es otra l\u00ednea de texto. \u00bfSe ubicar\u00e1 debajo de la primera? </ body > </ html > Guarda el archivo con el nombre ejemplo_04.html y abrilo con el navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML con dos l\u00ednas de texto, una debajo de la otra. \u00bfC\u00f3mo se visualizan las l\u00edneas de texto que escribimos? Se muestran una al lado de la otra, en un mismo \"rengl\u00f3n\" a pesar de haber sido escritas una debajo de la otra. Ahora, volv\u00e9 a abrir el archivo con el editor de texto y realiz\u00e1 las siguientes modificaciones: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 4 </ title > </ head > < body > < p > Esta es una l\u00ednea de texto. </ p > < p > Esta es otra l\u00ednea de texto. Se ubicar\u00e1 debajo de la primera? </ p > </ body > </ html > \u00bfCu\u00e1l es la funci\u00f3n de la etiqueta p ? El texto encerrado entre la etiqueta <p></p> forma un p\u00e1rrafo. Es decir, un bloque de texto que se diferencia del resto por un \"punto y aparte\". Como habr\u00e1s podido observar, la l\u00ednea inferior se muetra ahora en un \"nuevo rengl\u00f3n\".","title":"T\u00edtulos y p\u00e1rrafos"},{"location":"htmlFundamentos/TitularesParrafos/#ejemplo-3","text":"Abr\u00ed el editor de texto y copi\u00e1 el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 3 </ title > </ head > < body > < h1 > Hola mundo! </ h1 > < h2 > Hola mundo! </ h2 > < h3 > Hola mundo! </ h3 > < h4 > Hola mundo! </ h4 > < h5 > Hola mundo! </ h5 > < h6 > Hola mundo! </ h6 > </ body > </ html > Guarda el archivo con el nombre ejemplo_03.html y abrilo con el navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML con diversos tipos de t\u00edtulos. \u00bfQu\u00e9 funci\u00f3n cumplen las etiquetas h1 a h6 ? Nos proporcionan un medio para escribir titulares con distintos tama\u00f1os o importancia. De mayor ( h1 ) a menor tama\u00f1o ( h6 ) .","title":"Ejemplo 3"},{"location":"htmlFundamentos/TitularesParrafos/#ejemplo-4","text":"Abr\u00ed el editor de texto y copi\u00e1 el siguiente c\u00f3digo: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 4 </ title > </ head > < body > Esta es una l\u00ednea de texto. Esta es otra l\u00ednea de texto. \u00bfSe ubicar\u00e1 debajo de la primera? </ body > </ html > Guarda el archivo con el nombre ejemplo_04.html y abrilo con el navegador. \u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML con dos l\u00ednas de texto, una debajo de la otra. \u00bfC\u00f3mo se visualizan las l\u00edneas de texto que escribimos? Se muestran una al lado de la otra, en un mismo \"rengl\u00f3n\" a pesar de haber sido escritas una debajo de la otra. Ahora, volv\u00e9 a abrir el archivo con el editor de texto y realiz\u00e1 las siguientes modificaciones: 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = es > < head > < meta charset = \"UTF-8\" > < title > Ejemplo 4 </ title > </ head > < body > < p > Esta es una l\u00ednea de texto. </ p > < p > Esta es otra l\u00ednea de texto. Se ubicar\u00e1 debajo de la primera? </ p > </ body > </ html > \u00bfCu\u00e1l es la funci\u00f3n de la etiqueta p ? El texto encerrado entre la etiqueta <p></p> forma un p\u00e1rrafo. Es decir, un bloque de texto que se diferencia del resto por un \"punto y aparte\". Como habr\u00e1s podido observar, la l\u00ednea inferior se muetra ahora en un \"nuevo rengl\u00f3n\".","title":"Ejemplo 4"},{"location":"htmlFundamentos/WebSemantica/","text":"Web sem\u00e1ntica \u00b6 Existen algunas etiquetas HTML que no poseen relaci\u00f3n directa con la apariencia de una p\u00e1gina sino que indican el tipo de contenido de una p\u00e1gina, su significado. Se trata de las etiquetas sem\u00e1nticas , incluidas en la \u00faltima definici\u00f3n de HTML (HTML 5) . A grandes rasgos podr\u00edamos destacar las principales etiquetas sem\u00e1nticas: Ejemplo 12 \u00b6 A continuaci\u00f3n vamos a crear un nuevo archivo llamado ejemplo_12.html : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" /> < title > Web sem\u00e1ntica </ title > </ head > < body > < main > < header > < h1 > Hardware Tech </ h1 > < h2 > Empresa l\u00edder en insumos inform\u00e1ticos </ h2 > < nav > < ul > < li >< a href = \"inicio.html\" > Inicio </ li > < li >< a href = \"somos.hmtl\" > Quienes somos </ li > < li >< a href = \"productos.html\" > Productos </ li > </ ul > </ nav > </ header > < section > < article > < h2 > Noticia A </ h2 > < p > Contenido de la Noticia A. </ p > </ article > < article > < h2 > Noticia B </ h2 > < p > Contenido de la Noticia B. </ p > </ article > </ section > < section > < article > < h1 > Productos </ h1 > < ul > < li > Accesorios </ li > < li > Hardware </ li > < li > Software </ li > </ ul > < footer > < p > Cat\u00e1logo actualizado al 23 de marzo de 2017 </ p > </ footer > </ article > </ section > < section > < footer > < address > < a href = \"http://www.misitio.com/contacto\" > Contacto </ a >< br /> Hardware Tech < br /> Empedrado 1981 < br /> (1832)Lomas de Zamora < br /> </ address > </ footer > </ section > < aside > < p > Visit\u00e1 nuestro Blog </ p > < p > Seguinos en Twitter </ p > </ aside > </ main > </ body > </ html > !!! info \"\u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML empleando las nuevas etiquetas sem\u00e1ntivas, disponibles a partir de HTML 5. \u00bfEn qu\u00e9 consisten cada una de las etiquets sem\u00e1nticas? <section> define una secci\u00f3n en un documento <nav> define una secci\u00f3n que solamente contiene enlaces de navegaci\u00f3n. <article> define contenido aut\u00f3nomo que podr\u00eda existir independientemente del resto del contenido. <aside> define algunos contenidos vagamente relacionados con el resto del contenido de la p\u00e1gina. Si es removido, el contenido restante seguir\u00e1 teniendo sentido. <header> define la cabecera de una p\u00e1gina o secci\u00f3n. Usualmente contiene un logotipo, el t\u00edtulo del sitio Web y una tabla de navegaci\u00f3n de contenidos. <footer> define el pie de una p\u00e1gina o secci\u00f3n. Usualmente contiene un mensaje de derechos de autor\u00eda, algunos enlaces a informaci\u00f3n legal o direcciones para dar informaci\u00f3n de retroalimentaci\u00f3n. <address> define una secci\u00f3n que contiene informaci\u00f3n de contacto. <main> define el contenido principal o importante en el documento. Solamente existe un elemento <main> en el documento.","title":"Web sem\u00e1ntica"},{"location":"htmlFundamentos/WebSemantica/#web-semantica","text":"Existen algunas etiquetas HTML que no poseen relaci\u00f3n directa con la apariencia de una p\u00e1gina sino que indican el tipo de contenido de una p\u00e1gina, su significado. Se trata de las etiquetas sem\u00e1nticas , incluidas en la \u00faltima definici\u00f3n de HTML (HTML 5) . A grandes rasgos podr\u00edamos destacar las principales etiquetas sem\u00e1nticas:","title":"Web sem\u00e1ntica"},{"location":"htmlFundamentos/WebSemantica/#ejemplo-12","text":"A continuaci\u00f3n vamos a crear un nuevo archivo llamado ejemplo_12.html : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 <!DOCTYPE html> < html lang = \"es\" > < head > < meta charset = \"UTF-8\" /> < title > Web sem\u00e1ntica </ title > </ head > < body > < main > < header > < h1 > Hardware Tech </ h1 > < h2 > Empresa l\u00edder en insumos inform\u00e1ticos </ h2 > < nav > < ul > < li >< a href = \"inicio.html\" > Inicio </ li > < li >< a href = \"somos.hmtl\" > Quienes somos </ li > < li >< a href = \"productos.html\" > Productos </ li > </ ul > </ nav > </ header > < section > < article > < h2 > Noticia A </ h2 > < p > Contenido de la Noticia A. </ p > </ article > < article > < h2 > Noticia B </ h2 > < p > Contenido de la Noticia B. </ p > </ article > </ section > < section > < article > < h1 > Productos </ h1 > < ul > < li > Accesorios </ li > < li > Hardware </ li > < li > Software </ li > </ ul > < footer > < p > Cat\u00e1logo actualizado al 23 de marzo de 2017 </ p > </ footer > </ article > </ section > < section > < footer > < address > < a href = \"http://www.misitio.com/contacto\" > Contacto </ a >< br /> Hardware Tech < br /> Empedrado 1981 < br /> (1832)Lomas de Zamora < br /> </ address > </ footer > </ section > < aside > < p > Visit\u00e1 nuestro Blog </ p > < p > Seguinos en Twitter </ p > </ aside > </ main > </ body > </ html > !!! info \"\u00bfQu\u00e9 hemos hecho? Hemos creado un documento HTML empleando las nuevas etiquetas sem\u00e1ntivas, disponibles a partir de HTML 5. \u00bfEn qu\u00e9 consisten cada una de las etiquets sem\u00e1nticas? <section> define una secci\u00f3n en un documento <nav> define una secci\u00f3n que solamente contiene enlaces de navegaci\u00f3n. <article> define contenido aut\u00f3nomo que podr\u00eda existir independientemente del resto del contenido. <aside> define algunos contenidos vagamente relacionados con el resto del contenido de la p\u00e1gina. Si es removido, el contenido restante seguir\u00e1 teniendo sentido. <header> define la cabecera de una p\u00e1gina o secci\u00f3n. Usualmente contiene un logotipo, el t\u00edtulo del sitio Web y una tabla de navegaci\u00f3n de contenidos. <footer> define el pie de una p\u00e1gina o secci\u00f3n. Usualmente contiene un mensaje de derechos de autor\u00eda, algunos enlaces a informaci\u00f3n legal o direcciones para dar informaci\u00f3n de retroalimentaci\u00f3n. <address> define una secci\u00f3n que contiene informaci\u00f3n de contacto. <main> define el contenido principal o importante en el documento. Solamente existe un elemento <main> en el documento.","title":"Ejemplo 12"},{"location":"htmlFundamentos/anexo/","text":"Evaluaciones \u00b6 1er Evaluaci\u00f3n","title":"Anexo"},{"location":"htmlFundamentos/anexo/#evaluaciones","text":"1er Evaluaci\u00f3n","title":"Evaluaciones"}]}